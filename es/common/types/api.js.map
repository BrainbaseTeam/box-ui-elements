{"version":3,"sources":["../../../src/common/types/api.js"],"names":["HTTP_GET","HTTP_POST","HTTP_PUT","HTTP_DELETE","HTTP_OPTIONS","HTTP_HEAD","JSON_PATCH_OP_ADD","JSON_PATCH_OP_REMOVE","JSON_PATCH_OP_REPLACE","JSON_PATCH_OP_TEST"],"mappings":"AACA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,EAAwCC,WAAxC,EAAqDC,YAArD,EAAmEC,SAAnE,QAAoF,iBAApF;AACA,SAASC,iBAAT,EAA4BC,oBAA5B,EAAkDC,qBAAlD,EAAyEC,kBAAzE,QAAmG,cAAnG","sourcesContent":["// @flow\nimport { HTTP_GET, HTTP_POST, HTTP_PUT, HTTP_DELETE, HTTP_OPTIONS, HTTP_HEAD } from '../../constants';\nimport { JSON_PATCH_OP_ADD, JSON_PATCH_OP_REMOVE, JSON_PATCH_OP_REPLACE, JSON_PATCH_OP_TEST } from '../constants';\nimport type { ElementOrigin } from '../../elements/common/flowTypes';\nimport type { StringAnyMap, StringMap, Token } from './core';\nimport type APICache from '../../utils/Cache';\n\ntype Method =\n    | typeof HTTP_DELETE\n    | typeof HTTP_GET\n    | typeof HTTP_POST\n    | typeof HTTP_OPTIONS\n    | typeof HTTP_HEAD\n    | typeof HTTP_PUT;\n\ntype JSONPatch = {\n    op:\n        | typeof JSON_PATCH_OP_ADD\n        | typeof JSON_PATCH_OP_REMOVE\n        | typeof JSON_PATCH_OP_REPLACE\n        | typeof JSON_PATCH_OP_TEST,\n    path: string,\n    value?: any,\n};\n\ntype JSONPatchOperations = Array<JSONPatch>;\n\ntype RequestOptions = {\n    fields?: Array<string>,\n    forceFetch?: boolean,\n    noPagination?: boolean,\n    refreshCache?: boolean,\n};\n\ntype PayloadType = StringAnyMap | Array<StringAnyMap>;\n\ntype RequestData = {\n    data: PayloadType,\n    headers?: StringMap,\n    id?: string,\n    params?: StringAnyMap,\n    url: string,\n};\n\ntype ErrorResponseData = {\n    code: string,\n    context_info: Object,\n    help_url: string,\n    message: string,\n    request_id: string,\n    status: number,\n    type: 'error',\n};\n\ntype ElementsXhrError = $AxiosError<any> | ErrorResponseData;\n\ntype ElementsError = {\n    code: string,\n    context_info: Object,\n    message: string,\n    origin: ElementOrigin,\n    type: 'error',\n};\n\ntype ErrorContextProps = {\n    onError: (error: ElementsXhrError | Error, code: string, contextInfo?: Object, origin?: ElementOrigin) => void,\n};\n\ntype ElementsErrorCallback = (e: ElementsXhrError, code: string, contextInfo?: Object) => void;\n\ntype APIOptions = {\n    apiHost?: string,\n    cache?: APICache,\n    clientName?: string,\n    consoleError?: boolean,\n    consoleLog?: boolean,\n    id?: string,\n    language?: string,\n    requestInterceptor?: Function,\n    responseInterceptor?: Function,\n    retryableStatusCodes?: Array<number>,\n    sharedLink?: string,\n    sharedLinkPassword?: string,\n    shouldRetry?: boolean,\n    token: Token,\n    uploadHost?: string,\n    version?: string,\n};\n\nexport type {\n    APIOptions,\n    ElementOrigin,\n    ElementsError,\n    ElementsErrorCallback,\n    ElementsXhrError,\n    ErrorContextProps,\n    ErrorResponseData,\n    RequestData,\n    RequestOptions,\n    JSONPatchOperations,\n    Method,\n    PayloadType,\n};\n"],"file":"api.js"}