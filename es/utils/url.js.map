{"version":3,"sources":["../../src/utils/url.js"],"names":["Uri","updateQueryParameters","url","queryParams","uri","Object","keys","forEach","key","value","hasQueryParam","replaceQueryParam","addQueryParam","toString"],"mappings":"AAAA;;;;;AAKA,OAAOA,GAAP,MAAgB,OAAhB;AAEA;;;;;;;;AAOA,SAASC,qBAAT,CAA+BC,GAA/B,EAA4CC,WAA5C,EAAyE;AACrE,MAAI,CAACA,WAAL,EAAkB;AACd,WAAOD,GAAP;AACH;;AAED,MAAME,GAAG,GAAG,IAAIJ,GAAJ,CAAQE,GAAR,CAAZ;AAEAG,EAAAA,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,OAAzB,CAAiC,UAAAC,GAAG,EAAI;AACpC,QAAMC,KAAK,GAAGN,WAAW,CAACK,GAAD,CAAzB;;AAEA,QAAI,CAACC,KAAL,EAAY;AACR;AACH;;AAED,QAAIL,GAAG,CAACM,aAAJ,CAAkBF,GAAlB,CAAJ,EAA4B;AACxBJ,MAAAA,GAAG,CAACO,iBAAJ,CAAsBH,GAAtB,EAA2BC,KAA3B;AACA;AACH;;AAEDL,IAAAA,GAAG,CAACQ,aAAJ,CAAkBJ,GAAlB,EAAuBC,KAAvB;AACH,GAbD;AAeA,SAAOL,GAAG,CAACS,QAAJ,EAAP;AACH,C,CAED;;;AACA,SAASZ,qBAAT","sourcesContent":["/**\n * @flow\n * @file Utility functions for urls\n * @author Box\n */\nimport Uri from 'jsuri';\n\n/**\n * Update URL query parameters\n *\n * @param {string} url - the url that contains the potential query parameter string\n * @param {Object} queryParams\n * @return {string}\n */\nfunction updateQueryParameters(url: string, queryParams: Object): string {\n    if (!queryParams) {\n        return url;\n    }\n\n    const uri = new Uri(url);\n\n    Object.keys(queryParams).forEach(key => {\n        const value = queryParams[key];\n\n        if (!value) {\n            return;\n        }\n\n        if (uri.hasQueryParam(key)) {\n            uri.replaceQueryParam(key, value);\n            return;\n        }\n\n        uri.addQueryParam(key, value);\n    });\n\n    return uri.toString();\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport { updateQueryParameters };\n"],"file":"url.js"}