{"version":3,"sources":["../../src/utils/Browser.js"],"names":["isDashSupported","Browser","global","navigator","userAgent","test","getUserAgent","recheck","mse","MediaSource","isTypeSupported"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA,IAAIA,eAAJ;;IAEMC,O;;;;;;;;AACF;AACJ;AACA;AACA;AACA;AACA;mCACkC;AAC1B,aAAOC,MAAM,CAACC,SAAP,CAAiBC,SAAxB;AACH;AAED;AACJ;AACA;AACA;AACA;;;;+BAC+B;AACvB;AACA,aAAO,kEAAkEC,IAAlE,CAAuEJ,OAAO,CAACK,YAAR,EAAvE,CAAP;AACH;AAED;AACJ;AACA;AACA;AACA;;;;2BACkB;AACV,aAAO,WAAWD,IAAX,CAAgBJ,OAAO,CAACK,YAAR,EAAhB,CAAP;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;kCACiD;AAAA,UAA1BC,OAA0B,uEAAP,KAAO;;AACzC,UAAI,OAAOP,eAAP,KAA2B,WAA3B,IAA0CO,OAA9C,EAAuD;AACnD,YAAMC,GAAG,GAAGN,MAAM,CAACO,WAAnB;AACAT,QAAAA,eAAe,GACX,CAAC,CAACQ,GAAF,IACA,OAAOA,GAAG,CAACE,eAAX,KAA+B,UAD/B,IAEAF,GAAG,CAACE,eAAJ,CAAoB,iCAApB,CAHJ;AAIH;;AAED,aAAOV,eAAP;AACH;;;;;;AAGL,eAAeC,OAAf","sourcesContent":["/**\n * @flow\n * @file Helper for some browser utilities\n * @author Box\n */\n\nlet isDashSupported;\n\nclass Browser {\n    /**\n     * Returns the user agent.\n     * Helps in mocking out.\n     *\n     * @return {String} navigator userAgent\n     */\n    static getUserAgent(): string {\n        return global.navigator.userAgent;\n    }\n\n    /**\n     * Returns whether browser is mobile.\n     *\n     * @return {boolean} Whether browser is mobile\n     */\n    static isMobile(): boolean {\n        // Relying on the user agent to avoid desktop browsers on machines with touch screens.\n        return /iphone|ipad|ipod|android|blackberry|bb10|mini|windows\\sce|palm/i.test(Browser.getUserAgent());\n    }\n\n    /**\n     * Returns whether browser is IE.\n     *\n     * @return {boolena} Whether browser is IE\n     */\n    static isIE() {\n        return /Trident/i.test(Browser.getUserAgent());\n    }\n\n    /**\n     * Checks the browser for Dash support using H264 high.\n     * Dash requires MediaSource extensions to exist and be applicable\n     * to the H264 container (since we use H264 and not webm)\n     *\n     * @public\n     * @param { boolean} recheck - recheck support\n     * @return {boolean} true if dash is usable\n     */\n    static canPlayDash(recheck: boolean = false) {\n        if (typeof isDashSupported === 'undefined' || recheck) {\n            const mse = global.MediaSource;\n            isDashSupported =\n                !!mse &&\n                typeof mse.isTypeSupported === 'function' &&\n                mse.isTypeSupported('video/mp4; codecs=\"avc1.64001E\"');\n        }\n\n        return isDashSupported;\n    }\n}\n\nexport default Browser;\n"],"file":"Browser.js"}