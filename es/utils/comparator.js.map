{"version":3,"sources":["../../src/utils/comparator.js"],"names":["TYPE_FILE","TYPE_FOLDER","SORT_DESC","FIELD_MODIFIED_AT","FIELD_INTERACTED_AT","FIELD_NAME","FIELD_SIZE","sortBy","sortDirection","cache","invert","a","b","itemA","get","itemB","itemAType","type","itemBType","itemAName","name","itemBName","itemADate","Date","parse","modified_at","itemBDate","itemAInteractedDate","interacted_at","itemBInteractedDate","itemASize","size","itemBSize","toLowerCase","Error"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Function to sort item list\n * @author Box\n */\n\nimport {\n    TYPE_FILE,\n    TYPE_FOLDER,\n    SORT_DESC,\n    FIELD_MODIFIED_AT,\n    FIELD_INTERACTED_AT,\n    FIELD_NAME,\n    FIELD_SIZE,\n} from '../constants';\nimport type { SortBy, SortDirection, ItemType, BoxItem } from '../common/types/core';\nimport type APICache from './Cache';\n\n/**\n * Comparator function for sorting files and folders\n *\n * @param {string} sortBy field to sort by\n * @param {string} sortDirection desc or asc\n * @return {Function} comparator function\n */\nexport default function(sortBy: SortBy, sortDirection: SortDirection, cache: APICache): Function {\n    const invert: number = sortDirection === SORT_DESC ? 1 : -1;\n    return (a: string, b: string): number => {\n        const itemA: BoxItem = cache.get(a);\n        const itemB: BoxItem = cache.get(b);\n\n        const itemAType: ItemType = itemA.type || TYPE_FILE;\n        const itemBType: ItemType = itemB.type || TYPE_FILE;\n        const itemAName: string = itemA.name || '';\n        const itemBName: string = itemB.name || '';\n        const itemADate: number = Date.parse(itemA.modified_at || '0');\n        const itemBDate: number = Date.parse(itemB.modified_at || '0');\n        const itemAInteractedDate: number = Date.parse(itemA.interacted_at || itemA.modified_at || '0');\n        const itemBInteractedDate: number = Date.parse(itemB.interacted_at || itemB.modified_at || '0');\n        const itemASize: number = itemA.size || 0;\n        const itemBSize: number = itemB.size || 0;\n\n        // If a and b are of the same type, then use sortBy\n        if (itemAType === itemBType) {\n            if (sortBy === FIELD_NAME) {\n                if (itemAName.toLowerCase() > itemBName.toLowerCase()) return -1 * invert;\n                if (itemAName.toLowerCase() < itemBName.toLowerCase()) return 1 * invert;\n            } else if (sortBy === FIELD_MODIFIED_AT) {\n                if (itemADate > itemBDate) return -1 * invert;\n                if (itemADate < itemBDate) return 1 * invert;\n            } else if (sortBy === FIELD_INTERACTED_AT) {\n                if (itemAInteractedDate > itemBInteractedDate) return -1 * invert;\n                if (itemAInteractedDate < itemBInteractedDate) return 1 * invert;\n            } else if (sortBy === FIELD_SIZE) {\n                if (itemASize > itemBSize) return -1 * invert;\n                if (itemASize < itemBSize) return 1 * invert;\n            } else {\n                // Should never reach here\n                throw new Error('Unsupported sort field!');\n            }\n\n            return 0;\n        }\n\n        // If a and b are of different types, then use type to sort\n        // Folder > File > WebLink\n        if (itemAType === TYPE_FOLDER) return -1;\n        if (itemBType === TYPE_FOLDER) return 1;\n        if (itemAType === TYPE_FILE) return -1;\n        if (itemBType === TYPE_FILE) return 1;\n\n        // Should never reach here\n        throw new Error('Error in sort comparator!');\n    };\n}\n"],"file":"comparator.js"}