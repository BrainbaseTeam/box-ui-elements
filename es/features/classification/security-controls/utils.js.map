{"version":3,"sources":["../../../../src/features/classification/security-controls/utils.js"],"names":["getProp","isNil","appRestrictionsMessageMap","downloadRestrictionsMessageMap","messages","ACCESS_POLICY_RESTRICTION","APP_RESTRICTION_MESSAGE_TYPE","DOWNLOAD_CONTROL","LIST_ACCESS_LEVEL","SHARED_LINK_ACCESS_LEVEL","SHARED_LINK","DOWNLOAD","EXTERNAL_COLLAB","APP","DEFAULT","WITH_APP_LIST","WITH_OVERFLOWN_APP_LIST","DESKTOP","MOBILE","WEB","BLOCK","WHITELIST","BLACKLIST","COLLAB_ONLY","COLLAB_AND_COMPANY_ONLY","PUBLIC","getShortSecurityControlsMessage","controls","sharedLink","download","externalCollab","app","sharing","accessLevel","message","shortAllRestrictions","shortSharingDownload","shortSharingApp","shortDownloadApp","shortSharing","shortDownload","shortApp","getSharedLinkMessages","items","push","sharingCollabOnly","sharingCollabAndCompanyOnly","getExternalCollabMessages","externalCollabBlock","externalCollabDomainList","getAppDownloadMessages","maxAppCount","appDownloadRestricted","apps","length","appsToDisplay","slice","remainingAppCount","appNames","map","displayText","join","appsList","values","tooltipMessage","allAppNames","messageType","getDownloadMessages","web","mobile","desktop","downloadRestrictions","platform","restrictions","Object","keys","forEach","platformKey","restrictExternalUsers","restrictManagedUsers","externalRestricted","externalAllowed","default","getFullSecurityControlsMessages"],"mappings":"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","sourcesContent":["// @flow\nimport getProp from 'lodash/get';\nimport isNil from 'lodash/isNil';\n\nimport type { Controls, MessageItem } from '../flowTypes';\n\nimport appRestrictionsMessageMap from './appRestrictionsMessageMap';\nimport downloadRestrictionsMessageMap from './downloadRestrictionsMessageMap';\nimport messages from './messages';\nimport {\n    ACCESS_POLICY_RESTRICTION,\n    APP_RESTRICTION_MESSAGE_TYPE,\n    DOWNLOAD_CONTROL,\n    LIST_ACCESS_LEVEL,\n    SHARED_LINK_ACCESS_LEVEL,\n} from '../constants';\n\nconst { SHARED_LINK, DOWNLOAD, EXTERNAL_COLLAB, APP } = ACCESS_POLICY_RESTRICTION;\nconst { DEFAULT, WITH_APP_LIST, WITH_OVERFLOWN_APP_LIST } = APP_RESTRICTION_MESSAGE_TYPE;\nconst { DESKTOP, MOBILE, WEB } = DOWNLOAD_CONTROL;\nconst { BLOCK, WHITELIST, BLACKLIST } = LIST_ACCESS_LEVEL;\nconst { COLLAB_ONLY, COLLAB_AND_COMPANY_ONLY, PUBLIC } = SHARED_LINK_ACCESS_LEVEL;\n\nconst getShortSecurityControlsMessage = (controls: Controls): ?MessageItem => {\n    const { sharedLink, download, externalCollab, app } = controls;\n    // Shared link and external collab restrictions are grouped\n    // together as generic \"sharing\" restrictions\n    const sharing = (sharedLink && sharedLink.accessLevel !== PUBLIC) || externalCollab;\n\n    if (sharing && download && app) {\n        return { message: messages.shortAllRestrictions };\n    }\n\n    if (sharing && download) {\n        return { message: messages.shortSharingDownload };\n    }\n\n    if (sharing && app) {\n        return { message: messages.shortSharingApp };\n    }\n\n    if (download && app) {\n        return { message: messages.shortDownloadApp };\n    }\n\n    if (sharing) {\n        return { message: messages.shortSharing };\n    }\n\n    if (download) {\n        return { message: messages.shortDownload };\n    }\n\n    if (app) {\n        return { message: messages.shortApp };\n    }\n\n    return null;\n};\n\nconst getSharedLinkMessages = (controls: Controls): Array<MessageItem> => {\n    const items = [];\n    const accessLevel = getProp(controls, `${SHARED_LINK}.accessLevel`);\n\n    switch (accessLevel) {\n        case COLLAB_ONLY:\n            items.push({ message: messages.sharingCollabOnly });\n            break;\n        case COLLAB_AND_COMPANY_ONLY:\n            items.push({ message: messages.sharingCollabAndCompanyOnly });\n            break;\n        default:\n            // no-op\n            break;\n    }\n    return items;\n};\n\nconst getExternalCollabMessages = (controls: Controls): Array<MessageItem> => {\n    const items = [];\n    const accessLevel = getProp(controls, `${EXTERNAL_COLLAB}.accessLevel`);\n\n    switch (accessLevel) {\n        case BLOCK:\n            items.push({ message: messages.externalCollabBlock });\n            break;\n        case WHITELIST:\n        case BLACKLIST:\n            items.push({ message: messages.externalCollabDomainList });\n            break;\n        default:\n            // no-op\n            break;\n    }\n    return items;\n};\n\nconst getAppDownloadMessages = (controls: Controls, maxAppCount?: number): Array<MessageItem> => {\n    const items = [];\n    const accessLevel = getProp(controls, `${APP}.accessLevel`);\n\n    switch (accessLevel) {\n        case BLOCK:\n            items.push({ message: messages.appDownloadRestricted });\n            break;\n        case WHITELIST:\n        case BLACKLIST: {\n            const apps = getProp(controls, `${APP}.apps`, []);\n\n            maxAppCount = isNil(maxAppCount) ? apps.length : maxAppCount;\n            const appsToDisplay = apps.slice(0, maxAppCount);\n            const remainingAppCount = apps.slice(maxAppCount).length;\n            const appNames = appsToDisplay.map(({ displayText }) => displayText).join(', ');\n\n            if (remainingAppCount) {\n                const appsList = apps.map(({ displayText }) => displayText).join(', ');\n\n                items.push({\n                    message: {\n                        ...appRestrictionsMessageMap[accessLevel][WITH_OVERFLOWN_APP_LIST],\n                        values: { appNames, remainingAppCount },\n                    },\n                    tooltipMessage: {\n                        ...messages.allAppNames,\n                        values: { appsList },\n                    },\n                });\n            } else {\n                // Display list of apps if available, otherwise use generic\n                // app restriction copy\n                const messageType = apps.length ? WITH_APP_LIST : DEFAULT;\n\n                items.push({\n                    message: {\n                        ...appRestrictionsMessageMap[accessLevel][messageType],\n                        values: { appNames },\n                    },\n                });\n            }\n            break;\n        }\n        default:\n            // no-op\n            break;\n    }\n    return items;\n};\n\nconst getDownloadMessages = (controls: Controls): Array<MessageItem> => {\n    const items = [];\n    const { web, mobile, desktop } = getProp(controls, DOWNLOAD, {});\n\n    const downloadRestrictions = {\n        [WEB]: {\n            platform: WEB,\n            restrictions: web,\n        },\n        [MOBILE]: {\n            platform: MOBILE,\n            restrictions: mobile,\n        },\n        [DESKTOP]: {\n            platform: DESKTOP,\n            restrictions: desktop,\n        },\n    };\n\n    Object.keys(downloadRestrictions).forEach(platformKey => {\n        const { platform, restrictions } = downloadRestrictions[platformKey];\n\n        if (!restrictions) {\n            return;\n        }\n        const { restrictExternalUsers, restrictManagedUsers } = restrictions;\n\n        if (restrictManagedUsers && restrictExternalUsers) {\n            items.push({ message: downloadRestrictionsMessageMap[platform].externalRestricted[restrictManagedUsers] });\n        } else if (restrictManagedUsers) {\n            items.push({ message: downloadRestrictionsMessageMap[platform].externalAllowed[restrictManagedUsers] });\n        } else if (restrictExternalUsers) {\n            items.push({ message: downloadRestrictionsMessageMap[platform].externalRestricted.default });\n        }\n    });\n\n    return items;\n};\n\nconst getFullSecurityControlsMessages = (controls: Controls, maxAppCount?: number): Array<MessageItem> => {\n    const items = [\n        ...getSharedLinkMessages(controls),\n        ...getExternalCollabMessages(controls),\n        ...getDownloadMessages(controls),\n        ...getAppDownloadMessages(controls, maxAppCount),\n    ];\n    return items;\n};\n\nexport { getShortSecurityControlsMessage, getFullSecurityControlsMessages };\n"],"file":"utils.js"}