{"version":3,"sources":["../../../../src/features/classification/security-controls/SecurityControlsModal.js"],"names":["React","FormattedMessage","Modal","ModalActions","commonMessages","Button","classificationMessages","ClassifiedBadge","Label","messages","SecurityControlsItem","SecurityControlsModal","closeModal","definition","classificationColor","classificationName","isSecurityControlsModalOpen","itemName","modalItems","title","modalTitle","modalDescription","map","message","tooltipMessage","id","close","defaultProps"],"mappings":";;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,SAASC,KAAT,EAAgBC,YAAhB,QAAoC,2BAApC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,sBAAP,MAAmC,aAAnC;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAO,8BAAP;;AAaA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,OAQjB;AAAA,MAPTC,UAOS,QAPTA,UAOS;AAAA,MANTC,UAMS,QANTA,UAMS;AAAA,MALTC,mBAKS,QALTA,mBAKS;AAAA,MAJTC,kBAIS,QAJTA,kBAIS;AAAA,MAHTC,2BAGS,QAHTA,2BAGS;AAAA,MAFTC,QAES,QAFTA,QAES;AAAA,MADTC,UACS,QADTA,UACS;;AACT,MAAI,CAACD,QAAD,IAAa,CAACF,kBAAd,IAAoC,CAACF,UAAzC,EAAqD;AACjD,WAAO,IAAP;AACH;;AAED,MAAMM,KAAK,GAAG,oBAAC,gBAAD,eAAsBV,QAAQ,CAACW,UAA/B;AAA2C,IAAA,MAAM,EAAE;AAAEH,MAAAA,QAAQ,EAARA;AAAF;AAAnD,KAAd;AAEA,SACI,oBAAC,KAAD;AACI,IAAA,SAAS,EAAC,2BADd;AAEI,IAAA,KAAK,EAAEE,KAFX;AAGI,IAAA,cAAc,EAAEP,UAHpB;AAII,IAAA,MAAM,EAAEI;AAJZ,KAMI,+BACI,oBAAC,gBAAD,EAAsBP,QAAQ,CAACY,gBAA/B,CADJ,CANJ,EASI,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAEP,mBAAxB;AAA6C,IAAA,IAAI,EAAIC;AAArD,IATJ,EAUI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAE,oBAAC,gBAAD,EAAsBT,sBAAsB,CAACO,UAA7C;AAAb,KACI;AAAG,IAAA,SAAS,EAAC;AAAb,KAAqDA,UAArD,CADJ,CAVJ,EAaI;AAAI,IAAA,SAAS,EAAC;AAAd,KACKK,UAAU,CAACI,GAAX,CAAe;AAAA,QAAGC,OAAH,SAAGA,OAAH;AAAA,QAAYC,cAAZ,SAAYA,cAAZ;AAAA,WACZ,oBAAC,oBAAD;AAAsB,MAAA,GAAG,EAAED,OAAO,CAACE,EAAnC;AAAuC,MAAA,OAAO,EAAEF,OAAhD;AAAyD,MAAA,cAAc,EAAEC;AAAzE,MADY;AAAA,GAAf,CADL,CAbJ,EAkBI,oBAAC,YAAD,QACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEZ,UAAjB;AAA6B,IAAA,IAAI,EAAC;AAAlC,KACI,oBAAC,gBAAD,EAAsBR,cAAc,CAACsB,KAArC,CADJ,CADJ,CAlBJ,CADJ;AA0BH,CAzCD;;AA2CAf,qBAAqB,CAACgB,YAAtB,GAAqC;AACjCX,EAAAA,2BAA2B,EAAE,KADI;AAEjCE,EAAAA,UAAU,EAAE;AAFqB,CAArC;AAKA,eAAeP,qBAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Modal, ModalActions } from '../../../components/modal';\nimport commonMessages from '../../../common/messages';\nimport Button from '../../../components/button';\nimport classificationMessages from '../messages';\nimport ClassifiedBadge from '../ClassifiedBadge';\nimport Label from '../../../components/label/Label';\nimport messages from './messages';\nimport SecurityControlsItem from './SecurityControlsItem';\nimport './SecurityControlsModal.scss';\nimport type { MessageItem } from '../flowTypes';\n\ntype Props = {\n    classificationColor?: string,\n    classificationName?: string,\n    closeModal: Function,\n    definition?: string,\n    isSecurityControlsModalOpen: boolean,\n    itemName?: string,\n    modalItems: Array<MessageItem>,\n};\n\nconst SecurityControlsModal = ({\n    closeModal,\n    definition,\n    classificationColor,\n    classificationName,\n    isSecurityControlsModalOpen,\n    itemName,\n    modalItems,\n}: Props) => {\n    if (!itemName || !classificationName || !definition) {\n        return null;\n    }\n\n    const title = <FormattedMessage {...messages.modalTitle} values={{ itemName }} />;\n\n    return (\n        <Modal\n            className=\"bdl-SecurityControlsModal\"\n            title={title}\n            onRequestClose={closeModal}\n            isOpen={isSecurityControlsModalOpen}\n        >\n            <p>\n                <FormattedMessage {...messages.modalDescription} />\n            </p>\n            <ClassifiedBadge color={classificationColor} name={((classificationName: any): string)} />\n            <Label text={<FormattedMessage {...classificationMessages.definition} />}>\n                <p className=\"bdl-SecurityControlsModal-definition\">{definition}</p>\n            </Label>\n            <ul className=\"bdl-SecurityControlsModal-controlsItemList\">\n                {modalItems.map(({ message, tooltipMessage }) => (\n                    <SecurityControlsItem key={message.id} message={message} tooltipMessage={tooltipMessage} />\n                ))}\n            </ul>\n            <ModalActions>\n                <Button onClick={closeModal} type=\"button\">\n                    <FormattedMessage {...commonMessages.close} />\n                </Button>\n            </ModalActions>\n        </Modal>\n    );\n};\n\nSecurityControlsModal.defaultProps = {\n    isSecurityControlsModalOpen: false,\n    modalItems: [],\n};\n\nexport default SecurityControlsModal;\n"],"file":"SecurityControlsModal.js"}