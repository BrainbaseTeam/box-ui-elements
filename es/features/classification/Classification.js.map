{"version":3,"sources":["../../../src/features/classification/Classification.js"],"names":["React","FormattedMessage","Label","ClassifiedBadge","messages","STYLE_INLINE","STYLE_TOOLTIP","Classification","definition","className","messageStyle","name","onClick","isClassified","hasDefinition","isTooltipMessageEnabled","isInlineMessageEnabled","isNotClassifiedMessageVisible","undefined","missing"],"mappings":"AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,uBAAP;AAEA,IAAMC,YAAsB,GAAG,QAA/B;AACA,IAAMC,aAAwB,GAAG,SAAjC;;AAUA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAwE;AAAA,MAArEC,UAAqE,QAArEA,UAAqE;AAAA,4BAAzDC,SAAyD;AAAA,MAAzDA,SAAyD,+BAA7C,EAA6C;AAAA,MAAzCC,YAAyC,QAAzCA,YAAyC;AAAA,MAA3BC,IAA2B,QAA3BA,IAA2B;AAAA,MAArBC,OAAqB,QAArBA,OAAqB;AAC3F,MAAMC,YAAY,GAAG,CAAC,CAACF,IAAvB;AACA,MAAMG,aAAa,GAAG,CAAC,CAACN,UAAxB;AACA,MAAMO,uBAAuB,GAAGF,YAAY,IAAIC,aAAhB,IAAiCJ,YAAY,KAAKJ,aAAlF;AACA,MAAMU,sBAAsB,GAAGH,YAAY,IAAIC,aAAhB,IAAiCJ,YAAY,KAAKL,YAAjF;AACA,MAAMY,6BAA6B,GAAG,CAACJ,YAAD,IAAiBH,YAAY,KAAKL,YAAxE;AAEA,sBACI;AAAS,IAAA,SAAS,+BAAwBI,SAAxB;AAAlB,KACKI,YAAY,iBACT,oBAAC,eAAD;AACI,IAAA,IAAI,EAAIF,IADZ;AAEI,IAAA,OAAO,EAAEC,OAFb;AAGI,IAAA,WAAW,EAAEG,uBAAuB,GAAGP,UAAH,GAAgBU;AAHxD,IAFR,EAQKF,sBAAsB,iBACnB,oBAAC,KAAD;AAAO,IAAA,IAAI,eAAE,oBAAC,gBAAD,EAAsBZ,QAAQ,CAACI,UAA/B;AAAb,kBACI;AAAG,IAAA,SAAS,EAAC;AAAb,KAA8CA,UAA9C,CADJ,CATR,EAaKS,6BAA6B,iBAC1B;AAAM,IAAA,SAAS,EAAC;AAAhB,kBACI,oBAAC,gBAAD,EAAsBb,QAAQ,CAACe,OAA/B,CADJ,CAdR,CADJ;AAqBH,CA5BD;;AA8BA,SAASd,YAAT,EAAuBC,aAAvB;AACA,eAAeC,cAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Label from '../../components/label/Label';\nimport ClassifiedBadge from './ClassifiedBadge';\nimport messages from './messages';\nimport './Classification.scss';\n\nconst STYLE_INLINE: 'inline' = 'inline';\nconst STYLE_TOOLTIP: 'tooltip' = 'tooltip';\n\ntype Props = {\n    className?: string,\n    definition?: string,\n    messageStyle?: typeof STYLE_INLINE | typeof STYLE_TOOLTIP,\n    name?: string,\n    onClick?: (event: SyntheticEvent<HTMLButtonElement>) => void,\n};\n\nconst Classification = ({ definition, className = '', messageStyle, name, onClick }: Props) => {\n    const isClassified = !!name;\n    const hasDefinition = !!definition;\n    const isTooltipMessageEnabled = isClassified && hasDefinition && messageStyle === STYLE_TOOLTIP;\n    const isInlineMessageEnabled = isClassified && hasDefinition && messageStyle === STYLE_INLINE;\n    const isNotClassifiedMessageVisible = !isClassified && messageStyle === STYLE_INLINE;\n\n    return (\n        <article className={`bdl-Classification ${className}`}>\n            {isClassified && (\n                <ClassifiedBadge\n                    name={((name: any): string)}\n                    onClick={onClick}\n                    tooltipText={isTooltipMessageEnabled ? definition : undefined}\n                />\n            )}\n            {isInlineMessageEnabled && (\n                <Label text={<FormattedMessage {...messages.definition} />}>\n                    <p className=\"bdl-Classification-definition\">{definition}</p>\n                </Label>\n            )}\n            {isNotClassifiedMessageVisible && (\n                <span className=\"bdl-Classification-missingMessage\">\n                    <FormattedMessage {...messages.missing} />\n                </span>\n            )}\n        </article>\n    );\n};\n\nexport { STYLE_INLINE, STYLE_TOOLTIP };\nexport default Classification;\n"],"file":"Classification.js"}