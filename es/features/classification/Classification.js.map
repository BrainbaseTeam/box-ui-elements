{"version":3,"sources":["../../../src/features/classification/Classification.js"],"names":["React","FormattedDate","FormattedMessage","isValidDate","Label","LoadingIndicator","ClassifiedBadge","SecurityControls","messages","STYLE_INLINE","STYLE_TOOLTIP","Classification","className","color","controls","controlsFormat","definition","isImportedClassification","isLoadingControls","itemName","maxAppCount","messageStyle","modifiedAt","modifiedBy","name","onClick","isClassified","hasDefinition","hasModifiedAt","hasModifiedBy","hasSecurityControls","isTooltipMessageEnabled","isInlineMessageEnabled","isNotClassifiedMessageVisible","isControlsIndicatorEnabled","isSecurityControlsEnabled","modifiedDate","Date","isModifiedMessageVisible","formattedModifiedAt","modifiedByMessage","importedBy","undefined","missing","modifiedByLabel"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedDate, FormattedMessage } from 'react-intl';\n\nimport { isValidDate } from '../../utils/datetime';\nimport Label from '../../components/label/Label';\nimport LoadingIndicator from '../../components/loading-indicator/LoadingIndicator';\nimport ClassifiedBadge from './ClassifiedBadge';\nimport SecurityControls from './security-controls';\nimport messages from './messages';\nimport './Classification.scss';\n\nimport type { Controls, ControlsFormat } from './flowTypes';\n\nconst STYLE_INLINE: 'inline' = 'inline';\nconst STYLE_TOOLTIP: 'tooltip' = 'tooltip';\ntype Props = {\n    className?: string,\n    color?: string,\n    controls?: Controls,\n    controlsFormat?: ControlsFormat,\n    definition?: string,\n    isImportedClassification?: boolean,\n    isLoadingControls?: boolean,\n    itemName?: string,\n    maxAppCount?: number,\n    messageStyle?: typeof STYLE_INLINE | typeof STYLE_TOOLTIP,\n    modifiedAt?: string,\n    modifiedBy?: string,\n    name?: string,\n    onClick?: (event: SyntheticEvent<HTMLButtonElement>) => void,\n};\n\nconst Classification = ({\n    className = '',\n    color,\n    controls,\n    controlsFormat,\n    definition,\n    isImportedClassification = false,\n    isLoadingControls,\n    itemName = '',\n    maxAppCount,\n    messageStyle,\n    modifiedAt,\n    modifiedBy,\n    name,\n    onClick,\n}: Props) => {\n    const isClassified = !!name;\n    const hasDefinition = !!definition;\n    const hasModifiedAt = !!modifiedAt;\n    const hasModifiedBy = !!modifiedBy;\n    const hasSecurityControls = !!controls;\n    const isTooltipMessageEnabled = isClassified && hasDefinition && messageStyle === STYLE_TOOLTIP;\n    const isInlineMessageEnabled = isClassified && hasDefinition && messageStyle === STYLE_INLINE;\n    const isNotClassifiedMessageVisible = !isClassified && messageStyle === STYLE_INLINE;\n    const isControlsIndicatorEnabled = isClassified && isLoadingControls && messageStyle === STYLE_INLINE;\n    const isSecurityControlsEnabled =\n        isClassified && !isLoadingControls && hasSecurityControls && messageStyle === STYLE_INLINE;\n    const modifiedDate = new Date(modifiedAt || 0);\n    const isModifiedMessageVisible =\n        isClassified && hasModifiedAt && isValidDate(modifiedDate) && hasModifiedBy && messageStyle === STYLE_INLINE;\n\n    const formattedModifiedAt = isModifiedMessageVisible && (\n        <FormattedDate value={modifiedDate} month=\"long\" year=\"numeric\" day=\"numeric\" />\n    );\n\n    const modifiedByMessage = isImportedClassification ? messages.importedBy : messages.modifiedBy;\n\n    return (\n        <article className={`bdl-Classification ${className}`}>\n            {isClassified && (\n                <ClassifiedBadge\n                    color={color}\n                    name={((name: any): string)}\n                    onClick={onClick}\n                    tooltipText={isTooltipMessageEnabled ? definition : undefined}\n                />\n            )}\n            {isInlineMessageEnabled && (\n                <Label text={<FormattedMessage {...messages.definition} />}>\n                    <p className=\"bdl-Classification-definition\">{definition}</p>\n                </Label>\n            )}\n            {isNotClassifiedMessageVisible && (\n                <span className=\"bdl-Classification-missingMessage\">\n                    <FormattedMessage {...messages.missing} />\n                </span>\n            )}\n            {isModifiedMessageVisible && (\n                <Label text={<FormattedMessage {...messages.modifiedByLabel} />}>\n                    <p className=\"bdl-Classification-modifiedBy\" data-testid=\"classification-modifiedby\">\n                        <FormattedMessage\n                            {...modifiedByMessage}\n                            values={{ modifiedAt: formattedModifiedAt, modifiedBy }}\n                        />\n                    </p>\n                </Label>\n            )}\n\n            {isSecurityControlsEnabled && (\n                <SecurityControls\n                    classificationColor={color}\n                    classificationName={name}\n                    controls={controls}\n                    controlsFormat={controlsFormat}\n                    definition={definition}\n                    itemName={itemName}\n                    maxAppCount={maxAppCount}\n                    shouldRenderLabel\n                />\n            )}\n            {isControlsIndicatorEnabled && <LoadingIndicator />}\n        </article>\n    );\n};\n\nexport { STYLE_INLINE, STYLE_TOOLTIP };\nexport default Classification;\n"],"file":"Classification.js"}