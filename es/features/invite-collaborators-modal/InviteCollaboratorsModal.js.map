{"version":3,"sources":["../../../src/features/invite-collaborators-modal/InviteCollaboratorsModal.js"],"names":["PropTypes","React","Component","omit","throttle","FormattedMessage","injectIntl","intlShape","UpgradeBadge","Button","InlineNotice","PrimaryButton","Select","TextArea","Link","Modal","ModalActions","ContactDatalistItem","PillSelectorDropdown","parseEmails","RESIN_TAG_TARGET","PermissionFlyout","ReferAFriendAd","messages","commonMessages","COLLAB_ROLE_FOR_FILE","INPUT_DELAY","isSubstring","value","searchString","toLowerCase","indexOf","InviteCollaboratorsModal","props","contacts","state","pillSelectorInputValue","selectedOptions","filter","name","email","id","find","map","type","text","setState","pillSelectorError","onRequestClose","intl","sendInvites","message","permission","length","formatMessage","requiredFieldError","emails","groupIDs","forEach","push","params","join","emailMessage","numsOfInvitees","numOfInviteeGroups","catch","error","invitedEmails","filterInvitedEmails","includes","onUserInput","pills","option","index","slice","splice","validator","invalidEmailError","pattern","test","target","defaultPersonalMessage","inviteePermissions","inviteFileEditorsLabel","inviteePermissionsFieldLabel","handlePermissionChange","disabled","showUpgradeOptions","renderPermissionsSection","upgradeGetMoreAccessControls","personalMessageLabel","handleMessageChange","collaborationRestrictionWarning","inviteButtonProps","isEligibleForReferAFriendProgram","itemName","itemType","submissionError","submitting","rest","modalProps","selectorOptions","getSelectorOptions","title","inviteCollaboratorsModalTitle","groupLabel","closeModal","inviteFieldLabel","handlePillSelectorInput","handlePillRemove","handlePillSelect","pillSelectorPlaceholder","validateForError","renderFileCollabComponents","renderFolderCollabComponents","inviteCollaboratorsModalCancelButton","inviteCollaboratorsModalSendInvitesButton","node","arrayOf","shape","string","oneOfType","number","isrequired","isRequired","object","bool","itemTypedID","func","InviteCollaboratorsModalBase"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport omit from 'lodash/omit';\nimport throttle from 'lodash/throttle';\nimport { FormattedMessage, injectIntl, intlShape } from 'react-intl';\n\nimport { UpgradeBadge } from '../../components/badge';\nimport Button from '../../components/button';\nimport InlineNotice from '../../components/inline-notice';\nimport PrimaryButton from '../../components/primary-button';\nimport Select from '../../components/select';\nimport TextArea from '../../components/text-area';\nimport { Link } from '../../components/link';\nimport { Modal, ModalActions } from '../../components/modal';\nimport ContactDatalistItem from '../../components/contact-datalist-item';\nimport PillSelectorDropdown from '../../components/pill-selector-dropdown';\nimport parseEmails from '../../utils/parseEmails';\nimport { RESIN_TAG_TARGET } from '../../common/variables';\n\nimport PermissionFlyout from './PermissionFlyout';\nimport ReferAFriendAd from './ReferAFriendAd';\nimport messages from './messages';\nimport commonMessages from '../../common/messages';\n\nimport './InviteCollaboratorsModal.scss';\n\nconst COLLAB_ROLE_FOR_FILE = 'Editor';\nconst INPUT_DELAY = 250;\n\n/**\n * Returns true if the given value is a substring of the searchString\n * @param {String} value\n * @param {String} searchString\n * @return {boolean}\n */\nconst isSubstring = (value, searchString) => value && value.toLowerCase().indexOf(searchString.toLowerCase()) !== -1;\nclass InviteCollaboratorsModal extends Component {\n    static propTypes = {\n        /** Message warning about restrictions regarding inviting collaborators to the item */\n        collaborationRestrictionWarning: PropTypes.node,\n        /** An array of contacts for the pill selector dropdown */\n        contacts: PropTypes.arrayOf(\n            PropTypes.shape({\n                email: PropTypes.string,\n                id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isrequired,\n                name: PropTypes.string.isRequired,\n                type: PropTypes.string.isRequired,\n            }),\n        ).isRequired,\n        /**\n         * Default personal message for inviting collaborators to the item.\n         * Do not include if no personal message textarea should show up.\n         * Only applicable to non-file item types.\n         * */\n        defaultPersonalMessage: PropTypes.node,\n        intl: intlShape.isRequired,\n        /** Props for the invite button */\n        inviteButtonProps: PropTypes.object,\n        /** An array of invitee permissions */\n        inviteePermissions: PropTypes.arrayOf(\n            PropTypes.shape({\n                disabled: PropTypes.bool,\n                text: PropTypes.string.isRequired,\n                value: PropTypes.string.isRequired,\n            }),\n        ),\n        /** If true, will render a link to the refer-a-friend reward center */\n        isEligibleForReferAFriendProgram: PropTypes.bool,\n        /** The name of the item to invite collaborators for */\n        itemName: PropTypes.string.isRequired,\n        /** The type of the item to invite collaborators for (e.g. \"file\", \"folder\") */\n        itemType: PropTypes.string.isRequired,\n        /** The typed id of the item to invite collaborators for */\n        itemTypedID: PropTypes.string.isRequired,\n        /** Handler function for closing the modal */\n        onRequestClose: PropTypes.func.isRequired,\n        /** Handler function whenever the user types, e.g. to fetch contacts. */\n        onUserInput: PropTypes.func,\n        /**\n         * Function to send collab invitations based on the given parameters object.\n         * This function should return a Promise.\n         */\n        sendInvites: PropTypes.func.isRequired,\n        /**\n         * Flag to show link to upgrade and get more access controls.\n         * Only applicable to non-file item types.\n         */\n        showUpgradeOptions: PropTypes.bool,\n        /** Message indicating an error occurred while sending the invites. */\n        submissionError: PropTypes.node,\n        /**\n         * Flag indicating whether the send invites request is submitting.\n         */\n        submitting: PropTypes.bool,\n    };\n\n    static defaultProps = {\n        inviteButtonProps: {},\n    };\n\n    constructor(props) {\n        super(props);\n        const { defaultPersonalMessage, inviteePermissions } = props;\n        this.state = {\n            message: defaultPersonalMessage || '',\n            permission: inviteePermissions ? inviteePermissions[0].value : COLLAB_ROLE_FOR_FILE,\n            pillSelectorError: '',\n            pillSelectorInputValue: '',\n            selectedOptions: [],\n        };\n    }\n\n    getSelectorOptions = () => {\n        const { contacts } = this.props;\n        const { pillSelectorInputValue, selectedOptions } = this.state;\n\n        if (pillSelectorInputValue !== '') {\n            return contacts\n                .filter(\n                    // filter contacts whose name or email don't match input value\n                    ({ name, email }) =>\n                        isSubstring(name, pillSelectorInputValue) || isSubstring(email, pillSelectorInputValue),\n                )\n                .filter(\n                    // filter contacts who have already been selected\n                    ({ email, id }) => !selectedOptions.find(({ value }) => value === email || value === id),\n                )\n                .map(({ email, id, name, type }) => ({\n                    // map to standardized DatalistItem format\n                    email,\n                    id,\n                    text: name,\n                    type,\n                    value: email || id, // if email doesn't exist, contact is a group, use id\n                }));\n        }\n\n        // return empty selector options if input value is empty\n        return [];\n    };\n\n    closeModal = () => {\n        this.setState({\n            pillSelectorError: '',\n            pillSelectorInputValue: '',\n            selectedOptions: [],\n        });\n        this.props.onRequestClose();\n    };\n\n    sendInvites = () => {\n        const { intl, sendInvites } = this.props;\n        const { message, permission, pillSelectorError, selectedOptions } = this.state;\n\n        if (pillSelectorError) {\n            // Block submission if there's a validation error\n            return;\n        }\n\n        if (selectedOptions.length === 0) {\n            // Block submission if no pills are selected\n            this.setState({\n                pillSelectorError: intl.formatMessage(commonMessages.requiredFieldError),\n            });\n            return;\n        }\n\n        const emails = [];\n        const groupIDs = [];\n        selectedOptions.forEach(({ type, value }) => {\n            if (type === 'group') {\n                groupIDs.push(value);\n            } else {\n                emails.push(value);\n            }\n        });\n\n        const params = {\n            emails: emails.join(','),\n            groupIDs: groupIDs.join(','),\n            emailMessage: message,\n            permission: permission || COLLAB_ROLE_FOR_FILE,\n            numsOfInvitees: emails.length,\n            numOfInviteeGroups: groupIDs.length,\n        };\n        sendInvites(params).catch(error => {\n            // Remove invited emails from selected pills\n            const invitedEmails = error.invitedEmails || [];\n            this.filterInvitedEmails(invitedEmails);\n        });\n    };\n\n    filterInvitedEmails = invitedEmails => {\n        this.setState({\n            selectedOptions: this.state.selectedOptions.filter(({ value }) => !invitedEmails.includes(value)),\n        });\n    };\n\n    handlePillSelectorInput = throttle(value => {\n        const { onUserInput } = this.props;\n        if (onUserInput) {\n            onUserInput(value);\n        }\n\n        // As user is typing, reset error\n        this.setState({ pillSelectorError: '', pillSelectorInputValue: value });\n    }, INPUT_DELAY);\n\n    handlePillSelect = pills => {\n        this.setState({\n            selectedOptions: [...this.state.selectedOptions, ...pills],\n        });\n    };\n\n    handlePillRemove = (option, index) => {\n        const selectedOptions = this.state.selectedOptions.slice();\n        selectedOptions.splice(index, 1);\n        this.setState({ selectedOptions });\n    };\n\n    validateForError = text => {\n        const { intl } = this.props;\n        let pillSelectorError = '';\n\n        if (text && !this.validator(text)) {\n            pillSelectorError = intl.formatMessage(commonMessages.invalidEmailError);\n        }\n\n        this.setState({ pillSelectorError });\n    };\n\n    validator = text => {\n        // email input validation\n        const pattern = /^[^\\s<>@,]+@[^\\s<>@,/\\\\]+\\.[^\\s<>@,]+$/i;\n        return pattern.test(text);\n    };\n\n    handlePermissionChange = ({ target }) => {\n        const { value } = target;\n        this.setState({ permission: value });\n    };\n\n    handleMessageChange = ({ target }) => {\n        const { value } = target;\n        this.setState({ message: value });\n    };\n\n    renderFileCollabComponents() {\n        return (\n            <div className=\"invite-file-editors\">\n                <FormattedMessage {...messages.inviteFileEditorsLabel} />\n            </div>\n        );\n    }\n\n    renderPermissionsSection() {\n        const { inviteePermissions } = this.props;\n        return (\n            <div className=\"invite-permissions-container\">\n                <Select\n                    className=\"select-container-medium\"\n                    data-resin-target=\"selectpermission\"\n                    label={<FormattedMessage {...messages.inviteePermissionsFieldLabel} />}\n                    name=\"invite-permission\"\n                    onChange={this.handlePermissionChange}\n                >\n                    {inviteePermissions.map(({ value, disabled = false, text }) => (\n                        <option key={value} data-resin-option={value} disabled={disabled} value={value}>\n                            {text}\n                        </option>\n                    ))}\n                </Select>\n                <PermissionFlyout />\n            </div>\n        );\n    }\n\n    renderFolderCollabComponents() {\n        const { defaultPersonalMessage, inviteePermissions, showUpgradeOptions } = this.props;\n        return (\n            <div>\n                {inviteePermissions && this.renderPermissionsSection()}\n                {showUpgradeOptions && (\n                    <Link className=\"upgrade-link\" href=\"/upgrade\">\n                        <UpgradeBadge />\n                        <FormattedMessage {...messages.upgradeGetMoreAccessControls} />\n                    </Link>\n                )}\n                {defaultPersonalMessage && (\n                    <TextArea\n                        cols=\"30\"\n                        data-resin-feature=\"personalmessage\"\n                        data-resin-target=\"message\"\n                        defaultValue={defaultPersonalMessage}\n                        label={<FormattedMessage {...messages.personalMessageLabel} />}\n                        name=\"collab-message\"\n                        onChange={this.handleMessageChange}\n                        rows=\"4\"\n                    />\n                )}\n            </div>\n        );\n    }\n\n    render() {\n        const {\n            collaborationRestrictionWarning,\n            intl,\n            inviteButtonProps,\n            isEligibleForReferAFriendProgram,\n            itemName,\n            itemType,\n            submissionError,\n            submitting,\n            ...rest\n        } = this.props;\n        const { pillSelectorError, selectedOptions } = this.state;\n        const modalProps = omit(rest, [\n            'contacts',\n            'defaultPersonalMessage',\n            'inviteePermissions',\n            'itemTypedID',\n            'onRequestClose',\n            'onUserInput',\n            'sendInvites',\n            'showUpgradeOptions',\n        ]);\n\n        const selectorOptions = this.getSelectorOptions();\n\n        const title = (\n            <FormattedMessage\n                {...messages.inviteCollaboratorsModalTitle}\n                values={{\n                    itemName,\n                }}\n            />\n        );\n\n        const groupLabel = <FormattedMessage {...messages.groupLabel} />;\n\n        return (\n            <Modal\n                className=\"invite-collaborators-modal\"\n                closeButtonProps={{\n                    [RESIN_TAG_TARGET]: 'close',\n                }}\n                data-resin-component=\"modal\"\n                data-resin-feature=\"invitecollaborators\"\n                onRequestClose={this.closeModal}\n                title={title}\n                {...modalProps}\n            >\n                {submissionError && <InlineNotice type=\"error\">{submissionError}</InlineNotice>}\n                {collaborationRestrictionWarning && (\n                    <InlineNotice type=\"warning\">{collaborationRestrictionWarning}</InlineNotice>\n                )}\n                <PillSelectorDropdown\n                    allowCustomPills\n                    error={pillSelectorError}\n                    label={<FormattedMessage {...messages.inviteFieldLabel} />}\n                    onInput={this.handlePillSelectorInput}\n                    onRemove={this.handlePillRemove}\n                    onSelect={this.handlePillSelect}\n                    parseItems={parseEmails}\n                    placeholder={intl.formatMessage(commonMessages.pillSelectorPlaceholder)}\n                    selectedOptions={selectedOptions}\n                    selectorOptions={selectorOptions}\n                    validateForError={this.validateForError}\n                    validator={this.validator}\n                >\n                    {selectorOptions.map(({ email, text, value }) => (\n                        <ContactDatalistItem key={value} name={text} subtitle={email || groupLabel} />\n                    ))}\n                </PillSelectorDropdown>\n                {itemType === 'file' ? this.renderFileCollabComponents() : this.renderFolderCollabComponents()}\n                {isEligibleForReferAFriendProgram && <ReferAFriendAd />}\n                <ModalActions>\n                    <Button data-resin-target=\"cancel\" isDisabled={submitting} onClick={this.closeModal} type=\"button\">\n                        <FormattedMessage {...messages.inviteCollaboratorsModalCancelButton} />\n                    </Button>\n                    <PrimaryButton\n                        {...inviteButtonProps}\n                        isDisabled={submitting}\n                        isLoading={submitting}\n                        onClick={this.sendInvites}\n                    >\n                        <FormattedMessage {...messages.inviteCollaboratorsModalSendInvitesButton} />\n                    </PrimaryButton>\n                </ModalActions>\n            </Modal>\n        );\n    }\n}\n\nexport { InviteCollaboratorsModal as InviteCollaboratorsModalBase };\nexport default injectIntl(InviteCollaboratorsModal);\n"],"file":"InviteCollaboratorsModal.js"}