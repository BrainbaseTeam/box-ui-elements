{"version":3,"sources":["../../../src/features/virtualized-table-renderers/FormattedUser.js"],"names":["React","FormattedMessage","messages","ANONYMOUS_USER_ID","formatUser","intl","email","id","name","isComponent","anonymousUser","unknownUser","targetUser","formatMessage","targetUserInfo","formattedUser","String","trim","FormattedUser","props","undefined"],"mappings":"AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,iBAAT,QAAkC,aAAlC;;AAQA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAA6BC,IAA7B,EAA0E;AAAA,MAAvEC,KAAuE,QAAvEA,KAAuE;AAAA,MAAhEC,EAAgE,QAAhEA,EAAgE;AAAA,MAA5DC,IAA4D,QAA5DA,IAA4D;AAAA,MAAjCC,WAAiC,uEAAV,KAAU;AAAA,MACjFC,aADiF,GAClDR,QADkD,CACjFQ,aADiF;AAAA,MAClEC,WADkE,GAClDT,QADkD,CAClES,WADkE;AAGzF,MAAIC,UAAU,GAAGH,WAAW,IAAI,CAACJ,IAAhB,GAAuB,oBAAC,gBAAD,EAAsBM,WAAtB,CAAvB,GAA+DN,IAAI,CAACQ,aAAL,CAAmBF,WAAnB,CAAhF;AACA,MAAIG,cAAc,cAAOR,KAAK,IAAIC,EAAhB,MAAlB;;AAEA,MAAIA,EAAE,KAAKJ,iBAAX,EAA8B;AAC1BS,IAAAA,UAAU,GAAGH,WAAW,IAAI,CAACJ,IAAhB,GAAuB,oBAAC,gBAAD,EAAsBK,aAAtB,CAAvB,GAAiEL,IAAI,CAACQ,aAAL,CAAmBH,aAAnB,CAA9E;AACAI,IAAAA,cAAc,GAAG,EAAjB;AACH,GAHD,MAGO,IAAIN,IAAJ,EAAU;AACbI,IAAAA,UAAU,GAAGJ,IAAb;AACAM,IAAAA,cAAc,cAAOR,KAAK,IAAIC,EAAhB,MAAd;AACH,GAHM,MAGA,IAAID,KAAJ,EAAW;AACdM,IAAAA,UAAU,GAAGL,EAAb;AACAO,IAAAA,cAAc,cAAOR,KAAK,IAAIC,EAAhB,MAAd;AACH;;AAED,MAAMQ,aAAa,GAAGN,WAAW,GAC7B,0CACKG,UADL,EAEKE,cAAc,cAAOA,cAAP,IAA0B,EAF7C,CAD6B,GAM7B,UAAGE,MAAM,CAACJ,UAAD,CAAT,cAAyBE,cAAzB,EAA0CG,IAA1C,EANJ;AAQA,SAAOF,aAAP;AACH,CA1BD;;AA4BA,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD;AAAA,SAAkBf,UAAU,CAACe,KAAD,EAAQC,SAAR,EAAmB,IAAnB,CAA5B;AAAA,CAAtB;;AAEA,SAAShB,UAAT;AACA,eAAec,aAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport messages from './messages';\nimport { ANONYMOUS_USER_ID } from './constants';\n\ntype Props = {\n    email?: string,\n    id: string,\n    name?: string,\n};\n\nconst formatUser = ({ email, id, name }: Props, intl?: any, isComponent: boolean = false) => {\n    const { anonymousUser, unknownUser } = messages;\n\n    let targetUser = isComponent || !intl ? <FormattedMessage {...unknownUser} /> : intl.formatMessage(unknownUser);\n    let targetUserInfo = `(${email || id})`;\n\n    if (id === ANONYMOUS_USER_ID) {\n        targetUser = isComponent || !intl ? <FormattedMessage {...anonymousUser} /> : intl.formatMessage(anonymousUser);\n        targetUserInfo = '';\n    } else if (name) {\n        targetUser = name;\n        targetUserInfo = `(${email || id})`;\n    } else if (email) {\n        targetUser = id;\n        targetUserInfo = `(${email || id})`;\n    }\n\n    const formattedUser = isComponent ? (\n        <>\n            {targetUser}\n            {targetUserInfo ? ` ${targetUserInfo}` : ''}\n        </>\n    ) : (\n        `${String(targetUser)} ${targetUserInfo}`.trim()\n    );\n    return formattedUser;\n};\n\nconst FormattedUser = (props: Props) => formatUser(props, undefined, true);\n\nexport { formatUser };\nexport default FormattedUser;\n"],"file":"FormattedUser.js"}