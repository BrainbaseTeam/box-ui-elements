{"version":3,"sources":["../../../src/features/virtualized-table/BaseVirtualizedTable.js"],"names":["React","noop","classNames","Table","DEFAULT_PAGE_SIZE","VIRTUALIZED_TABLE_DEFAULTS","loadingRowRenderer","HEADER_HEIGHT","ROW_HEIGHT","TAB_INDEX","handleSort","sortParams","sort","event","currentTarget","type","blur","BaseVirtualizedTable","props","children","className","isLoading","loadingRowCount","rowData","rowGetter","rowRenderer","tableRef","rest","displayRowData","Array","fill","tableRowRenderer","getRow","index","length","PureComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,KAAT,QAAsB,uCAAtB;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,SAASC,0BAAT,QAA2C,aAA3C;AACA,OAAOC,kBAAP,MAA+B,mDAA/B;IAIQC,a,GAAyCF,0B,CAAzCE,a;IAAeC,U,GAA0BH,0B,CAA1BG,U;IAAYC,S,GAAcJ,0B,CAAdI,S;;AAkBnC,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,UAAD,EAAuD;AAAA,MAA9BC,IAA8B,uEAATX,IAAS;AAAA,MAC9DY,KAD8D,GACpDF,UADoD,CAC9DE,KAD8D;;AAAA,aAEjCA,KAAK,IAAI,EAFwB;AAAA,MAE9DC,aAF8D,QAE9DA,aAF8D;AAAA,MAE/CC,IAF+C,QAE/CA,IAF+C,EAItE;;;AACA,MAAIA,IAAI,KAAK,OAAT,IAAoBD,aAApB,IAAqCA,aAAa,CAACE,IAAvD,EAA6D;AACzDF,IAAAA,aAAa,CAACE,IAAd;AACH;;AACDJ,EAAAA,IAAI,CAACD,UAAD,CAAJ;AACH,CATD;;IAWMM,oB;;;;;;;;;;;;;6BAMO;AAAA,wBAYD,KAAKC,KAZJ;AAAA,UAEDC,QAFC,eAEDA,QAFC;AAAA,UAGDC,SAHC,eAGDA,SAHC;AAAA,UAIDC,SAJC,eAIDA,SAJC;AAAA,UAKDC,eALC,eAKDA,eALC;AAAA,UAMDC,OANC,eAMDA,OANC;AAAA,UAODC,SAPC,eAODA,SAPC;AAAA,UAQDC,WARC,eAQDA,WARC;AAAA,UASDb,KATC,eASDA,IATC;AAAA,UAUDc,QAVC,eAUDA,QAVC;AAAA,UAWEC,IAXF;;AAcL,UAAMC,cAAc,GAAGP,SAAS,GAAGQ,KAAK,CAACP,eAAD,CAAL,CAAuBQ,IAAvB,CAA4B,EAA5B,CAAH,GAAqCP,OAArE;AACA,UAAMQ,gBAAgB,GAAGV,SAAS,GAAGf,kBAAH,GAAwBmB,WAA1D;;AAEA,UAAMO,MAAM,GAAGR,SAAS,IAAK;AAAA,YAAGS,KAAH,SAAGA,KAAH;AAAA,eAAeL,cAAc,CAACK,KAAD,CAA7B;AAAA,OAA7B;;AAEA,aACI,oBAAC,KAAD;AACI,QAAA,GAAG,EAAEP,QADT;AAEI,QAAA,SAAS,EAAExB,UAAU,CAAC,sBAAD,EAAyBkB,SAAzB,CAFzB;AAGI,QAAA,YAAY,EAAEb,aAHlB;AAII,QAAA,QAAQ,EAAEqB,cAAc,CAACM,MAJ7B;AAKI,QAAA,SAAS,EAAEF,MALf;AAMI,QAAA,SAAS,EAAExB,UANf;AAOI,QAAA,WAAW,EAAEuB,gBAPjB;AAQI,QAAA,IAAI,EAAE,cAACpB,UAAD;AAAA,iBAA4BD,UAAU,CAACC,UAAD,EAAaC,KAAb,CAAtC;AAAA,SARV;AASI,QAAA,QAAQ,EAAEH;AATd,SAUQkB,IAVR,GAYKR,QAZL,CADJ;AAgBH;;;;EAzC8BnB,KAAK,CAACmC,a;;gBAAnClB,oB,kBACoB;AAClBI,EAAAA,SAAS,EAAE,KADO;AAElBC,EAAAA,eAAe,EAAElB;AAFC,C;;AA2C1B,eAAea,oBAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport noop from 'lodash/noop';\nimport classNames from 'classnames';\nimport { Table } from 'react-virtualized/dist/es/Table/index';\nimport { DEFAULT_PAGE_SIZE } from '../../constants';\nimport { VIRTUALIZED_TABLE_DEFAULTS } from './constants';\nimport loadingRowRenderer from '../virtualized-table-renderers/loadingRowRenderer';\nimport type { SortParams } from './flowTypes';\nimport type { RowRendererParams } from '../virtualized-table-renderers';\n\nconst { HEADER_HEIGHT, ROW_HEIGHT, TAB_INDEX } = VIRTUALIZED_TABLE_DEFAULTS;\n\ntype SortHandler = SortParams => void;\n\ntype Props = {\n    children: React.Node,\n    className?: string,\n    height: number,\n    isLoading?: boolean,\n    loadingRowCount?: number,\n    rowData: Array<Object>,\n    rowGetter?: ({ index: number }) => any,\n    rowRenderer?: RowRendererParams,\n    sort?: SortHandler,\n    tableRef?: (ref: ?React.Ref<typeof Table>) => void,\n    width: number,\n};\n\nconst handleSort = (sortParams: SortParams, sort?: SortHandler = noop) => {\n    const { event } = sortParams;\n    const { currentTarget, type }: any = event || {};\n\n    // Prevent header from remaining focused when triggered with mouse\n    if (type === 'click' && currentTarget && currentTarget.blur) {\n        currentTarget.blur();\n    }\n    sort(sortParams);\n};\n\nclass BaseVirtualizedTable extends React.PureComponent<Props> {\n    static defaultProps = {\n        isLoading: false,\n        loadingRowCount: DEFAULT_PAGE_SIZE,\n    };\n\n    render() {\n        const {\n            children,\n            className,\n            isLoading,\n            loadingRowCount,\n            rowData,\n            rowGetter,\n            rowRenderer,\n            sort,\n            tableRef,\n            ...rest\n        } = this.props;\n\n        const displayRowData = isLoading ? Array(loadingRowCount).fill({}) : rowData;\n        const tableRowRenderer = isLoading ? loadingRowRenderer : rowRenderer;\n\n        const getRow = rowGetter || (({ index }) => displayRowData[index]);\n\n        return (\n            <Table\n                ref={tableRef}\n                className={classNames('bdl-VirtualizedTable', className)}\n                headerHeight={HEADER_HEIGHT}\n                rowCount={displayRowData.length}\n                rowGetter={getRow}\n                rowHeight={ROW_HEIGHT}\n                rowRenderer={tableRowRenderer}\n                sort={(sortParams: SortParams) => handleSort(sortParams, sort)}\n                tabIndex={TAB_INDEX}\n                {...rest}\n            >\n                {children}\n            </Table>\n        );\n    }\n}\n\nexport default BaseVirtualizedTable;\n"],"file":"BaseVirtualizedTable.js"}