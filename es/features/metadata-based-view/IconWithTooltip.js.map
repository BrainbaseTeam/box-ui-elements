{"version":3,"sources":["../../../src/features/metadata-based-view/IconWithTooltip.js"],"names":["React","FormattedMessage","PlainButton","Button","Tooltip","IconCheck","IconClose","IconPencil","bdlGray62","CANCEL_ICON_TYPE","EDIT_ICON_TYPE","SAVE_ICON_TYPE","IconWithTooltip","className","isUpdating","onClick","tooltipText","type","iconBtn"],"mappings":"AAEA,OAAOA,KAAP,MAAoC,OAApC;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AAEA,SAASC,SAAT,QAA0B,wBAA1B;AAEA,SAASC,gBAAT,EAA2BC,cAA3B,EAA2CC,cAA3C,QAAiE,aAAjE;;AAWA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAMqB;AAAA,MALzCC,SAKyC,QALzCA,SAKyC;AAAA,MAJzCC,UAIyC,QAJzCA,UAIyC;AAAA,MAHzCC,OAGyC,QAHzCA,OAGyC;AAAA,MAFzCC,WAEyC,QAFzCA,WAEyC;AAAA,MADzCC,IACyC,QADzCA,IACyC;AACzC,MAAIC,OAAJ;;AAEA,UAAQD,IAAR;AACI,SAAKR,gBAAL;AACIS,MAAAA,OAAO,GACH,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAEL,SAAxB;AAAmC,QAAA,IAAI,EAAC,QAAxC;AAAiD,QAAA,OAAO,EAAEE;AAA1D,SACI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAEP,SAAlB;AAA6B,QAAA,KAAK,EAAE,EAApC;AAAwC,QAAA,MAAM,EAAE;AAAhD,QADJ,CADJ;AAKA;;AACJ,SAAKE,cAAL;AACIQ,MAAAA,OAAO,GACH,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAEL,SAAxB;AAAmC,QAAA,IAAI,EAAC,QAAxC;AAAiD,QAAA,OAAO,EAAEE;AAA1D,SACI,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAEP;AAAnB,QADJ,CADJ;AAKA;;AACJ,SAAKG,cAAL;AACIO,MAAAA,OAAO,GACH,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAEL,SAAnB;AAA8B,QAAA,SAAS,EAAEC,UAAzC;AAAqD,QAAA,IAAI,EAAC,QAA1D;AAAmE,QAAA,OAAO,EAAEC;AAA5E,SACI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAEP,SAAlB;AAA6B,QAAA,KAAK,EAAE,EAApC;AAAwC,QAAA,MAAM,EAAE;AAAhD,QADJ,CADJ;AAKA;;AACJ;AACI,aAAO,IAAP;AAvBR;;AA0BA,SAAO,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEQ;AAAf,KAA6BE,OAA7B,CAAP;AACH,CApCD;;AAsCA,eAAeN,eAAf","sourcesContent":["// @flow strict\n\nimport React, { type Element } from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport PlainButton from '../../components/plain-button';\nimport Button from '../../components/button';\nimport Tooltip from '../../components/tooltip';\nimport IconCheck from '../../icons/general/IconCheck';\nimport IconClose from '../../icons/general/IconClose';\nimport IconPencil from '../../icons/general/IconPencil';\n\nimport { bdlGray62 } from '../../styles/variables';\n\nimport { CANCEL_ICON_TYPE, EDIT_ICON_TYPE, SAVE_ICON_TYPE } from './constants';\n\ntype IconType = typeof CANCEL_ICON_TYPE | typeof EDIT_ICON_TYPE | typeof SAVE_ICON_TYPE;\ntype Props = {\n    className?: string,\n    isUpdating?: boolean,\n    onClick: void => void,\n    tooltipText: Element<typeof FormattedMessage>,\n    type?: IconType,\n};\n\nconst IconWithTooltip = ({\n    className,\n    isUpdating,\n    onClick,\n    tooltipText,\n    type,\n}: Props): Element<typeof Tooltip> | null => {\n    let iconBtn;\n\n    switch (type) {\n        case CANCEL_ICON_TYPE:\n            iconBtn = (\n                <PlainButton className={className} type=\"button\" onClick={onClick}>\n                    <IconClose color={bdlGray62} width={16} height={16} />\n                </PlainButton>\n            );\n            break;\n        case EDIT_ICON_TYPE:\n            iconBtn = (\n                <PlainButton className={className} type=\"button\" onClick={onClick}>\n                    <IconPencil color={bdlGray62} />\n                </PlainButton>\n            );\n            break;\n        case SAVE_ICON_TYPE:\n            iconBtn = (\n                <Button className={className} isLoading={isUpdating} type=\"button\" onClick={onClick}>\n                    <IconCheck color={bdlGray62} width={16} height={16} />\n                </Button>\n            );\n            break;\n        default:\n            return null;\n    }\n\n    return <Tooltip text={tooltipText}>{iconBtn}</Tooltip>;\n};\n\nexport default IconWithTooltip;\n"],"file":"IconWithTooltip.js"}