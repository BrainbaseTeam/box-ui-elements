{"version":3,"sources":["../../../../../src/features/in-app-messenger/contextual/templates/PreviewTitleBodyTwoButtonsModalTemplate.js"],"names":["React","PrimaryButton","Modal","ModalActions","Button","MessagePreviewContent","messageActions","handleClose","onAction","close","handleButtonClick","button","actions","PreviewTitleBodyTwoButtonsModalTemplate","apiHost","contentPreviewProps","getToken","params","body","button1","button2","fileUpload","fileId","sharedLinkUrl","title","__html","label"],"mappings":"AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,SAASC,KAAT,EAAgBC,YAAhB,QAAoC,8BAApC;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,qBAAP,MAAkC,wDAAlC;AAEA,SAASC,cAAT,QAA+B,6BAA/B;AAGA,OAAO,uDAAP;;AAUA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,QAAQ,EAAI;AAC5BA,EAAAA,QAAQ,CAAC,CAACF,cAAc,CAACG,KAAhB,CAAD,CAAR;AACH,CAFD;;AAIA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACF,QAAD,EAAWG,MAAX,EAAsB;AAC5C,MAAIA,MAAJ,EAAY;AACRH,IAAAA,QAAQ,CAACG,MAAM,CAACC,OAAR,CAAR;AACH;AACJ,CAJD;;AAMA,IAAMC,uCAAuC,GAAG,SAA1CA,uCAA0C,OAMnC;AAAA,MALTC,OAKS,QALTA,OAKS;AAAA,MAJTC,mBAIS,QAJTA,mBAIS;AAAA,MAHTC,QAGS,QAHTA,QAGS;AAAA,MAFTR,QAES,QAFTA,QAES;AAAA,yBADTS,MACS;AAAA,MADCC,IACD,eADCA,IACD;AAAA,MADOC,OACP,eADOA,OACP;AAAA,MADgBC,OAChB,eADgBA,OAChB;AAAA,0CADyBC,UACzB;AAAA,6DADiE,EACjE;AAAA,MADuCC,MACvC,yBADuCA,MACvC;AAAA,MAD+CC,aAC/C,yBAD+CA,aAC/C;AAAA,MADqEC,KACrE,eADqEA,KACrE;AACT,SACI,oBAAC,KAAD;AACI,IAAA,SAAS,EAAC,6CADd;AAEI,IAAA,gBAAgB,EAAE;AAAE,2BAAqB;AAAvB,KAFtB;AAGI,IAAA,MAAM,MAHV;AAII,IAAA,cAAc,EAAE;AAAA,aAAMjB,WAAW,CAACC,QAAD,CAAjB;AAAA,KAJpB;AAKI,IAAA,kBAAkB;AALtB,KAOI;AAAK,IAAA,SAAS,EAAC;AAAf,KAEI;AACI,IAAA,SAAS,EAAC,mDADd;AAEI,IAAA,uBAAuB,EAAE;AACrBiB,MAAAA,MAAM,EAAED;AADa;AAF7B,IAFJ,EAQI;AACI,IAAA,SAAS,EAAC,kDADd;AAEI,IAAA,uBAAuB,EAAE;AACrBC,MAAAA,MAAM,EAAEP;AADa;AAF7B,IARJ,EAeI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,oBAAC,qBAAD;AACI,IAAA,OAAO,EAAEJ,OADb;AAEI,IAAA,mBAAmB,EAAEC,mBAFzB;AAGI,IAAA,MAAM,EAAEO,MAHZ;AAII,IAAA,QAAQ,EAAEN,QAJd;AAKI,IAAA,UAAU,EAAEO;AALhB,IADJ,CAfJ,EAwBI,oBAAC,YAAD,QACI,oBAAC,aAAD;AAAe,yBAAkB,MAAjC;AAAwC,IAAA,OAAO,EAAE;AAAA,aAAMb,iBAAiB,CAACF,QAAD,EAAWW,OAAX,CAAvB;AAAA;AAAjD,KACKA,OAAO,CAACO,KADb,CADJ,EAIKN,OAAO,IACJ,oBAAC,MAAD;AAAQ,yBAAkB,MAA1B;AAAiC,IAAA,OAAO,EAAE;AAAA,aAAMV,iBAAiB,CAACF,QAAD,EAAWY,OAAX,CAAvB;AAAA;AAA1C,KACKA,OAAO,CAACM,KADb,CALR,CAxBJ,CAPJ,CADJ;AA6CH,CApDD;;AAsDA,eAAeb,uCAAf","sourcesContent":["// @flow\n\nimport * as React from 'react';\n\nimport PrimaryButton from '../../../../components/primary-button';\nimport { Modal, ModalActions } from '../../../../components/modal';\nimport Button from '../../../../components/button';\nimport MessagePreviewContent from '../../../message-preview-content/MessagePreviewContent';\nimport type { Token } from '../../../../common/types/core';\nimport { messageActions } from '../../types/message-actions';\nimport { type MessageActions, type PreviewTitleBodyTwoButtonsParams } from '../../types';\n\nimport './styles/PreviewTitleBodyTwoButtonsModalTemplate.scss';\n\ntype Props = {\n    apiHost: string,\n    contentPreviewProps?: ContentPreviewProps,\n    getToken: (folderID: string | number) => Promise<Token>,\n    onAction: (MessageActions, ...Array<any>) => any,\n    params: PreviewTitleBodyTwoButtonsParams,\n};\n\nconst handleClose = onAction => {\n    onAction([messageActions.close]);\n};\n\nconst handleButtonClick = (onAction, button) => {\n    if (button) {\n        onAction(button.actions);\n    }\n};\n\nconst PreviewTitleBodyTwoButtonsModalTemplate = ({\n    apiHost,\n    contentPreviewProps,\n    getToken,\n    onAction,\n    params: { body, button1, button2, fileUpload: { fileId, sharedLinkUrl } = {}, title },\n}: Props) => {\n    return (\n        <Modal\n            className=\"bdl-PreviewTitleBodyTwoButtonsModalTemplate\"\n            closeButtonProps={{ 'data-resin-target': 'dismiss' }}\n            isOpen\n            onRequestClose={() => handleClose(onAction)}\n            shouldNotUsePortal\n        >\n            <div className=\"bdl-PreviewTitleBodyTwoButtonsModalTemplate-contentContainer\">\n                {/* eslint-disable react/no-danger */}\n                <div\n                    className=\"bdl-PreviewTitleBodyTwoButtonsModalTemplate-title\"\n                    dangerouslySetInnerHTML={{\n                        __html: title,\n                    }}\n                />\n                <div\n                    className=\"bdl-PreviewTitleBodyTwoButtonsModalTemplate-body\"\n                    dangerouslySetInnerHTML={{\n                        __html: body,\n                    }}\n                />\n                {/* eslint-enable react/no-danger */}\n                <div className=\"bdl-PreviewTitleBodyTwoButtonsModalTemplate-previewContainer\">\n                    <MessagePreviewContent\n                        apiHost={apiHost}\n                        contentPreviewProps={contentPreviewProps}\n                        fileId={fileId}\n                        getToken={getToken}\n                        sharedLink={sharedLinkUrl}\n                    />\n                </div>\n                <ModalActions>\n                    <PrimaryButton data-resin-target=\"cta1\" onClick={() => handleButtonClick(onAction, button1)}>\n                        {button1.label}\n                    </PrimaryButton>\n                    {button2 && (\n                        <Button data-resin-target=\"cta2\" onClick={() => handleButtonClick(onAction, button2)}>\n                            {button2.label}\n                        </Button>\n                    )}\n                </ModalActions>\n            </div>\n        </Modal>\n    );\n};\n\nexport default PreviewTitleBodyTwoButtonsModalTemplate;\n"],"file":"PreviewTitleBodyTwoButtonsModalTemplate.js"}