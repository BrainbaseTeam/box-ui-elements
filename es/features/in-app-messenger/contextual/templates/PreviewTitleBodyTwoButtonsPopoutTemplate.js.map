{"version":3,"sources":["../../../../../src/features/in-app-messenger/contextual/templates/PreviewTitleBodyTwoButtonsPopoutTemplate.js"],"names":["React","Button","PrimaryButton","Overlay","MessagePreviewContent","handleButtonClick","onAction","button","actions","PreviewTitleBodyTwoButtonsPopoutTemplate","apiHost","contentPreviewProps","getToken","params","body","button1","button2","fileUpload","fileId","sharedLinkUrl","title","__html","label"],"mappings":"AAEA;;;;AAKA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,aAAP,MAA0B,qDAA1B;AACA,OAAOC,OAAP,MAAoB,uCAApB;AACA,OAAOC,qBAAP,MAAkC,wDAAlC;AAMA,OAAO,wDAAP;;AAUA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,QAAD,EAAWC,MAAX,EAAsB;AAC5C,MAAIA,MAAJ,EAAY;AACRD,IAAAA,QAAQ,CAACC,MAAM,CAACC,OAAR,CAAR;AACH;AACJ,CAJD;;AAMA,IAAMC,wCAAwC,GAAG,SAA3CA,wCAA2C,OAMpC;AAAA,MALTC,OAKS,QALTA,OAKS;AAAA,MAJTC,mBAIS,QAJTA,mBAIS;AAAA,MAHTC,QAGS,QAHTA,QAGS;AAAA,MAFTN,QAES,QAFTA,QAES;AAAA,yBADTO,MACS;AAAA,MADCC,IACD,eADCA,IACD;AAAA,MADOC,OACP,eADOA,OACP;AAAA,MADgBC,OAChB,eADgBA,OAChB;AAAA,0CADyBC,UACzB;AAAA,6DADiE,EACjE;AAAA,MADuCC,MACvC,yBADuCA,MACvC;AAAA,MAD+CC,aAC/C,yBAD+CA,aAC/C;AAAA,MADqEC,KACrE,eADqEA,KACrE;AACT,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,oBAAC,OAAD,QACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,oBAAC,qBAAD;AACI,IAAA,OAAO,EAAEV,OADb;AAEI,IAAA,mBAAmB,EAAEC,mBAFzB;AAGI,IAAA,MAAM,EAAEO,MAHZ;AAII,IAAA,QAAQ,EAAEN,QAJd;AAKI,IAAA,UAAU,EAAEO;AALhB,IADJ,CADJ,EAUI;AAAK,IAAA,SAAS,EAAC;AAAf,KAEI;AACI,IAAA,SAAS,EAAC,oDADd;AAEI,IAAA,uBAAuB,EAAE;AACrBE,MAAAA,MAAM,EAAED;AADa;AAF7B,IAFJ,EAQI;AACI,IAAA,SAAS,EAAC,mDADd;AAEI,IAAA,uBAAuB,EAAE;AACrBC,MAAAA,MAAM,EAAEP;AADa;AAF7B,IARJ,EAeI;AAAK,IAAA,SAAS,EAAC;AAAf,KACKE,OAAO,IACJ,oBAAC,MAAD;AAAQ,yBAAkB,MAA1B;AAAiC,IAAA,OAAO,EAAE;AAAA,aAAMX,iBAAiB,CAACC,QAAD,EAAWU,OAAX,CAAvB;AAAA;AAA1C,KACKA,OAAO,CAACM,KADb,CAFR,EAMI,oBAAC,aAAD;AACI,yBAAkB,MADtB;AAEI,IAAA,OAAO,EAAE;AAAA,aAAMjB,iBAAiB,CAACC,QAAD,EAAWS,OAAX,CAAvB;AAAA;AAFb,KAIKA,OAAO,CAACO,KAJb,CANJ,CAfJ,CAVJ,CADJ,CADJ,CADJ;AA8CH,CArDD;;AAuDA,eAAeb,wCAAf","sourcesContent":["// @flow\n\n/**\n * This component is intended to be passed to TemplateContainer as templateComponent prop, like this:\n *   <TemplateContainer templateID='my-template' templateComponent=MyTemplate/>\n */\n\nimport * as React from 'react';\n\nimport Button from '../../../../components/button/Button';\nimport PrimaryButton from '../../../../components/primary-button/PrimaryButton';\nimport Overlay from '../../../../components/flyout/Overlay';\nimport MessagePreviewContent from '../../../message-preview-content/MessagePreviewContent';\nimport type { Token } from '../../../../common/types/core';\nimport type { MessageActions } from '../../types';\n\nimport { type PreviewTitleBodyTwoButtonsParams } from '../../types';\n\nimport './styles/PreviewTitleBodyTwoButtonsPopoutTemplate.scss';\n\ntype Props = {\n    apiHost: string,\n    contentPreviewProps?: ContentPreviewProps,\n    getToken: (folderID: string | number) => Promise<Token>,\n    onAction: (MessageActions, ...Array<any>) => any,\n    params: PreviewTitleBodyTwoButtonsParams,\n};\n\nconst handleButtonClick = (onAction, button) => {\n    if (button) {\n        onAction(button.actions);\n    }\n};\n\nconst PreviewTitleBodyTwoButtonsPopoutTemplate = ({\n    apiHost,\n    contentPreviewProps,\n    getToken,\n    onAction,\n    params: { body, button1, button2, fileUpload: { fileId, sharedLinkUrl } = {}, title },\n}: Props) => {\n    return (\n        <div className=\"bdl-PreviewTitleBodyTwoButtonsPopoutTemplate\">\n            <Overlay>\n                <div className=\"bdl-PreviewTitleBodyTwoButtonsPopoutTemplate-contentContainer\">\n                    <div className=\"bdl-PreviewTitleBodyTwoButtonsPopoutTemplate-previewContainer\">\n                        <MessagePreviewContent\n                            apiHost={apiHost}\n                            contentPreviewProps={contentPreviewProps}\n                            fileId={fileId}\n                            getToken={getToken}\n                            sharedLink={sharedLinkUrl}\n                        />\n                    </div>\n                    <div className=\"bdl-PreviewTitleBodyTwoButtonsPopoutTemplate-mainContainer\">\n                        {/* eslint-disable react/no-danger */}\n                        <div\n                            className=\"bdl-PreviewTitleBodyTwoButtonsPopoutTemplate-title\"\n                            dangerouslySetInnerHTML={{\n                                __html: title,\n                            }}\n                        />\n                        <div\n                            className=\"bdl-PreviewTitleBodyTwoButtonsPopoutTemplate-body\"\n                            dangerouslySetInnerHTML={{\n                                __html: body,\n                            }}\n                        />\n                        {/* eslint-enable react/no-danger */}\n                        <div className=\"bdl-PreviewTitleBodyTwoButtonsPopoutTemplate-buttons\">\n                            {button2 && (\n                                <Button data-resin-target=\"cta2\" onClick={() => handleButtonClick(onAction, button2)}>\n                                    {button2.label}\n                                </Button>\n                            )}\n                            <PrimaryButton\n                                data-resin-target=\"cta1\"\n                                onClick={() => handleButtonClick(onAction, button1)}\n                            >\n                                {button1.label}\n                            </PrimaryButton>\n                        </div>\n                    </div>\n                </div>\n            </Overlay>\n        </div>\n    );\n};\n\nexport default PreviewTitleBodyTwoButtonsPopoutTemplate;\n"],"file":"PreviewTitleBodyTwoButtonsPopoutTemplate.js"}