{"version":3,"sources":["../../../../src/features/content-explorer/item-list/ItemListIcon.js"],"names":["PropTypes","React","FormattedMessage","BookmarkIcon","FileIcon","FolderIcon","ItemTypes","ItemTypePropType","messages","ItemListIcon","type","extension","hasCollaborations","isExternallyOwned","FOLDER","titleID","FILE","file","BOOKMARK","bookmark","propTypes","string","bool"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAEA,OAAOC,SAAP,MAAsB,eAAtB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAoF;AAAA,MAAjFC,IAAiF,QAAjFA,IAAiF;AAAA,4BAA3EC,SAA2E;AAAA,MAA3EA,SAA2E,+BAA/D,EAA+D;AAAA,mCAA3DC,iBAA2D;AAAA,MAA3DA,iBAA2D,sCAAvC,KAAuC;AAAA,mCAAhCC,iBAAgC;AAAA,MAAhCA,iBAAgC,sCAAZ,KAAY;;AACrG,UAAQH,IAAR;AACI,SAAKJ,SAAS,CAACQ,MAAf;AAAuB;AACnB,YAAIC,OAAO,GAAG,gBAAd;;AACA,YAAIH,iBAAJ,EAAuB;AACnBG,UAAAA,OAAO,GAAG,oBAAV;AACH,SAFD,MAEO,IAAIF,iBAAJ,EAAuB;AAC1BE,UAAAA,OAAO,GAAG,gBAAV;AACH;;AACD,eACI,oBAAC,UAAD;AACI,UAAA,QAAQ,EAAEH,iBADd;AAEI,UAAA,UAAU,EAAEC,iBAFhB;AAGI,UAAA,KAAK,EAAE,oBAAC,gBAAD,EAAsBL,QAAQ,CAACO,OAAD,CAA9B;AAHX,UADJ;AAOH;;AACD,SAAKT,SAAS,CAACU,IAAf;AACI,aAAO,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAEL,SAArB;AAAgC,QAAA,KAAK,EAAE,oBAAC,gBAAD,EAAsBH,QAAQ,CAACS,IAA/B;AAAvC,QAAP;;AACJ,SAAKX,SAAS,CAACY,QAAf;AACI,aAAO,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAE,oBAAC,gBAAD,EAAsBV,QAAQ,CAACW,QAA/B;AAArB,QAAP;;AACJ;AACI;AACA,aAAO,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,oBAAC,gBAAD,EAAsBX,QAAQ,CAACS,IAA/B;AAAjB,QAAP;AAtBR;AAwBH,CAzBD;;AA2BAR,YAAY,CAACW,SAAb,GAAyB;AACrBV,EAAAA,IAAI,EAAEH,gBADe;AAErBI,EAAAA,SAAS,EAAEX,SAAS,CAACqB,MAFA;AAGrBT,EAAAA,iBAAiB,EAAEZ,SAAS,CAACsB,IAHR;AAIrBT,EAAAA,iBAAiB,EAAEb,SAAS,CAACsB;AAJR,CAAzB;AAOA,eAAeb,YAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport BookmarkIcon from '../../../icons/bookmark-icon';\nimport FileIcon from '../../../icons/file-icon';\nimport FolderIcon from '../../../icons/folder-icon';\n\nimport ItemTypes from '../item-types';\nimport { ItemTypePropType } from '../prop-types';\nimport messages from '../messages';\n\nconst ItemListIcon = ({ type, extension = '', hasCollaborations = false, isExternallyOwned = false }) => {\n    switch (type) {\n        case ItemTypes.FOLDER: {\n            let titleID = 'personalFolder';\n            if (hasCollaborations) {\n                titleID = 'collaboratedFolder';\n            } else if (isExternallyOwned) {\n                titleID = 'externalFolder';\n            }\n            return (\n                <FolderIcon\n                    isCollab={hasCollaborations}\n                    isExternal={isExternallyOwned}\n                    title={<FormattedMessage {...messages[titleID]} />}\n                />\n            );\n        }\n        case ItemTypes.FILE:\n            return <FileIcon extension={extension} title={<FormattedMessage {...messages.file} />} />;\n        case ItemTypes.BOOKMARK:\n            return <BookmarkIcon title={<FormattedMessage {...messages.bookmark} />} />;\n        default:\n            // Use generic file icon as fallback\n            return <FileIcon title={<FormattedMessage {...messages.file} />} />;\n    }\n};\n\nItemListIcon.propTypes = {\n    type: ItemTypePropType,\n    extension: PropTypes.string,\n    hasCollaborations: PropTypes.bool,\n    isExternallyOwned: PropTypes.bool,\n};\n\nexport default ItemListIcon;\n"],"file":"ItemListIcon.js"}