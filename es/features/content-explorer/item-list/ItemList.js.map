{"version":3,"sources":["../../../../src/features/content-explorer/item-list/ItemList.js"],"names":["PropTypes","React","classNames","getProp","Column","Table","defaultTableRowRenderer","withInfiniteLoader","ContentExplorerModePropType","ItemsPropType","ItemsMapPropType","ItemListIcon","ItemListLoadingPlaceholder","ItemListName","ItemListButton","TABLE_CELL_CLASS","InfiniteLoaderTable","itemIconCellRenderer","rendererParams","rowData","type","extension","hasCollaborations","isExternallyOwned","itemIconRenderer","columnData","isItemSelected","itemId","selectedItems","undefined","itemNameCellRenderer","rowIndex","id","name","label","onItemNameClick","itemNameLinkRenderer","event","renderItemListButton","contentExplorerMode","isActionDisabled","isDisabled","itemButtonCellRenderer","itemButtonRenderer","itemLoadingPlaceholderRenderer","loadingPlaceholderColumnWidths","columnIndex","ItemList","className","items","numItemsPerPage","numTotalItems","onItemClick","onItemDoubleClick","onLoadMoreItems","noItemsRenderer","width","height","getRow","index","getRowClassNames","item","result","isLoading","renderRow","key","style","rowClassName","columns","itemRowClassname","testId","map","column","props","defaultRow","cloneElement","TableComponent","tableProps","infiniteLoaderProps","isRowLoaded","loadMoreRows","minimumBatchSize","rowCount","threshold","length","displayName","propTypes","string","isRequired","number","func","ItemListBase"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport getProp from 'lodash/get';\n\nimport Column from 'react-virtualized/dist/commonjs/Table/Column';\nimport Table from 'react-virtualized/dist/commonjs/Table';\nimport defaultTableRowRenderer from 'react-virtualized/dist/commonjs/Table/defaultRowRenderer';\nimport 'react-virtualized/styles.css';\n\nimport { withInfiniteLoader } from '../../../components/react-virtualized-helpers';\n\nimport { ContentExplorerModePropType, ItemsPropType, ItemsMapPropType } from '../prop-types';\n\nimport ItemListIcon from './ItemListIcon';\nimport ItemListLoadingPlaceholder from './ItemListLoadingPlaceholder';\nimport ItemListName from './ItemListName';\nimport ItemListButton from './ItemListButton';\n\nimport './ItemList.scss';\n\nconst TABLE_CELL_CLASS = 'table-cell';\n\nconst InfiniteLoaderTable = withInfiniteLoader(Table);\n\nconst itemIconCellRenderer = rendererParams => {\n    const {\n        rowData: { type, extension, hasCollaborations, isExternallyOwned },\n        columnData: { itemIconRenderer },\n    } = rendererParams;\n    return (\n        <div className={TABLE_CELL_CLASS}>\n            {itemIconRenderer ? (\n                itemIconRenderer(rendererParams)\n            ) : (\n                <ItemListIcon\n                    type={type}\n                    extension={extension}\n                    hasCollaborations={hasCollaborations}\n                    isExternallyOwned={isExternallyOwned}\n                />\n            )}\n        </div>\n    );\n};\n\nconst isItemSelected = (itemId, selectedItems) => selectedItems[itemId] !== undefined;\n\nconst itemNameCellRenderer = rendererParams => {\n    const {\n        rowIndex,\n        rowData: { id, type, name, label },\n        columnData: { selectedItems, onItemNameClick, itemNameLinkRenderer },\n    } = rendererParams;\n    // loading placeholder may not have name and ItemListName requires name\n    return (\n        name && (\n            <div className={TABLE_CELL_CLASS}>\n                <ItemListName\n                    type={type}\n                    name={name}\n                    label={label}\n                    isSelected={isItemSelected(id, selectedItems)}\n                    onClick={event => onItemNameClick(event, rowIndex)}\n                    linkRenderer={itemNameLinkRenderer}\n                />\n            </div>\n        )\n    );\n};\n\nconst renderItemListButton = (contentExplorerMode, id, isActionDisabled, isDisabled, name, selectedItems) =>\n    name && (\n        <ItemListButton\n            contentExplorerMode={contentExplorerMode}\n            id={id}\n            isDisabled={isActionDisabled}\n            isSelected={isItemSelected(id, selectedItems)}\n            name={name}\n        />\n    );\n\nconst itemButtonCellRenderer = rendererParams => {\n    const {\n        columnData: { contentExplorerMode, itemButtonRenderer, selectedItems },\n        rowData: { id, isActionDisabled, isDisabled, name },\n    } = rendererParams;\n    return (\n        !isDisabled && (\n            <div className={TABLE_CELL_CLASS}>\n                {itemButtonRenderer\n                    ? itemButtonRenderer(rendererParams)\n                    : renderItemListButton(contentExplorerMode, id, isActionDisabled, isDisabled, name, selectedItems)}\n            </div>\n        )\n    );\n};\n\nconst itemLoadingPlaceholderRenderer = rendererParams => {\n    const { loadingPlaceholderColumnWidths, columnIndex } = rendererParams;\n    return (\n        <div className={TABLE_CELL_CLASS}>\n            <ItemListLoadingPlaceholder\n                width={loadingPlaceholderColumnWidths && loadingPlaceholderColumnWidths[columnIndex]}\n            />\n        </div>\n    );\n};\n\nconst ItemList = ({\n    contentExplorerMode,\n    className = '',\n    items,\n    numItemsPerPage,\n    numTotalItems,\n    selectedItems = {},\n    onItemClick,\n    onItemDoubleClick,\n    onItemNameClick,\n    onLoadMoreItems,\n    itemIconRenderer,\n    itemNameLinkRenderer,\n    itemButtonRenderer,\n    noItemsRenderer,\n    width,\n    height,\n}) => {\n    const getRow = ({ index }) => items[index];\n\n    const getRowClassNames = (index, item) => {\n        let result = index === -1 ? 'table-header' : 'table-row';\n\n        if (isItemSelected(item.id, selectedItems)) {\n            result = classNames('is-selected', result);\n        }\n        if (item && (item.isDisabled || item.isLoading)) {\n            result = classNames('disabled', result);\n        }\n\n        return result;\n    };\n\n    const renderRow = rendererParams => {\n        const { index, key, style, className: rowClassName, columns } = rendererParams;\n        const item = items[index];\n        const itemRowClassname = classNames(rowClassName, getRowClassNames(index, item));\n        const testId = getProp(rendererParams, 'rowData.id', '');\n\n        if (item.isLoading) {\n            return (\n                <div key={key} style={style} className={itemRowClassname} role=\"row\">\n                    {columns.map((column, columnIndex) => (\n                        <div\n                            key={columnIndex}\n                            className={column.props.className}\n                            style={column.props.style}\n                            role=\"gridcell\"\n                        >\n                            {itemLoadingPlaceholderRenderer({\n                                item,\n                                columnIndex,\n                            })}\n                        </div>\n                    ))}\n                </div>\n            );\n        }\n\n        const defaultRow = defaultTableRowRenderer({\n            ...rendererParams,\n            className: itemRowClassname,\n        });\n        return React.cloneElement(defaultRow, { 'data-testid': `item-row-${testId}` });\n    };\n\n    let TableComponent = Table;\n    const tableProps = {};\n\n    if (onLoadMoreItems) {\n        TableComponent = InfiniteLoaderTable;\n        tableProps.infiniteLoaderProps = {\n            isRowLoaded: getRow,\n            loadMoreRows: onLoadMoreItems,\n            minimumBatchSize: numItemsPerPage,\n            rowCount: numTotalItems,\n            threshold: numItemsPerPage,\n        };\n    }\n\n    return (\n        <div className={classNames('content-explorer-item-list table', className)}>\n            <TableComponent\n                gridClassName=\"table-body\"\n                headerClassName=\"table-header-item\"\n                width={width}\n                height={height}\n                rowHeight={40}\n                rowCount={items.length}\n                onRowClick={onItemClick}\n                onRowDoubleClick={onItemDoubleClick}\n                rowGetter={getRow}\n                rowRenderer={renderRow}\n                noRowsRenderer={noItemsRenderer}\n                {...tableProps}\n            >\n                <Column\n                    className=\"item-list-icon-col\"\n                    cellRenderer={itemIconCellRenderer}\n                    columnData={{\n                        itemIconRenderer,\n                    }}\n                    dataKey=\"icon\"\n                    width={32}\n                />\n                <Column\n                    className=\"item-list-name-col\"\n                    cellRenderer={itemNameCellRenderer}\n                    columnData={{\n                        selectedItems,\n                        onItemNameClick,\n                        itemNameLinkRenderer,\n                    }}\n                    dataKey=\"name\"\n                    width={0}\n                    flexGrow={1}\n                    flexShrink={0}\n                />\n                <Column\n                    className=\"item-list-button-col\"\n                    cellRenderer={itemButtonCellRenderer}\n                    columnData={{\n                        contentExplorerMode,\n                        itemButtonRenderer,\n                        selectedItems,\n                    }}\n                    dataKey=\"button\"\n                    width={30}\n                />\n            </TableComponent>\n        </div>\n    );\n};\n\nItemList.displayName = 'ItemList';\n\nItemList.propTypes = {\n    className: PropTypes.string,\n    contentExplorerMode: ContentExplorerModePropType.isRequired,\n    items: ItemsPropType.isRequired,\n    numItemsPerPage: PropTypes.number,\n    numTotalItems: PropTypes.number,\n    selectedItems: ItemsMapPropType.isRequired,\n    onItemClick: PropTypes.func,\n    onItemDoubleClick: PropTypes.func,\n    onItemNameClick: PropTypes.func,\n    onLoadMoreItems: PropTypes.func,\n    itemIconRenderer: PropTypes.func,\n    itemNameLinkRenderer: PropTypes.func,\n    itemButtonRenderer: PropTypes.func,\n    noItemsRenderer: PropTypes.func,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n};\n\nexport { ItemList as ItemListBase };\nexport default ItemList;\n"],"file":"ItemList.js"}