{"version":3,"sources":["../../../../src/features/content-explorer/new-folder-modal/NewFolderModal.js"],"names":["PropTypes","React","Component","classNames","FormattedMessage","injectIntl","Modal","ModalActions","TextInput","Button","PrimaryButton","messages","NewFolderModal","props","onCreateFolderSubmit","folderNameInput","state","event","onCreateFolderInput","input","target","value","setState","className","intl","isOpen","onRequestClose","parentFolderName","isCreatingFolder","createFolderError","isCreateButtonDisabled","trim","length","newFolderModalTitle","newFolderModalFolderNameLabel","handleFolderNameInput","formatMessage","newFolderModalFolderNamePlaceholder","newFolderModalCancel","handleCreateClick","newFolderModalCreate","string","any","bool","func","isRequired","NewFolderModalBase"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,YAA7C;AAEA,SAASC,KAAT,EAAgBC,YAAhB,QAAoC,2BAApC;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AAEA,OAAOC,QAAP,MAAqB,aAArB;AAEA,OAAO,uBAAP;;IAEMC,c;;;;;AAqCF,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,wFAAMA,KAAN;;AADe,wEAOC,YAAM;AAAA,UACdC,oBADc,GACW,MAAKD,KADhB,CACdC,oBADc;AAAA,UAEdC,eAFc,GAEM,MAAKC,KAFX,CAEdD,eAFc;AAGtBD,MAAAA,oBAAoB,CAACC,eAAD,CAApB;AACH,KAXkB;;AAAA,4EAaK,UAAAE,KAAK,EAAI;AAAA,UACrBC,mBADqB,GACG,MAAKL,KADR,CACrBK,mBADqB;AAE7B,UAAMC,KAAK,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAA3B;;AACA,YAAKC,QAAL,CAAc;AACVP,QAAAA,eAAe,EAAEI;AADP,OAAd;;AAGA,UAAID,mBAAJ,EAAyB;AACrBA,QAAAA,mBAAmB,CAACC,KAAD,CAAnB;AACH;AACJ,KAtBkB;;AAEf,UAAKH,KAAL,GAAa;AACTD,MAAAA,eAAe,EAAE;AADR,KAAb;AAFe;AAKlB;;;;6BAmBQ;AAAA,wBASD,KAAKF,KATJ;AAAA,UAEDU,SAFC,eAEDA,SAFC;AAAA,UAGDC,IAHC,eAGDA,IAHC;AAAA,UAIDC,MAJC,eAIDA,MAJC;AAAA,UAKDC,cALC,eAKDA,cALC;AAAA,UAMDC,gBANC,eAMDA,gBANC;AAAA,UAODC,gBAPC,eAODA,gBAPC;AAAA,UAQDC,iBARC,eAQDA,iBARC;AAAA,UAUGd,eAVH,GAUuB,KAAKC,KAV5B,CAUGD,eAVH;AAYL,UAAMe,sBAAsB,GAAG,CAACf,eAAe,CAACgB,IAAhB,GAAuBC,MAAxB,IAAkC,CAAC,CAACH,iBAApC,IAAyD,CAAC,CAACD,gBAA1F;AAEA,aACI,oBAAC,KAAD;AACI,QAAA,SAAS,EAAEzB,UAAU,CAAC,kBAAD,EAAqBoB,SAArB,CADzB;AAEI,QAAA,oBAAoB,EAAC,0BAFzB;AAGI,QAAA,MAAM,EAAEE,MAHZ;AAII,QAAA,cAAc,EAAEC,cAJpB;AAKI,QAAA,KAAK,EACD,oBAAC,gBAAD,eACQf,QAAQ,CAACsB,mBADjB;AAEI,UAAA,MAAM,EAAE;AACJN,YAAAA,gBAAgB,EAAhBA;AADI;AAFZ;AANR,SAcI,oBAAC,SAAD;AACI,QAAA,SAAS,EAAC,mBADd;AAEI,QAAA,KAAK,EAAEE,iBAFX;AAGI,QAAA,UAAU,MAHd;AAII,QAAA,KAAK,EAAE,oBAAC,gBAAD,EAAsBlB,QAAQ,CAACuB,6BAA/B,CAJX;AAKI,QAAA,OAAO,EAAE,KAAKC,qBALlB;AAMI,QAAA,WAAW,EAAEX,IAAI,CAACY,aAAL,CAAmBzB,QAAQ,CAAC0B,mCAA5B,CANjB;AAOI,QAAA,IAAI,EAAC,MAPT;AAQI,QAAA,KAAK,EAAEtB;AARX,QAdJ,EAwBI,oBAAC,YAAD,QACI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,gCAAlB;AAAmD,QAAA,OAAO,EAAEW,cAA5D;AAA4E,QAAA,IAAI,EAAC;AAAjF,SACI,oBAAC,gBAAD,EAAsBf,QAAQ,CAAC2B,oBAA/B,CADJ,CADJ,EAII,oBAAC,aAAD;AACI,QAAA,SAAS,EAAC,gCADd;AAEI,QAAA,UAAU,EAAER,sBAFhB;AAGI,QAAA,SAAS,EAAEF,gBAHf;AAII,QAAA,OAAO,EAAE,KAAKW,iBAJlB;AAKI,QAAA,IAAI,EAAC;AALT,SAOI,oBAAC,gBAAD,EAAsB5B,QAAQ,CAAC6B,oBAA/B,CAPJ,CAJJ,CAxBJ,CADJ;AAyCH;;;;EApHwBtC,S;;gBAAvBU,c,eACiB;AACf;AACAW,EAAAA,SAAS,EAAEvB,SAAS,CAACyC,MAFN;AAGfjB,EAAAA,IAAI,EAAExB,SAAS,CAAC0C,GAHD;;AAIf;AACAjB,EAAAA,MAAM,EAAEzB,SAAS,CAAC2C,IALH;;AAMf;AACAjB,EAAAA,cAAc,EAAE1B,SAAS,CAAC4C,IAAV,CAAeC,UAPhB;;AAQf;;;;;AAKA/B,EAAAA,oBAAoB,EAAEd,SAAS,CAAC4C,IAAV,CAAeC,UAbtB;;AAcf;;;;;AAKA3B,EAAAA,mBAAmB,EAAElB,SAAS,CAAC4C,IAnBhB;;AAoBf;AACAjB,EAAAA,gBAAgB,EAAE3B,SAAS,CAACyC,MArBb;;AAsBf;AACAb,EAAAA,gBAAgB,EAAE5B,SAAS,CAAC2C,IAvBb;;AAwBf;AACAd,EAAAA,iBAAiB,EAAE7B,SAAS,CAACyC;AAzBd,C;;gBADjB7B,c,kBA6BoB;AAClBW,EAAAA,SAAS,EAAE,EADO;AAElBE,EAAAA,MAAM,EAAE,KAFU;AAGlBE,EAAAA,gBAAgB,EAAE,EAHA;AAIlBC,EAAAA,gBAAgB,EAAE,KAJA;AAKlBC,EAAAA,iBAAiB,EAAE;AALD,C;;AA0F1B,SAASjB,cAAc,IAAIkC,kBAA3B;AACA,eAAezC,UAAU,CAACO,cAAD,CAAzB","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport { Modal, ModalActions } from '../../../components/modal';\nimport TextInput from '../../../components/text-input';\nimport Button from '../../../components/button';\nimport PrimaryButton from '../../../components/primary-button';\n\nimport messages from '../messages';\n\nimport './NewFolderModal.scss';\n\nclass NewFolderModal extends Component {\n    static propTypes = {\n        /** Adds class name to modal. */\n        className: PropTypes.string,\n        intl: PropTypes.any,\n        /** Opens the modal. */\n        isOpen: PropTypes.bool,\n        /** Called when the modal is requested to be closed. */\n        onRequestClose: PropTypes.func.isRequired,\n        /**\n         * Called when the folder creation is submitted.\n         *\n         * @param {string} folderName\n         */\n        onCreateFolderSubmit: PropTypes.func.isRequired,\n        /**\n         * Called with the latest folder name input.\n         *\n         * @param {string} folderName\n         */\n        onCreateFolderInput: PropTypes.func,\n        /** The name of the parent folder that the new folder will be created in. */\n        parentFolderName: PropTypes.string,\n        /** Folder is in the process of being created. */\n        isCreatingFolder: PropTypes.bool,\n        /** Message that will be shown when there was an error creating the folder. */\n        createFolderError: PropTypes.string,\n    };\n\n    static defaultProps = {\n        className: '',\n        isOpen: false,\n        parentFolderName: '',\n        isCreatingFolder: false,\n        createFolderError: null,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            folderNameInput: '',\n        };\n    }\n\n    handleCreateClick = () => {\n        const { onCreateFolderSubmit } = this.props;\n        const { folderNameInput } = this.state;\n        onCreateFolderSubmit(folderNameInput);\n    };\n\n    handleFolderNameInput = event => {\n        const { onCreateFolderInput } = this.props;\n        const input = event.target.value;\n        this.setState({\n            folderNameInput: input,\n        });\n        if (onCreateFolderInput) {\n            onCreateFolderInput(input);\n        }\n    };\n\n    render() {\n        const {\n            className,\n            intl,\n            isOpen,\n            onRequestClose,\n            parentFolderName,\n            isCreatingFolder,\n            createFolderError,\n        } = this.props;\n        const { folderNameInput } = this.state;\n\n        const isCreateButtonDisabled = !folderNameInput.trim().length || !!createFolderError || !!isCreatingFolder;\n\n        return (\n            <Modal\n                className={classNames('new-folder-modal', className)}\n                focusElementSelector=\".folder-name-input input\"\n                isOpen={isOpen}\n                onRequestClose={onRequestClose}\n                title={\n                    <FormattedMessage\n                        {...messages.newFolderModalTitle}\n                        values={{\n                            parentFolderName,\n                        }}\n                    />\n                }\n            >\n                <TextInput\n                    className=\"folder-name-input\"\n                    error={createFolderError}\n                    isRequired\n                    label={<FormattedMessage {...messages.newFolderModalFolderNameLabel} />}\n                    onInput={this.handleFolderNameInput}\n                    placeholder={intl.formatMessage(messages.newFolderModalFolderNamePlaceholder)}\n                    type=\"text\"\n                    value={folderNameInput}\n                />\n                <ModalActions>\n                    <Button className=\"new-folder-modal-cancel-button\" onClick={onRequestClose} type=\"button\">\n                        <FormattedMessage {...messages.newFolderModalCancel} />\n                    </Button>\n                    <PrimaryButton\n                        className=\"new-folder-modal-create-button\"\n                        isDisabled={isCreateButtonDisabled}\n                        isLoading={isCreatingFolder}\n                        onClick={this.handleCreateClick}\n                        type=\"button\"\n                    >\n                        <FormattedMessage {...messages.newFolderModalCreate} />\n                    </PrimaryButton>\n                </ModalActions>\n            </Modal>\n        );\n    }\n}\n\nexport { NewFolderModal as NewFolderModalBase };\nexport default injectIntl(NewFolderModal);\n"],"file":"NewFolderModal.js"}