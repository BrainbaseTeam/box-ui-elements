{"version":3,"sources":["../../../../src/features/presence/utils/presenceUtils.js"],"names":["messages","MS_IN_A_MINUTE","MS_IN_A_DAY","INTERACTION_TYPE_MODIFY","INTERACTION_TYPE_UPLOAD","INTERACTION_TYPE_PREVIEW","INTERACTION_TYPE_OPEN","INTERACTION_TYPE_COMMENT","getLastActionTimeMS","lastAccessTimeMS","lastModifiedTimeMS","sessionLengthMS","sortByActivity","a","b","isActive","determineInteractionMessage","interactionType","interactedAt","message","lessThanAMinuteAgo","Date","now","modifiedIntheLastMinuteText","timeSinceLastModifiedText","previewedIntheLastMinuteText","timeSinceLastPreviewedText","accessedInTheLastMinuteText","timeSinceLastAccessedText","commentedIntheLastMinuteText","timeSinceLastCommentedText"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,aAArB;AAEA,IAAMC,cAAc,GAAG,KAAvB,C,CAA8B;;AAC9B,IAAMC,WAAW,GAAG,QAApB,C,CAA8B;;AAC9B,IAAMC,uBAAuB,GAAG,kBAAhC;AACA,IAAMC,uBAAuB,GAAG,kBAAhC;AACA,IAAMC,wBAAwB,GAAG,mBAAjC;AACA,IAAMC,qBAAqB,GAAG,gBAA9B;AACA,IAAMC,wBAAwB,GAAG,qBAAjC;;AAEA,SAASC,mBAAT,CAA6BC,gBAA7B,EAA+CC,kBAA/C,EAAkG;AAAA,MAA/BC,eAA+B,uEAAbT,WAAa;;AAC9F,MAAI,CAACQ,kBAAL,EAAyB;AACrB,WAAOD,gBAAP;AACH;;AAED,SAAOA,gBAAgB,GAAGC,kBAAnB,GAAwCC,eAAxC,GAA0DD,kBAA1D,GAA+ED,gBAAtF;AACH;;AAED,SAASG,cAAT,CAAwBC,CAAxB,EAA2BC,CAA3B,EAA8B;AAC1B,MAAID,CAAC,CAACE,QAAF,IAAcD,CAAC,CAACC,QAApB,EAA8B;AAC1B;AACA,WAAO,CAAP;AACH;;AACD,MAAIF,CAAC,CAACE,QAAF,IAAc,CAACD,CAAC,CAACC,QAArB,EAA+B;AAC3B;AACA,WAAO,CAAC,CAAR;AACH;;AACD,MAAI,CAACF,CAAC,CAACE,QAAH,IAAeD,CAAC,CAACC,QAArB,EAA+B;AAC3B;AACA,WAAO,CAAP;AACH,GAZyB,CAc1B;;;AACA,SAAO,CAAP;AACH;;AAED,SAASC,2BAAT,CAAqCC,eAArC,EAAsDC,YAAtD,EAAoE;AAChE,MAAIC,OAAJ;AACA,MAAMC,kBAAkB,GAAGC,IAAI,CAACC,GAAL,KAAaJ,YAAb,GAA4BjB,cAAvD;;AACA,UAAQgB,eAAR;AACI;AACA,SAAKd,uBAAL;AACA,SAAKC,uBAAL;AACIe,MAAAA,OAAO,GAAGC,kBAAkB,GAAGpB,QAAQ,CAACuB,2BAAZ,GAA0CvB,QAAQ,CAACwB,yBAA/E;AACA;;AACJ,SAAKnB,wBAAL;AACIc,MAAAA,OAAO,GAAGC,kBAAkB,GAAGpB,QAAQ,CAACyB,4BAAZ,GAA2CzB,QAAQ,CAAC0B,0BAAhF;AACA;AACJ;;AACA,SAAKpB,qBAAL;AACIa,MAAAA,OAAO,GAAGC,kBAAkB,GAAGpB,QAAQ,CAAC2B,2BAAZ,GAA0C3B,QAAQ,CAAC4B,yBAA/E;AACA;;AACJ,SAAKrB,wBAAL;AACIY,MAAAA,OAAO,GAAGC,kBAAkB,GAAGpB,QAAQ,CAAC6B,4BAAZ,GAA2C7B,QAAQ,CAAC8B,0BAAhF;AACA;;AACJ;AACIX,MAAAA,OAAO,GAAG,IAAV;AACA;AAlBR;;AAoBA,SAAOA,OAAP;AACH;;AAED,SAASP,cAAT,EAAyBJ,mBAAzB,EAA8CQ,2BAA9C","sourcesContent":["import messages from '../messages';\n\nconst MS_IN_A_MINUTE = 60000; // number of milliseconds in one minute\nconst MS_IN_A_DAY = 86400000; // number of milliseconds in one day\nconst INTERACTION_TYPE_MODIFY = 'user.item_modify';\nconst INTERACTION_TYPE_UPLOAD = 'user.item_upload';\nconst INTERACTION_TYPE_PREVIEW = 'user.item_preview';\nconst INTERACTION_TYPE_OPEN = 'user.item_open';\nconst INTERACTION_TYPE_COMMENT = 'user.comment_create';\n\nfunction getLastActionTimeMS(lastAccessTimeMS, lastModifiedTimeMS, sessionLengthMS = MS_IN_A_DAY) {\n    if (!lastModifiedTimeMS) {\n        return lastAccessTimeMS;\n    }\n\n    return lastAccessTimeMS - lastModifiedTimeMS < sessionLengthMS ? lastModifiedTimeMS : lastAccessTimeMS;\n}\n\nfunction sortByActivity(a, b) {\n    if (a.isActive && b.isActive) {\n        // if both users are active,  do not modify sort order\n        return 0;\n    }\n    if (a.isActive && !b.isActive) {\n        // if a is active and b is inactive, a comes first\n        return -1;\n    }\n    if (!a.isActive && b.isActive) {\n        // vice versa as above\n        return 1;\n    }\n\n    // otherwise, neither collaborator is active and we sort on the last \"action\" time\n    return 0;\n}\n\nfunction determineInteractionMessage(interactionType, interactedAt) {\n    let message;\n    const lessThanAMinuteAgo = Date.now() - interactedAt < MS_IN_A_MINUTE;\n    switch (interactionType) {\n        // For Box Notes only\n        case INTERACTION_TYPE_MODIFY:\n        case INTERACTION_TYPE_UPLOAD:\n            message = lessThanAMinuteAgo ? messages.modifiedIntheLastMinuteText : messages.timeSinceLastModifiedText;\n            break;\n        case INTERACTION_TYPE_PREVIEW:\n            message = lessThanAMinuteAgo ? messages.previewedIntheLastMinuteText : messages.timeSinceLastPreviewedText;\n            break;\n        // For Box Notes only\n        case INTERACTION_TYPE_OPEN:\n            message = lessThanAMinuteAgo ? messages.accessedInTheLastMinuteText : messages.timeSinceLastAccessedText;\n            break;\n        case INTERACTION_TYPE_COMMENT:\n            message = lessThanAMinuteAgo ? messages.commentedIntheLastMinuteText : messages.timeSinceLastCommentedText;\n            break;\n        default:\n            message = null;\n            break;\n    }\n    return message;\n}\n\nexport { sortByActivity, getLastActionTimeMS, determineInteractionMessage };\n"],"file":"presenceUtils.js"}