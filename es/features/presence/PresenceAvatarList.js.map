{"version":3,"sources":["../../../src/features/presence/PresenceAvatarList.tsx"],"names":["React","classNames","noop","PresenceAvatar","PresenceAvatarTooltipContent","Tooltip","TooltipPosition","PresenceAvatarList","props","ref","avatarAttributes","className","collaborators","hideAdditionalCount","hideTooltips","maxAdditionalCollaborators","maxDisplayedAvatars","onAvatarMouseEnter","onAvatarMouseLeave","rest","useState","activeTooltip","setActiveTooltip","hideTooltip","showTooltip","id","length","slice","map","collaborator","avatarUrl","name","isActive","interactedAt","interactionType","BOTTOM_CENTER","PresenceAvatarListComponent","forwardRef"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport noop from 'lodash/noop';\n// @ts-ignore flow import\nimport PresenceAvatar from './PresenceAvatar';\nimport PresenceAvatarTooltipContent from './PresenceAvatarTooltipContent';\nimport Tooltip, { TooltipPosition } from '../../components/tooltip';\nimport './PresenceAvatarList.scss';\n\nexport type Collaborator = {\n    avatarUrl?: string;\n    id: string;\n    isActive: boolean;\n    interactedAt: number;\n    interactionType: string;\n    name: string;\n    profileUrl?: string;\n};\n\nexport type Props = {\n    avatarAttributes?: React.HTMLAttributes<HTMLDivElement>;\n    className?: string;\n    collaborators: Array<Collaborator>;\n    hideAdditionalCount?: boolean;\n    hideTooltips?: boolean;\n    maxAdditionalCollaborators?: number;\n    maxDisplayedAvatars?: number;\n    onAvatarMouseEnter?: (id: string) => void;\n    onAvatarMouseLeave?: () => void;\n};\n\nfunction PresenceAvatarList(props: Props, ref: React.Ref<HTMLDivElement>): JSX.Element | null {\n    const {\n        avatarAttributes,\n        className,\n        collaborators,\n        hideAdditionalCount,\n        hideTooltips,\n        maxAdditionalCollaborators = 99,\n        maxDisplayedAvatars = 3,\n        onAvatarMouseEnter = noop,\n        onAvatarMouseLeave = noop,\n        ...rest\n    } = props;\n\n    const [activeTooltip, setActiveTooltip] = React.useState<string | null>(null);\n\n    const hideTooltip = (): void => {\n        setActiveTooltip(null);\n        if (onAvatarMouseLeave) {\n            onAvatarMouseLeave();\n        }\n    };\n\n    const showTooltip = (id: string): void => {\n        setActiveTooltip(id);\n        if (onAvatarMouseEnter) {\n            onAvatarMouseEnter(id);\n        }\n    };\n\n    if (!collaborators.length) {\n        return null;\n    }\n\n    return (\n        <div ref={ref} className={classNames('bdl-PresenceAvatarList', className)} {...rest}>\n            {collaborators.slice(0, maxDisplayedAvatars).map(collaborator => {\n                const { id, avatarUrl, name, isActive, interactedAt, interactionType } = collaborator;\n                return (\n                    <Tooltip\n                        key={id}\n                        isShown={!hideTooltips && activeTooltip === id}\n                        position={TooltipPosition.BOTTOM_CENTER}\n                        text={\n                            <PresenceAvatarTooltipContent\n                                name={name}\n                                interactedAt={interactedAt}\n                                interactionType={interactionType}\n                                isActive={isActive}\n                            />\n                        }\n                    >\n                        <PresenceAvatar\n                            avatarUrl={avatarUrl}\n                            id={id}\n                            isActive={isActive}\n                            name={name}\n                            onBlur={hideTooltip}\n                            onFocus={() => showTooltip(id)}\n                            onMouseEnter={() => showTooltip(id)}\n                            onMouseLeave={hideTooltip}\n                            {...avatarAttributes}\n                        />\n                    </Tooltip>\n                );\n            })}\n\n            {!hideAdditionalCount && collaborators.length > maxDisplayedAvatars && (\n                <div\n                    className={classNames('bdl-PresenceAvatarList-count', 'avatar')}\n                    // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n                    tabIndex={0}\n                    {...avatarAttributes}\n                >\n                    {collaborators.length - maxDisplayedAvatars > maxAdditionalCollaborators\n                        ? `${maxAdditionalCollaborators}+`\n                        : `+${collaborators.length - maxDisplayedAvatars}`}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport { PresenceAvatarList as PresenceAvatarListComponent };\n\nexport default React.forwardRef(PresenceAvatarList);\n"],"file":"PresenceAvatarList.js"}