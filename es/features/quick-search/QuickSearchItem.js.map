{"version":3,"sources":["../../../src/features/quick-search/QuickSearchItem.js"],"names":["React","classNames","injectIntl","FormattedMessage","RecordOf","convertToMs","isToday","isYesterday","DatalistItem","Folder16","ItemIcon","Link","messages","QUERY_SEPARATOR","QuickSearchItem","className","closeDropdown","intl","itemData","parentFolderRenderer","shouldNavigateOnItemClick","rest","formatMessage","extension","iconType","id","name","nameWithMarkedQuery","parentName","sharedLink","type","updatedBy","updatedDate","updatedDateInMs","markedQueryMatches","split","forEach","element","index","push","itemIconTitle","bookmark","file","collaboratedFolder","externalFolder","personalFolder","updatedText","updatedTextToday","user","updatedTextYesterday","date","href","targetProps","isBoxNote","target","itemName","e","stopPropagation","parentFolder"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { RecordOf } from 'immutable';\n\nimport type { ItemType } from '../../common/types/core';\nimport { convertToMs, isToday, isYesterday } from '../../utils/datetime';\nimport DatalistItem from '../../components/datalist-item';\nimport Folder16 from '../../icon/fill/Folder16';\nimport ItemIcon from '../../icons/item-icon';\nimport { Link } from '../../components/link';\n\nimport messages from './messages';\n\nimport './QuickSearchItem.scss';\n\nconst QUERY_SEPARATOR = '<mark>';\n\ntype QuickSearchItemData = {\n    extension?: string,\n    iconType: string,\n    id: string,\n    name: string,\n    nameWithMarkedQuery: string,\n    parentName?: string,\n    sharedLink?: string,\n    type: ItemType,\n    updatedBy: string,\n    updatedDate: number,\n};\n\ntype Props = {\n    className?: string,\n    closeDropdown?: Function,\n    intl: any,\n    itemData: QuickSearchItemData | RecordOf<QuickSearchItemData>,\n    parentFolderRenderer?: Function,\n    shouldNavigateOnItemClick?: boolean,\n};\n\nconst QuickSearchItem = ({\n    className,\n    closeDropdown,\n    intl,\n    itemData,\n    parentFolderRenderer,\n    shouldNavigateOnItemClick,\n    ...rest\n}: Props) => {\n    const { formatMessage } = intl;\n    const {\n        extension,\n        iconType,\n        id,\n        name,\n        nameWithMarkedQuery,\n        parentName,\n        sharedLink,\n        type,\n        updatedBy,\n        updatedDate,\n    } = itemData;\n    const updatedDateInMs = convertToMs(updatedDate);\n    const markedQueryMatches = [];\n    nameWithMarkedQuery.split(QUERY_SEPARATOR).forEach((element, index) =>\n        index % 2 === 0\n            ? markedQueryMatches.push(element)\n            : markedQueryMatches.push(\n                  <mark key={index} className=\"search-term\">\n                      {element}\n                  </mark>,\n              ),\n    );\n\n    let itemIconTitle;\n    switch (type) {\n        case 'web_link':\n            itemIconTitle = <FormattedMessage {...messages.bookmark} />;\n            break;\n        case 'file':\n            itemIconTitle = <FormattedMessage {...messages.file} />;\n            break;\n        case 'folder':\n            if (iconType === 'folder-collab') {\n                itemIconTitle = <FormattedMessage {...messages.collaboratedFolder} />;\n            } else if (iconType === 'folder-external') {\n                itemIconTitle = <FormattedMessage {...messages.externalFolder} />;\n            } else {\n                itemIconTitle = <FormattedMessage {...messages.personalFolder} />;\n            }\n            break;\n        default:\n    }\n\n    let updatedText;\n    if (isToday(updatedDateInMs)) {\n        updatedText = formatMessage(messages.updatedTextToday, {\n            user: updatedBy,\n        });\n    } else if (isYesterday(updatedDateInMs)) {\n        updatedText = formatMessage(messages.updatedTextYesterday, {\n            user: updatedBy,\n        });\n    } else {\n        updatedText = formatMessage(messages.updatedText, {\n            date: updatedDateInMs,\n            user: updatedBy,\n        });\n    }\n\n    let href;\n    let targetProps = {};\n    const isBoxNote = extension === 'boxnote';\n\n    switch (type) {\n        case 'folder':\n            href = `/folder/${id}`;\n            break;\n        case 'web_link':\n            href = `/web_link/${id}`;\n            targetProps = { target: '_blank' };\n            break;\n        case 'file':\n            // shared link should take precedence over other link types\n            if (sharedLink) {\n                href = sharedLink;\n            } else if (isBoxNote) {\n                href = `/notes/${id}`;\n            } else {\n                href = `/file/${id}`;\n            }\n\n            if (isBoxNote) targetProps = { target: '_blank' };\n            break;\n        default:\n    }\n\n    const itemName =\n        href && shouldNavigateOnItemClick ? (\n            <Link onClick={e => e.stopPropagation()} className=\"item-name\" href={href} title={name} {...targetProps}>\n                {markedQueryMatches}\n            </Link>\n        ) : (\n            <span className=\"item-name\" title={name}>\n                {markedQueryMatches}\n            </span>\n        );\n\n    return (\n        <DatalistItem className={classNames('quick-search-item', className)} {...rest}>\n            <ItemIcon iconType={iconType} title={itemIconTitle} />\n\n            <span className=\"item-info\">\n                {itemName}\n\n                <span className=\"item-subtext\">\n                    {(parentName || parentFolderRenderer) && (\n                        <>\n                            <Folder16 title={<FormattedMessage {...messages.parentFolder} />} height={12} width={12} />\n\n                            {parentFolderRenderer ? (\n                                parentFolderRenderer(itemData, closeDropdown)\n                            ) : (\n                                <span className=\"parent-folder\">{parentName}</span>\n                            )}\n\n                            <span className=\"separator\">•</span>\n                        </>\n                    )}\n\n                    <span className=\"txt-ellipsis\" title={updatedText}>\n                        {updatedText}\n                    </span>\n                </span>\n            </span>\n        </DatalistItem>\n    );\n};\n\nexport default injectIntl(QuickSearchItem);\n"],"file":"QuickSearchItem.js"}