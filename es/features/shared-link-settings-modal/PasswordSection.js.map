{"version":3,"sources":["../../../src/features/shared-link-settings-modal/PasswordSection.js"],"names":["React","PropTypes","FormattedMessage","injectIntl","intlShape","Checkbox","TextInput","Fieldset","messages","PasswordSection","canChangePassword","error","formatMessage","intl","isPasswordAvailable","isPasswordEnabled","isPasswordInitiallyEnabled","onCheckboxChange","onPasswordChange","password","passwordCheckboxProps","passwordInputProps","passwordInput","passwordPlaceholder","passwordTitle","passwordLabel","undefined","propTypes","bool","isRequired","string","func","object","PasswordSectionBase"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, injectIntl, intlShape } from 'react-intl';\n\nimport Checkbox from '../../components/checkbox';\nimport TextInput from '../../components/text-input';\nimport Fieldset from '../../components/fieldset';\n\nimport messages from './messages';\n\nconst PasswordSection = ({\n    canChangePassword,\n    error,\n    intl: { formatMessage },\n    isPasswordAvailable,\n    isPasswordEnabled,\n    isPasswordInitiallyEnabled,\n    onCheckboxChange,\n    onPasswordChange,\n    password,\n    passwordCheckboxProps = {},\n    passwordInputProps = {},\n}) => {\n    if (!isPasswordAvailable) {\n        return null;\n    }\n    const passwordInput = (\n        <div>\n            <TextInput\n                disabled={!canChangePassword}\n                error={error}\n                hideLabel\n                isRequired={!isPasswordInitiallyEnabled}\n                label={<FormattedMessage {...messages.passwordPlaceholder} />}\n                maxLength={100 /* maxlength due to backend constraint */}\n                name=\"password\"\n                onChange={onPasswordChange}\n                placeholder={isPasswordInitiallyEnabled ? '••••••••' : formatMessage(messages.passwordPlaceholder)}\n                type=\"password\"\n                value={password}\n                {...passwordInputProps}\n            />\n        </div>\n    );\n    return (\n        <div>\n            <hr />\n            <Fieldset className=\"password-section\" title={<FormattedMessage {...messages.passwordTitle} />}>\n                <Checkbox\n                    isChecked={isPasswordEnabled}\n                    isDisabled={!canChangePassword}\n                    label={<FormattedMessage {...messages.passwordLabel} />}\n                    name=\"isPasswordEnabled\"\n                    onChange={onCheckboxChange}\n                    subsection={isPasswordEnabled ? passwordInput : undefined}\n                    {...passwordCheckboxProps}\n                />\n            </Fieldset>\n        </div>\n    );\n};\n\nPasswordSection.propTypes = {\n    canChangePassword: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n    intl: intlShape.isRequired,\n    isPasswordAvailable: PropTypes.bool.isRequired,\n    isPasswordEnabled: PropTypes.bool.isRequired,\n    isPasswordInitiallyEnabled: PropTypes.bool.isRequired,\n    onCheckboxChange: PropTypes.func.isRequired,\n    onPasswordChange: PropTypes.func.isRequired,\n    password: PropTypes.string,\n    passwordCheckboxProps: PropTypes.object,\n    passwordInputProps: PropTypes.object,\n};\n\nexport { PasswordSection as PasswordSectionBase };\nexport default injectIntl(PasswordSection);\n"],"file":"PasswordSection.js"}