{"version":3,"sources":["../../../src/features/shared-link-settings-modal/PasswordSection.js"],"names":["React","PropTypes","FormattedMessage","injectIntl","Checkbox","TextInput","Fieldset","ExclamationMarkBadge16","messages","PasswordSection","canChangePassword","error","formatMessage","intl","isPasswordAvailable","isPasswordEnabled","isPasswordInitiallyEnabled","onCheckboxChange","onPasswordChange","password","passwordCheckboxProps","passwordInformationText","passwordInputProps","passwordInput","passwordPlaceholder","passwordTitle","passwordLabel","undefined","propTypes","bool","isRequired","string","any","func","object","PasswordSectionBase"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport Checkbox from '../../components/checkbox';\nimport TextInput from '../../components/text-input';\nimport Fieldset from '../../components/fieldset';\n\nimport ExclamationMarkBadge16 from '../../icon/line/ExclamationMarkBadge16';\n\nimport messages from './messages';\n\nconst PasswordSection = ({\n    canChangePassword,\n    error,\n    intl: { formatMessage },\n    isPasswordAvailable,\n    isPasswordEnabled,\n    isPasswordInitiallyEnabled,\n    onCheckboxChange,\n    onPasswordChange,\n    password,\n    passwordCheckboxProps = {},\n    passwordInformationText,\n    passwordInputProps = {},\n}) => {\n    if (!isPasswordAvailable) {\n        return null;\n    }\n    const passwordInput = (\n        <div>\n            <TextInput\n                disabled={!canChangePassword}\n                error={error}\n                hideLabel\n                isRequired={!isPasswordInitiallyEnabled}\n                label={<FormattedMessage {...messages.passwordPlaceholder} />}\n                maxLength={100 /* maxlength due to backend constraint */}\n                name=\"password\"\n                onChange={onPasswordChange}\n                placeholder={isPasswordInitiallyEnabled ? '••••••••' : formatMessage(messages.passwordPlaceholder)}\n                type=\"password\"\n                value={password}\n                {...passwordInputProps}\n            />\n            {passwordInformationText && (\n                <div className=\"be password-section-information\">\n                    <span>\n                        <ExclamationMarkBadge16 className=\"password-section-information-icon\" height={12} width={12} />\n                    </span>\n                    <span className=\"password-section-information-text\">{passwordInformationText}</span>\n                </div>\n            )}\n        </div>\n    );\n    return (\n        <div>\n            <hr />\n            <Fieldset className=\"be password-section\" title={<FormattedMessage {...messages.passwordTitle} />}>\n                <Checkbox\n                    isChecked={isPasswordEnabled}\n                    isDisabled={!canChangePassword}\n                    label={<FormattedMessage {...messages.passwordLabel} />}\n                    name=\"isPasswordEnabled\"\n                    onChange={onCheckboxChange}\n                    subsection={isPasswordEnabled ? passwordInput : undefined}\n                    {...passwordCheckboxProps}\n                />\n            </Fieldset>\n        </div>\n    );\n};\nPasswordSection.propTypes = {\n    canChangePassword: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n    intl: PropTypes.any,\n    isPasswordAvailable: PropTypes.bool.isRequired,\n    isPasswordEnabled: PropTypes.bool.isRequired,\n    isPasswordInitiallyEnabled: PropTypes.bool.isRequired,\n    onCheckboxChange: PropTypes.func.isRequired,\n    onPasswordChange: PropTypes.func.isRequired,\n    password: PropTypes.string,\n    passwordCheckboxProps: PropTypes.object,\n    passwordInformationText: PropTypes.string,\n    passwordInputProps: PropTypes.object,\n};\n\nexport { PasswordSection as PasswordSectionBase };\nexport default injectIntl(PasswordSection);\n"],"file":"PasswordSection.js"}