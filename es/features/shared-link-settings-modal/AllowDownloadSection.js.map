{"version":3,"sources":["../../../src/features/shared-link-settings-modal/AllowDownloadSection.js"],"names":["React","PropTypes","FormattedMessage","classNames","Checkbox","TextInputWithCopyButton","Fieldset","Tooltip","messages","AllowDownloadSection","canChangeDownload","classification","directLink","directLinkInputProps","downloadCheckboxProps","isDirectLinkAvailable","isDirectLinkUnavailableDueToDownloadSettings","isDirectLinkUnavailableDueToAccessPolicy","isDownloadAvailable","isDownloadEnabled","onChange","directLinkSection","directLinkLabel","tooltipMessage","directDownloadBlockedByAccessPolicyWithClassification","directDownloadBlockedByAccessPolicyWithoutClassification","allowDownloadSectionClass","isDirectLinkSectionVisible","allowDownloadTitle","allowDownloadLabel","propTypes","bool","isRequired","object","string","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\n\nimport Checkbox from '../../components/checkbox';\nimport TextInputWithCopyButton from '../../components/text-input-with-copy-button';\nimport Fieldset from '../../components/fieldset';\nimport Tooltip from '../../components/tooltip';\n\nimport messages from './messages';\n\nconst AllowDownloadSection = ({\n    canChangeDownload,\n    classification,\n    directLink,\n    directLinkInputProps = {},\n    downloadCheckboxProps = {},\n    isDirectLinkAvailable,\n    isDirectLinkUnavailableDueToDownloadSettings,\n    isDirectLinkUnavailableDueToAccessPolicy,\n    isDownloadAvailable,\n    isDownloadEnabled,\n    onChange,\n}) => {\n    if (!isDownloadAvailable && !isDirectLinkAvailable) {\n        return null;\n    }\n\n    const directLinkSection = (\n        <div>\n            <TextInputWithCopyButton\n                className=\"direct-link-input\"\n                label={<FormattedMessage {...messages.directLinkLabel} />}\n                type=\"url\"\n                value={directLink}\n                {...directLinkInputProps}\n            />\n        </div>\n    );\n\n    const tooltipMessage = classification\n        ? { ...messages.directDownloadBlockedByAccessPolicyWithClassification }\n        : { ...messages.directDownloadBlockedByAccessPolicyWithoutClassification };\n\n    const allowDownloadSectionClass = classNames('bdl-AllowDownloadSection', {\n        'bdl-is-disabled': isDirectLinkUnavailableDueToAccessPolicy,\n    });\n    const isDirectLinkSectionVisible =\n        (isDirectLinkAvailable || isDirectLinkUnavailableDueToDownloadSettings) && isDownloadEnabled;\n\n    if (isDownloadAvailable) {\n        return (\n            <div className={allowDownloadSectionClass}>\n                <hr />\n                <Tooltip\n                    isDisabled={!isDirectLinkUnavailableDueToAccessPolicy}\n                    text={<FormattedMessage {...tooltipMessage} />}\n                    position=\"middle-left\"\n                >\n                    <Fieldset\n                        disabled={isDirectLinkUnavailableDueToAccessPolicy}\n                        title={<FormattedMessage {...messages.allowDownloadTitle} />}\n                    >\n                        <Checkbox\n                            isChecked={isDownloadEnabled}\n                            isDisabled={!canChangeDownload || isDirectLinkUnavailableDueToAccessPolicy}\n                            label={<FormattedMessage {...messages.allowDownloadLabel} />}\n                            name=\"isDownloadEnabled\"\n                            onChange={onChange}\n                            {...downloadCheckboxProps}\n                        />\n                        {isDirectLinkSectionVisible && directLinkSection}\n                    </Fieldset>\n                </Tooltip>\n            </div>\n        );\n    }\n\n    // When download section not available but direct link is available\n    return (\n        <div>\n            <hr />\n            {directLinkSection}\n        </div>\n    );\n};\n\nAllowDownloadSection.propTypes = {\n    canChangeDownload: PropTypes.bool.isRequired,\n    classification: PropTypes.object,\n    directLink: PropTypes.string.isRequired,\n    directLinkInputProps: PropTypes.object,\n    downloadCheckboxProps: PropTypes.object,\n    isDirectLinkAvailable: PropTypes.bool.isRequired,\n    isDirectLinkUnavailableDueToAccessPolicy: PropTypes.bool,\n    isDirectLinkUnavailableDueToDownloadSettings: PropTypes.bool.isRequired,\n    isDownloadAvailable: PropTypes.bool.isRequired,\n    isDownloadEnabled: PropTypes.bool.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default AllowDownloadSection;\n"],"file":"AllowDownloadSection.js"}