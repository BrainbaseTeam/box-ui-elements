{"version":3,"sources":["../../../src/features/shared-link-settings-modal/AllowDownloadSection.js"],"names":["React","PropTypes","FormattedMessage","classNames","Checkbox","TextInputWithCopyButton","Fieldset","Tooltip","messages","AllowDownloadSection","canChangeDownload","classification","directLink","directLinkInputProps","downloadCheckboxProps","isDirectLinkAvailable","isDirectLinkUnavailableDueToDownloadSettings","isDirectLinkUnavailableDueToAccessPolicy","isDirectLinkUnavailableDueToMaliciousContent","isDownloadAvailable","isDownloadEnabled","onChange","directLinkSection","directLinkLabel","isDirectLinkUnavailable","allowDownloadSectionClass","isDirectLinkSectionVisible","tooltipMessage","directDownloadBlockedByMaliciousContent","directDownloadBlockedByAccessPolicyWithClassification","directDownloadBlockedByAccessPolicyWithoutClassification","allowDownloadTitle","allowDownloadLabel","propTypes","bool","isRequired","string","object","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\n\nimport Checkbox from '../../components/checkbox';\nimport TextInputWithCopyButton from '../../components/text-input-with-copy-button';\nimport Fieldset from '../../components/fieldset';\nimport Tooltip from '../../components/tooltip';\n\nimport messages from './messages';\n\nimport './AllowDownloadSection.scss';\n\nconst AllowDownloadSection = ({\n    canChangeDownload,\n    classification,\n    directLink,\n    directLinkInputProps = {},\n    downloadCheckboxProps = {},\n    isDirectLinkAvailable,\n    isDirectLinkUnavailableDueToDownloadSettings,\n    isDirectLinkUnavailableDueToAccessPolicy,\n    isDirectLinkUnavailableDueToMaliciousContent,\n    isDownloadAvailable,\n    isDownloadEnabled,\n    onChange,\n}) => {\n    if (!isDownloadAvailable && !isDirectLinkAvailable) {\n        return null;\n    }\n\n    const directLinkSection = (\n        <div>\n            <TextInputWithCopyButton\n                className=\"direct-link-input\"\n                label={<FormattedMessage {...messages.directLinkLabel} />}\n                type=\"url\"\n                value={directLink}\n                {...directLinkInputProps}\n            />\n        </div>\n    );\n    const isDirectLinkUnavailable =\n        isDirectLinkUnavailableDueToAccessPolicy || isDirectLinkUnavailableDueToMaliciousContent;\n    const allowDownloadSectionClass = classNames('bdl-AllowDownloadSection', {\n        'bdl-is-disabled': isDirectLinkUnavailable,\n    });\n    const isDirectLinkSectionVisible =\n        (isDirectLinkAvailable || isDirectLinkUnavailableDueToDownloadSettings) && isDownloadEnabled;\n\n    let tooltipMessage = null;\n\n    if (isDirectLinkUnavailableDueToMaliciousContent) {\n        tooltipMessage = { ...messages.directDownloadBlockedByMaliciousContent };\n    } else if (classification) {\n        tooltipMessage = { ...messages.directDownloadBlockedByAccessPolicyWithClassification };\n    } else {\n        tooltipMessage = { ...messages.directDownloadBlockedByAccessPolicyWithoutClassification };\n    }\n\n    if (isDownloadAvailable) {\n        return (\n            <div className={allowDownloadSectionClass}>\n                <hr />\n                <Tooltip\n                    isDisabled={!isDirectLinkUnavailable}\n                    text={<FormattedMessage {...tooltipMessage} />}\n                    position=\"middle-left\"\n                >\n                    <Fieldset\n                        className=\"be\"\n                        disabled={isDirectLinkUnavailable}\n                        title={<FormattedMessage {...messages.allowDownloadTitle} />}\n                    >\n                        <Checkbox\n                            isChecked={isDownloadEnabled}\n                            isDisabled={!canChangeDownload || isDirectLinkUnavailable}\n                            label={<FormattedMessage {...messages.allowDownloadLabel} />}\n                            name=\"isDownloadEnabled\"\n                            onChange={onChange}\n                            {...downloadCheckboxProps}\n                        />\n                        {isDirectLinkSectionVisible && directLinkSection}\n                    </Fieldset>\n                </Tooltip>\n            </div>\n        );\n    }\n\n    // When download section not available but direct link is available\n    return (\n        <div>\n            <hr />\n            {directLinkSection}\n        </div>\n    );\n};\n\nAllowDownloadSection.propTypes = {\n    canChangeDownload: PropTypes.bool.isRequired,\n    classification: PropTypes.string,\n    directLink: PropTypes.string.isRequired,\n    directLinkInputProps: PropTypes.object,\n    downloadCheckboxProps: PropTypes.object,\n    isDirectLinkAvailable: PropTypes.bool.isRequired,\n    isDirectLinkUnavailableDueToMaliciousContent: PropTypes.bool,\n    isDirectLinkUnavailableDueToAccessPolicy: PropTypes.bool,\n    isDirectLinkUnavailableDueToDownloadSettings: PropTypes.bool.isRequired,\n    isDownloadAvailable: PropTypes.bool.isRequired,\n    isDownloadEnabled: PropTypes.bool.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default AllowDownloadSection;\n"],"file":"AllowDownloadSection.js"}