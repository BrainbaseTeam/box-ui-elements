{"version":3,"sources":["../../../src/features/shared-link-settings-modal/SharedLinkSettingsModal.js"],"names":["React","Component","PropTypes","FormattedMessage","Button","PrimaryButton","Modal","ModalActions","InlineNotice","Link","commonMessages","Classification","VanityNameSection","PasswordSection","ExpirationSection","AllowDownloadSection","messages","PEOPLE_WITH_LINK","PEOPLE_IN_COMPANY","PEOPLE_IN_ITEM","getAccessNoticeMessageId","accessLevel","canDownload","message","withLinkViewDownload","withLinkView","inCompanyViewDownload","inCompanyView","inItem","SharedLinkSettingsModal","props","event","preventDefault","state","expirationDate","isDownloadEnabled","isExpirationEnabled","isPasswordEnabled","password","vanityName","onSubmit","expirationTimestamp","getTime","undefined","setState","target","value","vanityNameError","passwordError","checked","date","expirationError","isVanityEnabled","Date","prevProps","canChangeVanityName","hideVanityNameSection","serverURL","vanityNameInputProps","warnOnPublic","onVanityNameChange","onVanityCheckboxChange","canChangePassword","isPasswordAvailable","passwordCheckboxProps","passwordInformationText","passwordInputProps","onPasswordCheckboxChange","onPasswordChange","canChangeExpiration","expirationCheckboxProps","expirationInputProps","onExpirationCheckboxChange","onExpirationDateChange","sharedLinkSettingWarningLinkText","canChangeDownload","directLink","directLinkInputProps","downloadCheckboxProps","isDirectLinkAvailable","isDirectLinkUnavailableDueToDownloadSettings","isDirectLinkUnavailableDueToAccessPolicy","isDirectLinkUnavailableDueToMaliciousContent","isDownloadAvailable","item","classification","onAllowDownloadChange","bannerPolicy","modalTitle","body","cancelButtonProps","isOpen","modalProps","onRequestClose","saveButtonProps","submitting","showInaccessibleSettingsNotice","disableSaveBtn","renderModalTitle","inaccessibleSettingsNotice","renderAccessLevelNotice","renderExpirationSection","renderPasswordSection","renderVanityNameSection","renderAllowDownloadSection","cancel","save","bool","func","isRequired","string","number","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport Button from '../../components/button';\nimport PrimaryButton from '../../components/primary-button';\nimport { Modal, ModalActions } from '../../components/modal';\nimport InlineNotice from '../../components/inline-notice';\nimport Link from '../../components/link/LinkBase';\nimport commonMessages from '../../common/messages';\nimport Classification from '../classification';\n\nimport VanityNameSection from './VanityNameSection';\nimport PasswordSection from './PasswordSection';\nimport ExpirationSection from './ExpirationSection';\nimport AllowDownloadSection from './AllowDownloadSection';\nimport messages from './messages';\n\nimport { PEOPLE_WITH_LINK, PEOPLE_IN_COMPANY, PEOPLE_IN_ITEM } from '../shared-link-modal/constants';\n\nimport './SharedLinkSettingsModal.scss';\n\n/**\n * Return the translation message based on the access level and whether the user can download or not\n * @param {string} accessLevel one of 'peopleWithTheLink', 'peopleInYourCompany', or 'peopleInThisItem'\n * @param {boolean} canDownload prop value for whether the user can currently download\n *\n * @return {object|undefined} message for the proper translation (or undefined if nothing matches)\n */\nfunction getAccessNoticeMessageId(accessLevel, canDownload) {\n    let message;\n\n    switch (accessLevel) {\n        case PEOPLE_WITH_LINK:\n            message = canDownload ? messages.withLinkViewDownload : messages.withLinkView;\n            break;\n        case PEOPLE_IN_COMPANY:\n            message = canDownload ? messages.inCompanyViewDownload : messages.inCompanyView;\n            break;\n        case PEOPLE_IN_ITEM:\n            message = messages.inItem;\n            break;\n        default:\n            break;\n    }\n\n    return message;\n}\n\nclass SharedLinkSettingsModal extends Component {\n    static propTypes = {\n        hideVanityNameSection: PropTypes.bool,\n        isOpen: PropTypes.bool,\n        onRequestClose: PropTypes.func,\n        submitting: PropTypes.bool,\n        warnOnPublic: PropTypes.bool,\n        /** Function called on form submission. Format is:\n         * ({\n         *      expirationTimestamp: number (in milliseconds),\n         *      isDownloadEnabled: true,\n         *      isExpirationEnabled: true,\n         *      isPasswordEnabled: true,\n         *      password: string,\n         *      vanityName: string,\n         * }) => void\n         */\n        onSubmit: PropTypes.func.isRequired,\n\n        // access level props\n        /** the access level used for the item being shared */\n        accessLevel: PropTypes.string,\n\n        // Custom URL props\n        /** Whether or not user has permission to change/set vanity URL for this item */\n        canChangeVanityName: PropTypes.bool.isRequired,\n        /** Current vanity name for the item */\n        vanityName: PropTypes.string.isRequired,\n        /** Server URL prefix for vanity URL preview; should be something like http://company.box.com/v/ */\n        serverURL: PropTypes.string.isRequired,\n        vanityNameError: PropTypes.string,\n\n        // Password props\n        /** Whether or not user has permission to enable/disable/change password */\n        canChangePassword: PropTypes.bool.isRequired,\n        /** Whether or not the password section is visible to user */\n        isPasswordAvailable: PropTypes.bool.isRequired,\n        /** Whether or not password is currently enabled */\n        isPasswordEnabled: PropTypes.bool.isRequired,\n        passwordError: PropTypes.string,\n        /** Information shown below password input box * */\n        passwordInformationText: PropTypes.string,\n\n        // Expiration props\n        /** Whether or not user has permission to enable/disable/change expiration */\n        canChangeExpiration: PropTypes.bool.isRequired,\n        /** Current expiration timestamp, in milliseconds */\n        expirationTimestamp: PropTypes.number,\n        expirationError: PropTypes.string,\n\n        // Allow download props\n        /** Whether or not the download section is visible to user */\n        isDownloadAvailable: PropTypes.bool.isRequired,\n        /** Whether or not user has permission to enable/disable download */\n        canChangeDownload: PropTypes.bool.isRequired,\n        /** Whether or not download is currently enabled */\n        isDownloadEnabled: PropTypes.bool.isRequired,\n\n        // Direct link props\n        /** URL for direct link */\n        directLink: PropTypes.string.isRequired,\n        /** Whether or not direct link is available */\n        isDirectLinkAvailable: PropTypes.bool.isRequired,\n        /** Whether or not direct link is unavailable only due to download setting */\n        isDirectLinkUnavailableDueToDownloadSettings: PropTypes.bool.isRequired,\n        /** Whether or not direct link is unavailable only due to access policy setting */\n        isDirectLinkUnavailableDueToAccessPolicy: PropTypes.bool.isRequired,\n        /** Whether or not direct link is unavailable only due to malicious content policy */\n        isDirectLinkUnavailableDueToMaliciousContent: PropTypes.bool.isRequired,\n\n        // Classification props\n        item: PropTypes.object,\n\n        // Hooks for resin\n        cancelButtonProps: PropTypes.object,\n        directLinkInputProps: PropTypes.object,\n        downloadCheckboxProps: PropTypes.object,\n        expirationCheckboxProps: PropTypes.object,\n        expirationInputProps: PropTypes.object,\n        modalProps: PropTypes.object,\n        passwordCheckboxProps: PropTypes.object,\n        passwordInputProps: PropTypes.object,\n        saveButtonProps: PropTypes.object,\n        vanityNameInputProps: PropTypes.object,\n    };\n\n    static defaultProps = {\n        cancelButtonProps: {},\n        modalProps: {},\n        saveButtonProps: {},\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            expirationDate: props.expirationTimestamp ? new Date(props.expirationTimestamp) : null,\n            expirationError: props.expirationError,\n            isVanityEnabled: !!props.vanityName,\n            isDownloadEnabled: props.isDownloadEnabled,\n            isExpirationEnabled: !!props.expirationTimestamp,\n            isPasswordEnabled: props.isPasswordEnabled,\n            password: '',\n            passwordError: props.passwordError,\n            vanityName: props.vanityName,\n            vanityNameError: props.vanityNameError,\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        const { expirationError, passwordError, vanityNameError } = this.props;\n\n        if (\n            prevProps.expirationError !== expirationError ||\n            prevProps.passwordError !== passwordError ||\n            prevProps.vanityNameError !== vanityNameError\n        ) {\n            this.setState({\n                expirationError,\n                passwordError,\n                vanityNameError,\n            });\n        }\n    }\n\n    onSubmit = event => {\n        event.preventDefault();\n\n        const {\n            expirationDate,\n            isDownloadEnabled,\n            isExpirationEnabled,\n            isPasswordEnabled,\n            password,\n            vanityName,\n        } = this.state;\n\n        this.props.onSubmit({\n            expirationTimestamp: expirationDate ? expirationDate.getTime() : undefined,\n            isDownloadEnabled,\n            isExpirationEnabled,\n            isPasswordEnabled,\n            password,\n            vanityName,\n        });\n    };\n\n    onVanityNameChange = event => {\n        this.setState({\n            vanityName: event.target.value,\n            vanityNameError: undefined,\n        });\n    };\n\n    onPasswordChange = event => {\n        this.setState({\n            password: event.target.value,\n            passwordError: undefined,\n        });\n    };\n\n    onPasswordCheckboxChange = event => {\n        this.setState({ isPasswordEnabled: event.target.checked });\n    };\n\n    onExpirationDateChange = date => {\n        this.setState({ expirationDate: date, expirationError: undefined });\n    };\n\n    onExpirationCheckboxChange = event => {\n        this.setState({ isExpirationEnabled: event.target.checked });\n    };\n\n    onAllowDownloadChange = event => {\n        this.setState({ isDownloadEnabled: event.target.checked });\n    };\n\n    onVanityCheckboxChange = event => {\n        this.setState({\n            isVanityEnabled: event.target.checked,\n            vanityName: !event.target.checked ? '' : this.props.vanityName,\n        });\n    };\n\n    renderVanityNameSection() {\n        const {\n            canChangeVanityName,\n            hideVanityNameSection,\n            serverURL,\n            vanityNameInputProps,\n            warnOnPublic = false,\n        } = this.props;\n        const { vanityNameError, isVanityEnabled } = this.state;\n\n        if (hideVanityNameSection) {\n            return null;\n        }\n\n        return (\n            <VanityNameSection\n                canChangeVanityName={canChangeVanityName}\n                isVanityEnabled={isVanityEnabled}\n                error={vanityNameError}\n                onChange={this.onVanityNameChange}\n                onCheckboxChange={this.onVanityCheckboxChange}\n                serverURL={serverURL}\n                vanityName={this.state.vanityName}\n                vanityNameInputProps={vanityNameInputProps}\n                warnOnPublic={warnOnPublic}\n            />\n        );\n    }\n\n    renderPasswordSection() {\n        const {\n            canChangePassword,\n            isPasswordAvailable,\n            passwordCheckboxProps,\n            passwordInformationText,\n            passwordInputProps,\n        } = this.props;\n        const { isPasswordEnabled, password, passwordError } = this.state;\n\n        return (\n            <PasswordSection\n                canChangePassword={canChangePassword}\n                error={passwordError}\n                isPasswordAvailable={isPasswordAvailable}\n                isPasswordEnabled={isPasswordEnabled}\n                isPasswordInitiallyEnabled={this.props.isPasswordEnabled}\n                onCheckboxChange={this.onPasswordCheckboxChange}\n                onPasswordChange={this.onPasswordChange}\n                password={password}\n                passwordCheckboxProps={passwordCheckboxProps}\n                passwordInformationText={passwordInformationText}\n                passwordInputProps={passwordInputProps}\n            />\n        );\n    }\n\n    renderExpirationSection() {\n        const { canChangeExpiration, expirationCheckboxProps, expirationInputProps } = this.props;\n        const { expirationDate, isExpirationEnabled, expirationError } = this.state;\n\n        return (\n            <ExpirationSection\n                canChangeExpiration={canChangeExpiration}\n                error={expirationError}\n                expirationCheckboxProps={expirationCheckboxProps}\n                expirationDate={expirationDate}\n                expirationInputProps={expirationInputProps}\n                isExpirationEnabled={isExpirationEnabled}\n                onCheckboxChange={this.onExpirationCheckboxChange}\n                onExpirationDateChange={this.onExpirationDateChange}\n            />\n        );\n    }\n\n    renderAccessLevelNotice() {\n        const { accessLevel } = this.props;\n        const { isDownloadEnabled } = this.state;\n        const message = getAccessNoticeMessageId(accessLevel, isDownloadEnabled);\n\n        return (\n            message && (\n                <div className=\"link-settings-modal-notice\">\n                    <FormattedMessage {...message} />{' '}\n                    <Link\n                        href=\"https://community.box.com/t5/Using-Shared-Links/Shared-Link-Settings/ta-p/50250\"\n                        target=\"_blank\"\n                    >\n                        <FormattedMessage {...messages.sharedLinkSettingWarningLinkText} />\n                    </Link>\n                </div>\n            )\n        );\n    }\n\n    renderAllowDownloadSection() {\n        const {\n            canChangeDownload,\n            directLink,\n            directLinkInputProps,\n            downloadCheckboxProps,\n            isDirectLinkAvailable,\n            isDirectLinkUnavailableDueToDownloadSettings,\n            isDirectLinkUnavailableDueToAccessPolicy,\n            isDirectLinkUnavailableDueToMaliciousContent,\n            isDownloadAvailable,\n            item,\n        } = this.props;\n\n        const { isDownloadEnabled } = this.state;\n        const { classification } = item;\n\n        return (\n            <AllowDownloadSection\n                canChangeDownload={canChangeDownload}\n                classification={classification}\n                directLink={directLink}\n                directLinkInputProps={directLinkInputProps}\n                downloadCheckboxProps={downloadCheckboxProps}\n                isDirectLinkAvailable={isDirectLinkAvailable}\n                isDirectLinkUnavailableDueToDownloadSettings={isDirectLinkUnavailableDueToDownloadSettings}\n                isDirectLinkUnavailableDueToAccessPolicy={isDirectLinkUnavailableDueToAccessPolicy}\n                isDirectLinkUnavailableDueToMaliciousContent={isDirectLinkUnavailableDueToMaliciousContent}\n                isDownloadAvailable={isDownloadAvailable}\n                isDownloadEnabled={isDownloadEnabled}\n                onChange={this.onAllowDownloadChange}\n            />\n        );\n    }\n\n    renderModalTitle() {\n        const { item } = this.props;\n        const { bannerPolicy, classification } = item;\n\n        return (\n            <span className=\"bdl-SharedLinkSettingsModal-title\">\n                <FormattedMessage {...messages.modalTitle} />\n                <Classification\n                    definition={bannerPolicy ? bannerPolicy.body : undefined}\n                    messageStyle=\"tooltip\"\n                    name={classification}\n                    className=\"bdl-SharedLinkSettingsModal-classification\"\n                />\n            </span>\n        );\n    }\n\n    render() {\n        const {\n            canChangeDownload,\n            canChangeExpiration,\n            canChangePassword,\n            canChangeVanityName,\n            cancelButtonProps,\n            isOpen,\n            modalProps,\n            onRequestClose,\n            saveButtonProps,\n            submitting,\n        } = this.props;\n\n        const showInaccessibleSettingsNotice = !(\n            canChangeDownload &&\n            canChangeExpiration &&\n            canChangePassword &&\n            canChangeVanityName\n        );\n\n        const disableSaveBtn = !(canChangeDownload || canChangeExpiration || canChangePassword || canChangeVanityName);\n        return (\n            <Modal\n                className=\"be-modal shared-link-settings-modal\"\n                isOpen={isOpen}\n                onRequestClose={submitting ? undefined : onRequestClose}\n                title={this.renderModalTitle()}\n                {...modalProps}\n            >\n                <form onSubmit={this.onSubmit}>\n                    {showInaccessibleSettingsNotice && (\n                        <InlineNotice type=\"warning\">\n                            <FormattedMessage {...messages.inaccessibleSettingsNotice} />\n                        </InlineNotice>\n                    )}\n                    {this.renderAccessLevelNotice()}\n                    {this.renderExpirationSection()}\n                    {this.renderPasswordSection()}\n                    {this.renderVanityNameSection()}\n                    {this.renderAllowDownloadSection()}\n                    <ModalActions>\n                        <Button isDisabled={submitting} onClick={onRequestClose} type=\"button\" {...cancelButtonProps}>\n                            <FormattedMessage {...commonMessages.cancel} />\n                        </Button>\n                        <PrimaryButton\n                            isDisabled={submitting || disableSaveBtn}\n                            isLoading={submitting}\n                            {...saveButtonProps}\n                        >\n                            <FormattedMessage {...commonMessages.save} />\n                        </PrimaryButton>\n                    </ModalActions>\n                </form>\n            </Modal>\n        );\n    }\n}\n\nexport default SharedLinkSettingsModal;\n"],"file":"SharedLinkSettingsModal.js"}