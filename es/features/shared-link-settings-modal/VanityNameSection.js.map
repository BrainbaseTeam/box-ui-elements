{"version":3,"sources":["../../../src/features/shared-link-settings-modal/VanityNameSection.js"],"names":["React","PropTypes","FormattedMessage","injectIntl","bdlGray62","Checkbox","TextInput","Fieldset","QuarantineBadge","messages","VanityNameSection","canChangeVanityName","error","formatMessage","intl","isVanityEnabled","vanityName","vanityNameInputProps","serverURL","onChange","onCheckboxChange","inputValue","vanityNameNotSet","vanityURLInput","vanityURLWarning","vanityNamePlaceholder","customURLLabel","vanityURLEnableText","undefined","propTypes","bool","isRequired","string","any","object","func","VanityNameSectionBase"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport { bdlGray62 } from '../../styles/variables';\n\nimport Checkbox from '../../components/checkbox';\nimport TextInput from '../../components/text-input';\nimport Fieldset from '../../components/fieldset';\nimport QuarantineBadge from '../../icons/badges/QuarantineBadge';\n\nimport messages from './messages';\n\nconst VanityNameSection = ({\n    canChangeVanityName,\n    error,\n    intl: { formatMessage },\n    isVanityEnabled,\n    vanityName,\n    vanityNameInputProps = {},\n    serverURL,\n    onChange,\n    onCheckboxChange,\n}) => {\n    const inputValue = canChangeVanityName ? vanityName : vanityName || formatMessage(messages.vanityNameNotSet);\n\n    const vanityURLInput = (\n        <div className=\"vanity-name-content\">\n            <TextInput\n                description={\n                    <span>\n                        <QuarantineBadge color={bdlGray62} />\n                        <FormattedMessage {...messages.vanityURLWarning} />\n                    </span>\n                }\n                hideLabel\n                disabled={!canChangeVanityName}\n                error={error}\n                name=\"vanityName\"\n                onChange={onChange}\n                placeholder={formatMessage(messages.vanityNamePlaceholder)}\n                type=\"text\"\n                value={inputValue}\n                {...vanityNameInputProps}\n            />\n            {(canChangeVanityName || !!vanityName) && (\n                <p className=\"custom-url-preview\">{`${serverURL}${vanityName}`}</p>\n            )}\n        </div>\n    );\n\n    return (\n        <div>\n            <hr />\n            <Fieldset className=\"be vanity-name-section\" title={<FormattedMessage {...messages.customURLLabel} />}>\n                <Checkbox\n                    label={<FormattedMessage {...messages.vanityURLEnableText} />}\n                    isChecked={isVanityEnabled}\n                    isDisabled={!canChangeVanityName}\n                    subsection={isVanityEnabled ? vanityURLInput : undefined}\n                    onChange={onCheckboxChange}\n                />\n            </Fieldset>\n        </div>\n    );\n};\n\nVanityNameSection.propTypes = {\n    canChangeVanityName: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n    intl: PropTypes.any,\n    isVanityEnabled: PropTypes.bool.isRequired,\n    vanityName: PropTypes.string.isRequired,\n    vanityNameInputProps: PropTypes.object,\n    serverURL: PropTypes.string.isRequired,\n    onChange: PropTypes.func,\n    onCheckboxChange: PropTypes.func,\n};\n\nexport { VanityNameSection as VanityNameSectionBase };\nexport default injectIntl(VanityNameSection);\n"],"file":"VanityNameSection.js"}