{"version":3,"sources":["../../../src/features/shared-link-settings-modal/ExpirationSection.js"],"names":["React","PropTypes","FormattedMessage","Checkbox","DatePicker","Fieldset","messages","displayFormat","weekday","year","month","day","ExpirationSection","canChangeExpiration","error","expirationCheckboxProps","expirationDate","expirationInputProps","isExpirationEnabled","onCheckboxChange","onExpirationDateChange","tomorrow","Date","getTime","datepicker","expirationLabel","expirationTitle","undefined","propTypes","bool","isRequired","string","object","instanceOf","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport Checkbox from '../../components/checkbox';\nimport DatePicker from '../../components/date-picker';\nimport Fieldset from '../../components/fieldset';\n\nimport messages from './messages';\n\nconst displayFormat = {\n    weekday: 'short',\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n};\n\nconst ExpirationSection = ({\n    canChangeExpiration,\n    error,\n    expirationCheckboxProps = {},\n    expirationDate,\n    expirationInputProps = {},\n    isExpirationEnabled,\n    onCheckboxChange,\n    onExpirationDateChange,\n}) => {\n    const tomorrow = new Date(new Date().getTime() + 24 * 60 * 60 * 1000);\n    const datepicker = (\n        <div>\n            <DatePicker\n                displayFormat={displayFormat}\n                error={error}\n                hideLabel\n                inputProps={expirationInputProps}\n                isDisabled={!canChangeExpiration}\n                isRequired\n                label={<FormattedMessage {...messages.expirationLabel} />}\n                minDate={tomorrow}\n                name=\"expiration\"\n                onChange={onExpirationDateChange}\n                value={expirationDate}\n            />\n        </div>\n    );\n    return (\n        <div>\n            <hr />\n            <Fieldset className=\"expiration-section\" title={<FormattedMessage {...messages.expirationTitle} />}>\n                <Checkbox\n                    isChecked={isExpirationEnabled}\n                    isDisabled={!canChangeExpiration}\n                    label={<FormattedMessage {...messages.expirationLabel} />}\n                    name=\"isExpirationEnabled\"\n                    onChange={onCheckboxChange}\n                    subsection={isExpirationEnabled ? datepicker : undefined}\n                    {...expirationCheckboxProps}\n                />\n            </Fieldset>\n        </div>\n    );\n};\n\nExpirationSection.propTypes = {\n    canChangeExpiration: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n    expirationCheckboxProps: PropTypes.object,\n    expirationDate: PropTypes.instanceOf(Date),\n    expirationInputProps: PropTypes.object,\n    isExpirationEnabled: PropTypes.bool.isRequired,\n    onCheckboxChange: PropTypes.func.isRequired,\n    onExpirationDateChange: PropTypes.func.isRequired,\n};\nexport default ExpirationSection;\n"],"file":"ExpirationSection.js"}