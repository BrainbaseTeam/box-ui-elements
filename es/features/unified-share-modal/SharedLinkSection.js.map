{"version":3,"sources":["../../../src/features/unified-share-modal/SharedLinkSection.js"],"names":["React","FormattedMessage","PlainButton","Button","TextInputWithCopyButton","Toggle","Tooltip","convertToMs","IconMail","IconClock","IconGlobe","bdlWatermelonRed","isBoxNote","convertToBoxItem","SharedLinkAccessMenu","SharedLinkPermissionMenu","messages","PEOPLE_IN_ITEM","ANYONE_WITH_LINK","CAN_VIEW_DOWNLOAD","CAN_VIEW_ONLY","SharedLinkSection","isSharedLinkEnabled","canAddLink","canRemoveLink","props","autofocusSharedLink","changeSharedLinkAccessLevel","changeSharedLinkPermissionLevel","item","itemType","onDismissTooltip","onEmailSharedLinkClick","sharedLink","submitting","trackingProps","triggerCopyOnLoad","tooltips","accessLevel","accessLevelsDisabledReason","allowedAccessLevels","canChangeAccessLevel","enterpriseName","isEditAllowed","isDownloadSettingAvailable","permissionLevel","url","copyButtonProps","onChangeSharedLinkAccessLevel","onChangeSharedLinkPermissionLevel","onSharedLinkAccessMenuOpen","onSharedLinkCopy","sendSharedLinkButtonProps","sharedLinkAccessMenuButtonProps","sharedLinkPermissionsMenuButtonProps","isEditableBoxNote","allowedPermissionLevels","filter","level","sendSharedLink","sharedLinkPermissionsEditTooltip","sharedLinkPermissionsEdit","sharedLinkPubliclyAvailable","intl","onSettingsClick","showSharedLinkSettingsCallout","sharedLinkSettingsButtonProps","sharedLinkSettingsCalloutText","formatMessage","settingsButtonLabel","sharedLinkSettings","onToggleSharedLink","expirationTimestamp","linkText","linkShareOn","sharedLinkExpirationTooltip","expiration","linkShareOff","isToggleEnabled","canAddSharedLink","grantedPermissions","itemShare","canRemoveSharedLink","toggleComponent","sharedLinkToggleTooltip","sharedLinkDisabledTooltipCopy","removeLinkTooltip","sharedLinkSectionLabel","renderToggle","renderSharedLinkSettingsLink","renderSharedLink","Component"],"mappings":"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","sourcesContent":["// @flow\n\n'no babel-plugin-flow-react-proptypes';\n\n// turn off this plugin because it breaks the IntlShape flow type\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport type { IntlShape } from 'react-intl';\n\nimport PlainButton from '../../components/plain-button';\nimport Button from '../../components/button';\nimport TextInputWithCopyButton from '../../components/text-input-with-copy-button';\nimport Toggle from '../../components/toggle/Toggle';\nimport Tooltip from '../../components/tooltip';\nimport { convertToMs } from '../../utils/datetime';\nimport IconMail from '../../icons/general/IconMail';\nimport IconClock from '../../icons/general/IconClock';\nimport IconGlobe from '../../icons/general/IconGlobe';\nimport { bdlWatermelonRed } from '../../styles/variables';\nimport type { ItemType } from '../../common/types/core';\nimport { isBoxNote } from '../../utils/file';\n\nimport convertToBoxItem from './utils/item';\nimport SharedLinkAccessMenu from './SharedLinkAccessMenu';\nimport SharedLinkPermissionMenu from './SharedLinkPermissionMenu';\nimport messages from './messages';\nimport type {\n    accessLevelType,\n    item as itemtype,\n    permissionLevelType,\n    sharedLinkType,\n    sharedLinkTrackingType,\n    tooltipComponentIdentifierType,\n} from './flowTypes';\nimport { PEOPLE_IN_ITEM, ANYONE_WITH_LINK, CAN_VIEW_DOWNLOAD, CAN_VIEW_ONLY } from './constants';\n\ntype Props = {\n    autofocusSharedLink?: boolean,\n    changeSharedLinkAccessLevel: (newAccessLevel: accessLevelType) => Promise<{ accessLevel: accessLevelType }>,\n    changeSharedLinkPermissionLevel: (\n        newPermissionLevel: permissionLevelType,\n    ) => Promise<{ permissionLevel: permissionLevelType }>,\n    intl: IntlShape,\n    item: itemtype,\n    itemType: ItemType,\n    onDismissTooltip: (componentIdentifier: tooltipComponentIdentifierType) => void,\n    onEmailSharedLinkClick: Function,\n    onSettingsClick?: Function,\n    onToggleSharedLink: Function,\n    sharedLink: sharedLinkType,\n    showSharedLinkSettingsCallout: boolean,\n    submitting: boolean,\n    tooltips: { [componentIdentifier: tooltipComponentIdentifierType]: React.Node },\n    trackingProps: sharedLinkTrackingType,\n    triggerCopyOnLoad?: boolean,\n};\n\nclass SharedLinkSection extends React.Component<Props> {\n    static defaultProps = {\n        trackingProps: {},\n    };\n\n    canAddSharedLink = (isSharedLinkEnabled: boolean, canAddLink: boolean) => {\n        return !isSharedLinkEnabled && canAddLink;\n    };\n\n    canRemoveSharedLink = (isSharedLinkEnabled: boolean, canRemoveLink: boolean) => {\n        return isSharedLinkEnabled && canRemoveLink;\n    };\n\n    renderSharedLink() {\n        const {\n            autofocusSharedLink,\n            changeSharedLinkAccessLevel,\n            changeSharedLinkPermissionLevel,\n            item,\n            itemType,\n            onDismissTooltip,\n            onEmailSharedLinkClick,\n            sharedLink,\n            submitting,\n            trackingProps,\n            triggerCopyOnLoad,\n            tooltips,\n        } = this.props;\n        const {\n            accessLevel,\n            accessLevelsDisabledReason,\n            allowedAccessLevels,\n            canChangeAccessLevel,\n            enterpriseName,\n            isEditAllowed,\n            isDownloadSettingAvailable,\n            permissionLevel,\n            url,\n        } = sharedLink;\n\n        const {\n            copyButtonProps,\n            onChangeSharedLinkAccessLevel,\n            onChangeSharedLinkPermissionLevel,\n            onSharedLinkAccessMenuOpen,\n            onSharedLinkCopy,\n            sendSharedLinkButtonProps,\n            sharedLinkAccessMenuButtonProps,\n            sharedLinkPermissionsMenuButtonProps,\n        } = trackingProps;\n\n        const isEditableBoxNote = isBoxNote(convertToBoxItem(item)) && isEditAllowed;\n        let allowedPermissionLevels = [CAN_VIEW_DOWNLOAD, CAN_VIEW_ONLY];\n\n        if (!canChangeAccessLevel) {\n            // remove all but current level\n            allowedPermissionLevels = allowedPermissionLevels.filter(level => level === permissionLevel);\n        }\n\n        // if we cannot set the download value, we remove this option from the dropdown\n        if (!isDownloadSettingAvailable) {\n            allowedPermissionLevels = allowedPermissionLevels.filter(level => level !== CAN_VIEW_DOWNLOAD);\n        }\n\n        return (\n            <>\n                <div className=\"shared-link-field-row\">\n                    <Tooltip\n                        className=\"usm-ftux-tooltip\"\n                        isShown={!!tooltips['shared-link-copy-button']}\n                        onDismiss={() => onDismissTooltip('shared-link-copy-button')}\n                        position=\"middle-right\"\n                        showCloseButton\n                        text={tooltips['shared-link-copy-button']}\n                        theme=\"callout\"\n                    >\n                        <TextInputWithCopyButton\n                            autofocus={autofocusSharedLink}\n                            buttonProps={copyButtonProps}\n                            className=\"shared-link-field-container\"\n                            disabled={submitting}\n                            label=\"\"\n                            onCopySuccess={onSharedLinkCopy}\n                            triggerCopyOnLoad={triggerCopyOnLoad}\n                            type=\"url\"\n                            value={url}\n                        />\n                    </Tooltip>\n                    <Tooltip position=\"top-left\" text={<FormattedMessage {...messages.sendSharedLink} />}>\n                        <Button\n                            className=\"email-shared-link-btn\"\n                            isDisabled={submitting}\n                            onClick={onEmailSharedLinkClick}\n                            type=\"button\"\n                            {...sendSharedLinkButtonProps}\n                        >\n                            <IconMail />\n                        </Button>\n                    </Tooltip>\n                </div>\n\n                <div className=\"shared-link-access-row\">\n                    <SharedLinkAccessMenu\n                        accessLevel={accessLevel}\n                        accessLevelsDisabledReason={accessLevelsDisabledReason}\n                        allowedAccessLevels={allowedAccessLevels}\n                        changeAccessLevel={changeSharedLinkAccessLevel}\n                        enterpriseName={enterpriseName}\n                        itemType={itemType}\n                        onDismissTooltip={() => onDismissTooltip('shared-link-access-menu')}\n                        tooltipContent={tooltips['shared-link-access-menu'] || null}\n                        submitting={submitting}\n                        trackingProps={{\n                            onChangeSharedLinkAccessLevel,\n                            onSharedLinkAccessMenuOpen,\n                            sharedLinkAccessMenuButtonProps,\n                        }}\n                    />\n                    {!isEditableBoxNote && accessLevel !== PEOPLE_IN_ITEM && (\n                        <SharedLinkPermissionMenu\n                            allowedPermissionLevels={allowedPermissionLevels}\n                            canChangePermissionLevel={canChangeAccessLevel}\n                            changePermissionLevel={changeSharedLinkPermissionLevel}\n                            permissionLevel={permissionLevel}\n                            submitting={submitting}\n                            trackingProps={{\n                                onChangeSharedLinkPermissionLevel,\n                                sharedLinkPermissionsMenuButtonProps,\n                            }}\n                        />\n                    )}\n                    {isEditableBoxNote && (\n                        <Tooltip text={<FormattedMessage {...messages.sharedLinkPermissionsEditTooltip} />}>\n                            <PlainButton isDisabled className=\"can-edit-btn\">\n                                <FormattedMessage {...messages.sharedLinkPermissionsEdit} />\n                            </PlainButton>\n                        </Tooltip>\n                    )}\n                </div>\n                {accessLevel === ANYONE_WITH_LINK && (\n                    <div className=\"security-indicator-note\">\n                        <span className=\"security-indicator-icon-globe\">\n                            <IconGlobe height={12} width={12} />\n                        </span>\n                        <FormattedMessage {...messages.sharedLinkPubliclyAvailable} />\n                    </div>\n                )}\n            </>\n        );\n    }\n\n    renderSharedLinkSettingsLink() {\n        const {\n            intl,\n            onDismissTooltip,\n            onSettingsClick,\n            showSharedLinkSettingsCallout,\n            trackingProps,\n            tooltips,\n        } = this.props;\n        const { sharedLinkSettingsButtonProps } = trackingProps;\n\n        return (\n            <div className=\"shared-link-settings-btn-container\">\n                <Tooltip\n                    className=\"usm-ftux-tooltip\"\n                    isShown={!!tooltips['shared-link-settings'] || showSharedLinkSettingsCallout}\n                    onDismiss={() => onDismissTooltip('shared-link-settings')}\n                    position=\"middle-right\"\n                    showCloseButton\n                    text={\n                        tooltips['shared-link-settings'] || (\n                            <FormattedMessage {...messages.sharedLinkSettingsCalloutText} />\n                        )\n                    }\n                    theme=\"callout\"\n                >\n                    <PlainButton\n                        {...sharedLinkSettingsButtonProps}\n                        aria-label={intl.formatMessage(messages.settingsButtonLabel)}\n                        className=\"shared-link-settings-btn\"\n                        onClick={onSettingsClick}\n                        type=\"button\"\n                    >\n                        <FormattedMessage {...messages.sharedLinkSettings} />\n                    </PlainButton>\n                </Tooltip>\n            </div>\n        );\n    }\n\n    renderToggle() {\n        const { item, onDismissTooltip, onToggleSharedLink, sharedLink, submitting, tooltips } = this.props;\n\n        const { canChangeAccessLevel, expirationTimestamp } = sharedLink;\n\n        const isSharedLinkEnabled = !!sharedLink.url;\n        let linkText;\n\n        if (isSharedLinkEnabled) {\n            linkText = <FormattedMessage {...messages.linkShareOn} />;\n            if (expirationTimestamp && expirationTimestamp !== 0) {\n                linkText = (\n                    <span>\n                        <FormattedMessage {...messages.linkShareOn} />\n                        <Tooltip\n                            position=\"top-center\"\n                            text={\n                                <FormattedMessage\n                                    {...messages.sharedLinkExpirationTooltip}\n                                    values={{\n                                        expiration: convertToMs(expirationTimestamp),\n                                    }}\n                                />\n                            }\n                        >\n                            <span className=\"shared-link-expiration-badge\">\n                                <IconClock color={bdlWatermelonRed} />\n                            </span>\n                        </Tooltip>\n                    </span>\n                );\n            }\n        } else {\n            linkText = <FormattedMessage {...messages.linkShareOff} />;\n        }\n\n        const isToggleEnabled =\n            (this.canAddSharedLink(isSharedLinkEnabled, item.grantedPermissions.itemShare) ||\n                this.canRemoveSharedLink(isSharedLinkEnabled, canChangeAccessLevel)) &&\n            !submitting;\n\n        const toggleComponent = (\n            <div className=\"share-toggle-container\">\n                <Toggle\n                    isDisabled={!isToggleEnabled}\n                    isOn={isSharedLinkEnabled}\n                    label={linkText}\n                    name=\"toggle\"\n                    onChange={onToggleSharedLink}\n                />\n            </div>\n        );\n\n        if (!submitting) {\n            if (this.canAddSharedLink(isSharedLinkEnabled, item.grantedPermissions.itemShare)) {\n                const sharedLinkToggleTooltip = tooltips['shared-link-toggle'];\n                if (sharedLinkToggleTooltip) {\n                    return (\n                        <Tooltip\n                            className=\"usm-ftux-tooltip\"\n                            isShown\n                            onDismiss={() => onDismissTooltip('shared-link-toggle')}\n                            position=\"middle-left\"\n                            showCloseButton\n                            text={sharedLinkToggleTooltip}\n                            theme=\"callout\"\n                        >\n                            {toggleComponent}\n                        </Tooltip>\n                    );\n                }\n                return (\n                    <Tooltip\n                        position=\"top-right\"\n                        text={<FormattedMessage {...messages.sharedLinkDisabledTooltipCopy} />}\n                    >\n                        {toggleComponent}\n                    </Tooltip>\n                );\n            }\n\n            if (!this.canRemoveSharedLink(isSharedLinkEnabled, canChangeAccessLevel)) {\n                return (\n                    <Tooltip position=\"top-right\" text={<FormattedMessage {...messages.removeLinkTooltip} />}>\n                        {toggleComponent}\n                    </Tooltip>\n                );\n            }\n        }\n\n        return toggleComponent;\n    }\n\n    render() {\n        const { sharedLink, onSettingsClick } = this.props;\n        const isSharedLinkEnabled = !!sharedLink.url;\n\n        return (\n            <div>\n                <hr />\n                {/* eslint-disable-next-line jsx-a11y/label-has-for */}\n                <label>\n                    <span className=\"label\">\n                        <FormattedMessage {...messages.sharedLinkSectionLabel} />\n                    </span>\n                </label>\n                <div className=\"shared-link-toggle-row\">\n                    {this.renderToggle()}\n                    {isSharedLinkEnabled && onSettingsClick && this.renderSharedLinkSettingsLink()}\n                </div>\n                {isSharedLinkEnabled && this.renderSharedLink()}\n            </div>\n        );\n    }\n}\n\nexport default SharedLinkSection;\n"],"file":"SharedLinkSection.js"}