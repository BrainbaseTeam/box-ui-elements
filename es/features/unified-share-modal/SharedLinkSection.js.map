{"version":3,"sources":["../../../src/features/unified-share-modal/SharedLinkSection.js"],"names":["React","FormattedMessage","PlainButton","Button","GuideTooltip","TextInputWithCopyButton","Toggle","Tooltip","convertToMs","IconMail","IconClock","IconGlobe","bdlWatermelonRed","isBoxNote","Browser","convertToBoxItem","SharedLinkAccessMenu","SharedLinkPermissionMenu","messages","ANYONE_IN_COMPANY","ANYONE_WITH_LINK","CAN_EDIT","CAN_VIEW_DOWNLOAD","CAN_VIEW_ONLY","PEOPLE_IN_ITEM","SharedLinkSection","props","isSharedLinkEnabled","canAddLink","canRemoveLink","state","isAutoCreatingSharedLink","isCopySuccessful","isPermissionElevatedToEdit","sharedLink","autoCreateSharedLink","addSharedLink","sharedLinkEditTooltipTargetingApi","submitting","url","isNewSharedLink","setState","canShow","onShow","prevProps","triggerCopyOnLoad","onCopyError","onCopySuccess","onCopyInit","toggleRef","focus","permissionLevel","accessLevel","canWriteToClipboard","navigator","clipboard","writeText","then","catch","autofocusSharedLink","changeSharedLinkAccessLevel","changeSharedLinkPermissionLevel","config","isAllowEditSharedLinkForFileEnabled","item","itemType","intl","onDismissTooltip","onEmailSharedLinkClick","sharedLinkEditTagTargetingApi","trackingProps","tooltips","accessLevelsDisabledReason","allowedAccessLevels","canChangeAccessLevel","enterpriseName","isEditAllowed","isEditSettingAvailable","isDownloadSettingAvailable","copyButtonProps","onChangeSharedLinkAccessLevel","onChangeSharedLinkPermissionLevel","onSharedLinkAccessMenuOpen","onSharedLinkCopy","sendSharedLinkButtonProps","sharedLinkAccessMenuButtonProps","sharedLinkPermissionsMenuButtonProps","shouldTriggerCopyOnLoad","hideEmailButton","showEmailSharedLinkForm","isEditableBoxNote","allowedPermissionLevels","filter","level","formatMessage","sharedLinkURLLabel","sendSharedLink","includes","ftuxEditPermissionTooltipTitle","ftuxEditPermissionTooltipBody","onComplete","sharedLinkPermissionsEditTooltip","sharedLinkPermissionsEdit","sharedLinkEditablePubliclyAvailable","sharedLinkPubliclyAvailable","sharedLinkElevatedEditableCompanyAvailable","onSettingsClick","showSharedLinkSettingsCallout","sharedLinkSettingsButtonProps","sharedLinkSettingsCalloutText","settingsButtonLabel","sharedLinkSettings","onToggleSharedLink","expirationTimestamp","canAddSharedLink","grantedPermissions","itemShare","canRemoveSharedLink","isToggleEnabled","linkText","linkShareOn","sharedLinkExpirationTooltip","expiration","linkShareOff","toggleComponent","ref","sharedLinkToggleTooltip","sharedLinkDisabledTooltipCopy","tooltipDisabledMessage","removeLinkTooltip","disabledCreateLinkTooltip","sharedLinkSectionLabel","renderToggle","renderSharedLinkSettingsLink","renderSharedLink","Component"],"mappings":"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","sourcesContent":["// @flow\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport PlainButton from '../../components/plain-button';\nimport Button from '../../components/button';\nimport GuideTooltip from '../../components/guide-tooltip';\nimport TextInputWithCopyButton from '../../components/text-input-with-copy-button';\nimport Toggle from '../../components/toggle/Toggle';\nimport Tooltip from '../../components/tooltip';\nimport { convertToMs } from '../../utils/datetime';\nimport IconMail from '../../icons/general/IconMail';\nimport IconClock from '../../icons/general/IconClock';\nimport IconGlobe from '../../icons/general/IconGlobe';\nimport { bdlWatermelonRed } from '../../styles/variables';\nimport type { ItemType } from '../../common/types/core';\nimport type { TargetingApi } from '../targeting/types';\nimport { isBoxNote } from '../../utils/file';\nimport Browser from '../../utils/Browser';\n\nimport convertToBoxItem from './utils/item';\nimport SharedLinkAccessMenu from './SharedLinkAccessMenu';\nimport SharedLinkPermissionMenu from './SharedLinkPermissionMenu';\nimport messages from './messages';\nimport type {\n    accessLevelType,\n    item as itemtype,\n    permissionLevelType,\n    sharedLinkType,\n    sharedLinkTrackingType,\n    tooltipComponentIdentifierType,\n    USMConfig,\n} from './flowTypes';\nimport {\n    ANYONE_IN_COMPANY,\n    ANYONE_WITH_LINK,\n    CAN_EDIT,\n    CAN_VIEW_DOWNLOAD,\n    CAN_VIEW_ONLY,\n    PEOPLE_IN_ITEM,\n} from './constants';\n\ntype Props = {\n    addSharedLink: () => void,\n    autoCreateSharedLink?: boolean,\n    autofocusSharedLink?: boolean,\n    changeSharedLinkAccessLevel: (newAccessLevel: accessLevelType) => Promise<{ accessLevel: accessLevelType }>,\n    changeSharedLinkPermissionLevel: (\n        newPermissionLevel: permissionLevelType,\n    ) => Promise<{ permissionLevel: permissionLevelType }>,\n    config?: USMConfig,\n    intl: any,\n    isAllowEditSharedLinkForFileEnabled: boolean,\n    item: itemtype,\n    itemType: ItemType,\n    onCopyError?: () => void,\n    onCopyInit?: () => void,\n    onCopySuccess?: () => void,\n    onDismissTooltip: (componentIdentifier: tooltipComponentIdentifierType) => void,\n    onEmailSharedLinkClick: Function,\n    onSettingsClick?: Function,\n    onToggleSharedLink: Function,\n    sharedLink: sharedLinkType,\n    sharedLinkEditTagTargetingApi?: TargetingApi,\n    sharedLinkEditTooltipTargetingApi?: TargetingApi,\n    showSharedLinkSettingsCallout: boolean,\n    submitting: boolean,\n    tooltips: { [componentIdentifier: tooltipComponentIdentifierType]: React.Node },\n    trackingProps: sharedLinkTrackingType,\n    triggerCopyOnLoad?: boolean,\n};\n\ntype State = {\n    isAutoCreatingSharedLink: boolean,\n    isCopySuccessful: ?boolean,\n    isPermissionElevatedToEdit: boolean,\n};\n\nclass SharedLinkSection extends React.Component<Props, State> {\n    static defaultProps = {\n        trackingProps: {},\n        autoCreateSharedLink: false,\n    };\n\n    toggleRef: HTMLInputElement | null;\n\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            isAutoCreatingSharedLink: false,\n            isCopySuccessful: null,\n            isPermissionElevatedToEdit: false,\n        };\n    }\n\n    componentDidMount() {\n        const {\n            sharedLink,\n            autoCreateSharedLink,\n            addSharedLink,\n            sharedLinkEditTooltipTargetingApi,\n            submitting,\n        } = this.props;\n\n        if (\n            autoCreateSharedLink &&\n            !this.state.isAutoCreatingSharedLink &&\n            sharedLink &&\n            !sharedLink.url &&\n            !submitting &&\n            !sharedLink.isNewSharedLink\n        ) {\n            this.setState({ isAutoCreatingSharedLink: true });\n            addSharedLink();\n        }\n\n        // if ESL ftux tooltip is showing on initial mount, we call onShow\n        if (sharedLinkEditTooltipTargetingApi && sharedLinkEditTooltipTargetingApi.canShow) {\n            const { onShow } = sharedLinkEditTooltipTargetingApi;\n            onShow();\n        }\n    }\n\n    // We handle didUpdate but not didMount because\n    // the component initially renders with empty data\n    // in order to start showing UI components.\n    // When getInitialData completes in the parent we\n    // rerender with correct sharedLink data and can\n    // check whether to auto create a new one.\n    // Note: we are assuming the 2nd render is safe\n    // to start doing this check.\n    componentDidUpdate(prevProps: Props) {\n        const {\n            sharedLink,\n            autoCreateSharedLink,\n            addSharedLink,\n            submitting,\n            triggerCopyOnLoad,\n            onCopyError = () => {},\n            onCopySuccess = () => {},\n            onCopyInit = () => {},\n        } = this.props;\n\n        const { isAutoCreatingSharedLink, isCopySuccessful, isPermissionElevatedToEdit } = this.state;\n\n        if (\n            autoCreateSharedLink &&\n            !isAutoCreatingSharedLink &&\n            !sharedLink.url &&\n            !submitting &&\n            !sharedLink.isNewSharedLink\n        ) {\n            this.setState({ isAutoCreatingSharedLink: true });\n            addSharedLink();\n        }\n\n        if (!prevProps.sharedLink.url && sharedLink.url) {\n            this.setState({ isAutoCreatingSharedLink: false });\n            if (this.toggleRef) {\n                this.toggleRef.focus();\n            }\n        }\n\n        if (\n            prevProps.sharedLink.permissionLevel !== '' &&\n            prevProps.sharedLink.permissionLevel !== CAN_EDIT &&\n            sharedLink.permissionLevel === CAN_EDIT\n        ) {\n            this.setState({ isPermissionElevatedToEdit: true });\n        }\n\n        if (\n            isPermissionElevatedToEdit &&\n            (sharedLink.permissionLevel !== CAN_EDIT || sharedLink.accessLevel !== ANYONE_IN_COMPANY)\n        ) {\n            this.setState({ isPermissionElevatedToEdit: false });\n        }\n\n        if (\n            Browser.canWriteToClipboard() &&\n            triggerCopyOnLoad &&\n            !isAutoCreatingSharedLink &&\n            sharedLink.url &&\n            isCopySuccessful === null\n        ) {\n            onCopyInit();\n            navigator.clipboard\n                .writeText(sharedLink.url)\n                .then(() => {\n                    this.setState({ isCopySuccessful: true });\n                    onCopySuccess();\n                })\n                .catch(() => {\n                    this.setState({ isCopySuccessful: false });\n                    onCopyError();\n                });\n        }\n    }\n\n    canAddSharedLink = (isSharedLinkEnabled: boolean, canAddLink: boolean) => {\n        return !isSharedLinkEnabled && canAddLink;\n    };\n\n    canRemoveSharedLink = (isSharedLinkEnabled: boolean, canRemoveLink: boolean) => {\n        return isSharedLinkEnabled && canRemoveLink;\n    };\n\n    renderSharedLink() {\n        const {\n            autofocusSharedLink,\n            changeSharedLinkAccessLevel,\n            changeSharedLinkPermissionLevel,\n            config,\n            isAllowEditSharedLinkForFileEnabled,\n            item,\n            itemType,\n            intl,\n            onDismissTooltip,\n            onEmailSharedLinkClick,\n            sharedLink,\n            sharedLinkEditTagTargetingApi,\n            sharedLinkEditTooltipTargetingApi,\n            submitting,\n            trackingProps,\n            triggerCopyOnLoad,\n            tooltips,\n        } = this.props;\n\n        const { isCopySuccessful, isPermissionElevatedToEdit } = this.state;\n\n        const {\n            accessLevel,\n            accessLevelsDisabledReason,\n            allowedAccessLevels,\n            canChangeAccessLevel,\n            enterpriseName,\n            isEditAllowed,\n            isEditSettingAvailable,\n            isDownloadSettingAvailable,\n            permissionLevel,\n            url,\n        } = sharedLink;\n\n        const {\n            copyButtonProps,\n            onChangeSharedLinkAccessLevel,\n            onChangeSharedLinkPermissionLevel,\n            onSharedLinkAccessMenuOpen,\n            onSharedLinkCopy,\n            sendSharedLinkButtonProps,\n            sharedLinkAccessMenuButtonProps,\n            sharedLinkPermissionsMenuButtonProps,\n        } = trackingProps;\n\n        const shouldTriggerCopyOnLoad = !!triggerCopyOnLoad && !!isCopySuccessful;\n\n        /**\n         * The email button should be rendered by default.\n         * Only hide the button if there is a config prop that declares showEmailSharedLinkForm to be false.\n         */\n        const hideEmailButton = config && config.showEmailSharedLinkForm === false;\n\n        const isEditableBoxNote = isBoxNote(convertToBoxItem(item)) && isEditAllowed;\n        let allowedPermissionLevels = [CAN_EDIT, CAN_VIEW_DOWNLOAD, CAN_VIEW_ONLY];\n\n        if (!canChangeAccessLevel) {\n            // remove all but current level\n            allowedPermissionLevels = allowedPermissionLevels.filter(level => level === permissionLevel);\n        }\n\n        // if we cannot set the download value, we remove this option from the dropdown\n        if (!isDownloadSettingAvailable) {\n            allowedPermissionLevels = allowedPermissionLevels.filter(level => level !== CAN_VIEW_DOWNLOAD);\n        }\n\n        // if the user cannot edit, we remove this option from the dropdown\n        if (!isEditSettingAvailable || !isAllowEditSharedLinkForFileEnabled) {\n            allowedPermissionLevels = allowedPermissionLevels.filter(level => level !== CAN_EDIT);\n        }\n\n        return (\n            <>\n                <div className=\"shared-link-field-row\">\n                    <Tooltip\n                        className=\"usm-ftux-tooltip\"\n                        isShown={!!tooltips['shared-link-copy-button']}\n                        onDismiss={() => onDismissTooltip('shared-link-copy-button')}\n                        position=\"middle-right\"\n                        showCloseButton\n                        text={tooltips['shared-link-copy-button']}\n                        theme=\"callout\"\n                    >\n                        <TextInputWithCopyButton\n                            aria-label={intl.formatMessage(messages.sharedLinkURLLabel)}\n                            autofocus={autofocusSharedLink}\n                            buttonProps={copyButtonProps}\n                            className=\"shared-link-field-container\"\n                            disabled={submitting}\n                            label=\"\"\n                            onCopySuccess={onSharedLinkCopy}\n                            triggerCopyOnLoad={shouldTriggerCopyOnLoad}\n                            type=\"url\"\n                            value={url}\n                        />\n                    </Tooltip>\n                    {!hideEmailButton && (\n                        <Tooltip position=\"top-left\" text={<FormattedMessage {...messages.sendSharedLink} />}>\n                            <Button\n                                aria-label={intl.formatMessage(messages.sendSharedLink)}\n                                className=\"email-shared-link-btn\"\n                                isDisabled={submitting}\n                                onClick={onEmailSharedLinkClick}\n                                type=\"button\"\n                                {...sendSharedLinkButtonProps}\n                            >\n                                <IconMail />\n                            </Button>\n                        </Tooltip>\n                    )}\n                </div>\n\n                <div className=\"shared-link-access-row\">\n                    <SharedLinkAccessMenu\n                        accessLevel={accessLevel}\n                        accessLevelsDisabledReason={accessLevelsDisabledReason}\n                        allowedAccessLevels={allowedAccessLevels}\n                        changeAccessLevel={changeSharedLinkAccessLevel}\n                        enterpriseName={enterpriseName}\n                        itemType={itemType}\n                        onDismissTooltip={() => onDismissTooltip('shared-link-access-menu')}\n                        tooltipContent={tooltips['shared-link-access-menu'] || null}\n                        submitting={submitting}\n                        trackingProps={{\n                            onChangeSharedLinkAccessLevel,\n                            onSharedLinkAccessMenuOpen,\n                            sharedLinkAccessMenuButtonProps,\n                        }}\n                    />\n                    {!isEditableBoxNote && accessLevel !== PEOPLE_IN_ITEM && (\n                        <GuideTooltip\n                            isShown={\n                                allowedPermissionLevels.includes(CAN_EDIT) && sharedLinkEditTooltipTargetingApi?.canShow\n                            }\n                            title={intl.formatMessage(messages.ftuxEditPermissionTooltipTitle)}\n                            body={intl.formatMessage(messages.ftuxEditPermissionTooltipBody)}\n                            onDismiss={() => {\n                                if (sharedLinkEditTooltipTargetingApi) {\n                                    const { onComplete } = sharedLinkEditTooltipTargetingApi;\n                                    onComplete();\n                                }\n                            }}\n                        >\n                            <SharedLinkPermissionMenu\n                                allowedPermissionLevels={allowedPermissionLevels}\n                                canChangePermissionLevel={canChangeAccessLevel}\n                                changePermissionLevel={changeSharedLinkPermissionLevel}\n                                permissionLevel={permissionLevel}\n                                sharedLinkEditTagTargetingApi={sharedLinkEditTagTargetingApi}\n                                submitting={submitting}\n                                trackingProps={{\n                                    onChangeSharedLinkPermissionLevel,\n                                    sharedLinkPermissionsMenuButtonProps,\n                                }}\n                            />\n                        </GuideTooltip>\n                    )}\n                    {isEditableBoxNote && (\n                        <Tooltip text={<FormattedMessage {...messages.sharedLinkPermissionsEditTooltip} />}>\n                            <PlainButton isDisabled className=\"can-edit-btn\">\n                                <FormattedMessage {...messages.sharedLinkPermissionsEdit} />\n                            </PlainButton>\n                        </Tooltip>\n                    )}\n                </div>\n                {accessLevel === ANYONE_WITH_LINK && (\n                    <div className=\"security-indicator-note\">\n                        <span className=\"security-indicator-icon-globe\">\n                            <IconGlobe height={12} width={12} />\n                        </span>\n                        {permissionLevel === CAN_EDIT ? (\n                            <FormattedMessage\n                                data-testid=\"shared-link-editable-publicly-available-message\"\n                                {...messages.sharedLinkEditablePubliclyAvailable}\n                            />\n                        ) : (\n                            <FormattedMessage\n                                data-testid=\"shared-link-publicly-available-message\"\n                                {...messages.sharedLinkPubliclyAvailable}\n                            />\n                        )}\n                    </div>\n                )}\n                {accessLevel === ANYONE_IN_COMPANY && isPermissionElevatedToEdit && (\n                    <div className=\"security-indicator-note\">\n                        <span className=\"security-indicator-icon-globe\">\n                            <IconGlobe height={12} width={12} />\n                        </span>\n                        <FormattedMessage\n                            data-testid=\"shared-link-elevated-editable-company-available-message\"\n                            {...messages.sharedLinkElevatedEditableCompanyAvailable}\n                        />\n                    </div>\n                )}\n            </>\n        );\n    }\n\n    renderSharedLinkSettingsLink() {\n        const {\n            intl,\n            onDismissTooltip,\n            onSettingsClick,\n            showSharedLinkSettingsCallout,\n            trackingProps,\n            tooltips,\n        } = this.props;\n        const { sharedLinkSettingsButtonProps } = trackingProps;\n\n        return (\n            <div className=\"shared-link-settings-btn-container\">\n                <Tooltip\n                    className=\"usm-ftux-tooltip\"\n                    isShown={!!tooltips['shared-link-settings'] || showSharedLinkSettingsCallout}\n                    onDismiss={() => onDismissTooltip('shared-link-settings')}\n                    position=\"middle-right\"\n                    showCloseButton\n                    text={\n                        tooltips['shared-link-settings'] || (\n                            <FormattedMessage {...messages.sharedLinkSettingsCalloutText} />\n                        )\n                    }\n                    theme=\"callout\"\n                >\n                    <PlainButton\n                        {...sharedLinkSettingsButtonProps}\n                        aria-label={intl.formatMessage(messages.settingsButtonLabel)}\n                        className=\"shared-link-settings-btn\"\n                        onClick={onSettingsClick}\n                        type=\"button\"\n                    >\n                        <FormattedMessage {...messages.sharedLinkSettings} />\n                    </PlainButton>\n                </Tooltip>\n            </div>\n        );\n    }\n\n    renderToggle() {\n        const { item, onDismissTooltip, onToggleSharedLink, sharedLink, submitting, tooltips } = this.props;\n        const { canChangeAccessLevel, expirationTimestamp, url } = sharedLink;\n        const isSharedLinkEnabled = !!url;\n        const canAddSharedLink = this.canAddSharedLink(isSharedLinkEnabled, item.grantedPermissions.itemShare);\n        const canRemoveSharedLink = this.canRemoveSharedLink(isSharedLinkEnabled, canChangeAccessLevel);\n        const isToggleEnabled = (canAddSharedLink || canRemoveSharedLink) && !submitting;\n\n        let linkText;\n\n        if (isSharedLinkEnabled) {\n            linkText = <FormattedMessage {...messages.linkShareOn} />;\n            if (expirationTimestamp && expirationTimestamp !== 0) {\n                linkText = (\n                    <span>\n                        <FormattedMessage {...messages.linkShareOn} />\n                        <Tooltip\n                            position=\"top-center\"\n                            text={\n                                <FormattedMessage\n                                    {...messages.sharedLinkExpirationTooltip}\n                                    values={{\n                                        expiration: convertToMs(expirationTimestamp),\n                                    }}\n                                />\n                            }\n                        >\n                            <span className=\"shared-link-expiration-badge\">\n                                <IconClock color={bdlWatermelonRed} />\n                            </span>\n                        </Tooltip>\n                    </span>\n                );\n            }\n        } else {\n            linkText = <FormattedMessage {...messages.linkShareOff} />;\n        }\n\n        const toggleComponent = (\n            <div className=\"share-toggle-container\">\n                <Toggle\n                    isDisabled={!isToggleEnabled}\n                    isOn={isSharedLinkEnabled}\n                    label={linkText}\n                    name=\"toggle\"\n                    onChange={onToggleSharedLink}\n                    ref={ref => {\n                        this.toggleRef = ref;\n                    }}\n                />\n            </div>\n        );\n\n        if (!submitting) {\n            if (canAddSharedLink) {\n                const sharedLinkToggleTooltip = tooltips['shared-link-toggle'];\n                if (sharedLinkToggleTooltip) {\n                    return (\n                        <Tooltip\n                            className=\"usm-ftux-tooltip\"\n                            isShown\n                            onDismiss={() => onDismissTooltip('shared-link-toggle')}\n                            position=\"middle-left\"\n                            showCloseButton\n                            text={sharedLinkToggleTooltip}\n                            theme=\"callout\"\n                        >\n                            {toggleComponent}\n                        </Tooltip>\n                    );\n                }\n                return (\n                    <Tooltip\n                        position=\"top-right\"\n                        text={<FormattedMessage {...messages.sharedLinkDisabledTooltipCopy} />}\n                    >\n                        {toggleComponent}\n                    </Tooltip>\n                );\n            }\n\n            if (!isToggleEnabled) {\n                const tooltipDisabledMessage = isSharedLinkEnabled\n                    ? messages.removeLinkTooltip\n                    : messages.disabledCreateLinkTooltip;\n\n                return (\n                    <Tooltip\n                        className=\"usm-disabled-message-tooltip\"\n                        position=\"top-right\"\n                        text={<FormattedMessage {...tooltipDisabledMessage} />}\n                    >\n                        {toggleComponent}\n                    </Tooltip>\n                );\n            }\n        }\n\n        return toggleComponent;\n    }\n\n    render() {\n        const { sharedLink, onSettingsClick } = this.props;\n        const isSharedLinkEnabled = !!sharedLink.url;\n\n        return (\n            <div className=\"be\">\n                <hr className=\"bdl-SharedLinkSection-separator\" />\n                {/* eslint-disable-next-line jsx-a11y/label-has-for */}\n                <label>\n                    <span className=\"label bdl-Label\">\n                        <FormattedMessage {...messages.sharedLinkSectionLabel} />\n                    </span>\n                </label>\n                <div className=\"shared-link-toggle-row\">\n                    {this.renderToggle()}\n                    {isSharedLinkEnabled && onSettingsClick && this.renderSharedLinkSettingsLink()}\n                </div>\n                {isSharedLinkEnabled && this.renderSharedLink()}\n            </div>\n        );\n    }\n}\n\nexport default SharedLinkSection;\n"],"file":"SharedLinkSection.js"}