{"version":3,"sources":["../../../src/features/unified-share-modal/UnifiedShareForm.js"],"names":["React","isEmpty","isEqual","FormattedMessage","injectIntl","LoadingIndicatorWrapper","Link","Button","UpgradeBadge","ITEM_TYPE_WEBLINK","Tooltip","CollaboratorAvatars","CollaboratorList","InviteePermissionsMenu","messages","SharedLinkSection","EmailForm","getDefaultPermissionLevel","hasRestrictedExternalContacts","mergeContacts","JUSTIFICATION_CHECKPOINT_EXTERNAL_COLLAB","SHARED_LINKS_COMMUNITY_URL","INVITE_COLLABS_CONTACTS_TYPE","EMAIL_SHARED_LINK_CONTACTS_TYPE","UnifiedShareForm","props","item","checkpoint","justificationReasons","state","getJustificationReasons","hasJustificationReasons","length","Promise","resolve","setState","isFetchingJustificationReasons","typedID","then","classificationLabelId","options","map","id","title","displayText","value","finally","inviteCollabsContacts","isCollabRestrictionJustificationAllowed","restrictedExternalCollabEmails","hasRestrictedExternalCollabs","pills","onPillCreate","event","target","handleFtuxCloseClick","onAddLink","openConfirmModal","shouldRenderFTUXTooltip","trackingProps","sharedLinkTracking","onToggleLink","type","checked","showCollaboratorList","data","inviteePermissions","sendInvites","inviteCollabsEmailTracking","onSendClick","inviteePermissionLevel","defaultPermissionLevel","selectedPermissionLevel","emails","groupIDs","justificationReason","message","restrictedExternalEmails","params","join","emailMessage","permission","numsOfInvitees","numOfInviteeGroups","hasJustificationReason","hasRestrictedExternalInvitees","shouldSubmitJustificationReason","sendSharedLink","sharedLinkEmailTracking","numsOfRecipients","numOfRecipientGroups","permissionLevel","inviteCollabTracking","onInviteePermissionChange","selectOptionPills","filter","pill","getContactsByEmail","contacts","prevState","emailSharedLinkContacts","isInviteSectionExpanded","onEnterInviteCollabs","isEmailLinkSectionExpanded","some","contact","isExternalUser","currentInviteCollabsContacts","newInviteCollabsContacts","hasRestrictedExternalCollabsAfterUpdate","onRemoveAllRestrictedExternalCollabs","setUpdatedContacts","isRemovingAllRestrictedExternalCollabs","focusSharedLinkOnLoad","sharedLink","sharedLinkLoaded","createSharedLinkOnLoad","isNewSharedLink","initiallySelectedContacts","prevProps","prevRestrictedExternalCollabEmails","prevIsCollabRestrictionJustificationAllowed","didExternalCollabRestrictionsChange","shouldRequireExternalCollabJustification","fetchJustificationReasons","canInvite","collaborationRestrictionWarning","config","contactLimit","getCollaboratorContacts","getContactAvatarUrl","recommendedSharingTooltipCalloutName","sendInvitesError","showEnterEmailsCallout","showCalloutForUser","showUpgradeOptions","submitting","suggestedCollaborators","modalTracking","contactsFieldDisabledTooltip","inviteDisabledWeblinkTooltip","inviteDisabledTooltip","inlineNotice","content","avatars","renderCollaboratorAvatars","ftuxConfirmButtonProps","ftuxTooltipText","ftuxNewUSMUserTitle","ftuxNewUSMUserBody","ftuxLinkText","ftuxConfirmLabel","ftuxTooltipProps","className","isShown","position","showCloseButton","text","theme","inviteFieldLabel","hasExternalContact","openInviteCollaborators","handleInviteCollabPillCreate","closeInviteCollaborators","handleSendInvites","openInviteCollaboratorsSection","updateInviteCollabsContacts","renderInviteePermissionsDropdown","renderUpgradeLinkDescription","collaboratorsList","currentUserID","avatarsContent","collaborators","hideCollaborators","canShowCollaboratorAvatars","collaborator","String","userID","collaboratorAvatarsProps","upgradeLinkProps","upgradeGetMoreAccessControlsLink","upgradeGetMoreAccessControlsDescription","inviteePermissionsButtonProps","handleInviteePermissionChange","name","collaboratorListTracking","listContent","closeCollaboratorList","allShareRestrictionWarning","changeSharedLinkAccessLevel","changeSharedLinkPermissionLevel","displayInModal","getSharedLinkContacts","intl","isAllowEditSharedLinkForFileEnabled","isFetching","onCopyError","onCopyInit","onCopySuccess","onDismissTooltip","onSettingsClick","sendSharedLinkError","sharedLinkEditTagTargetingApi","sharedLinkEditTooltipTargetingApi","showSharedLinkSettingsCallout","tooltips","showShareRestrictionWarning","renderInviteSection","shouldAutoFocusSharedLink","openEmailSharedLinkForm","onToggleSharedLink","sendSharedLinkFieldLabel","handleEmailSharedLinkPillCreate","closeEmailSharedLinkForm","handleSendSharedLink","updateEmailSharedLinkContacts","renderCollaboratorList","Component","removeLinkConfirmModalTracking","UnifiedShareFormBase"],"mappings":"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","sourcesContent":["// @flow\n\nimport * as React from 'react';\nimport isEmpty from 'lodash/isEmpty';\nimport isEqual from 'lodash/isEqual';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport LoadingIndicatorWrapper from '../../components/loading-indicator/LoadingIndicatorWrapper';\nimport { Link } from '../../components/link';\nimport Button from '../../components/button';\nimport { UpgradeBadge } from '../../components/badge';\nimport { ITEM_TYPE_WEBLINK } from '../../common/constants';\nimport Tooltip from '../../components/tooltip';\nimport { CollaboratorAvatars, CollaboratorList } from '../collaborator-avatars';\n\nimport InviteePermissionsMenu from './InviteePermissionsMenu';\nimport messages from './messages';\nimport SharedLinkSection from './SharedLinkSection';\nimport EmailForm from './EmailForm';\nimport getDefaultPermissionLevel from './utils/defaultPermissionLevel';\nimport hasRestrictedExternalContacts from './utils/hasRestrictedExternalContacts';\nimport mergeContacts from './utils/mergeContacts';\nimport { JUSTIFICATION_CHECKPOINT_EXTERNAL_COLLAB } from './constants';\n\nimport type {\n    contactType as Contact,\n    getJustificationReasonsResponseType as GetJustificationReasonsResponse,\n    item as Item,\n    justificationCheckpointType as JustificationCheckpoint,\n    USFProps,\n} from './flowTypes';\nimport type { SelectOptionProp } from '../../components/select-field/props';\n\nconst SHARED_LINKS_COMMUNITY_URL = 'https://community.box.com/t5/Using-Shared-Links/Creating-Shared-Links/ta-p/19523';\nconst INVITE_COLLABS_CONTACTS_TYPE = 'inviteCollabsContacts';\nconst EMAIL_SHARED_LINK_CONTACTS_TYPE = 'emailSharedLinkContacts';\n\ntype State = {\n    classificationLabelId: string,\n    emailSharedLinkContacts: Array<Contact>,\n    inviteCollabsContacts: Array<Contact>,\n    inviteePermissionLevel: string,\n    isEmailLinkSectionExpanded: boolean,\n    isFetchingJustificationReasons: boolean,\n    isInviteSectionExpanded: boolean,\n    justificationReasons: Array<SelectOptionProp>,\n    showCollaboratorList: boolean,\n};\n\nclass UnifiedShareForm extends React.Component<USFProps, State> {\n    static defaultProps = {\n        displayInModal: true,\n        initiallySelectedContacts: [],\n        createSharedLinkOnLoad: false,\n        focusSharedLinkOnLoad: false,\n        restrictedExternalCollabEmails: [],\n        trackingProps: {\n            collaboratorListTracking: {},\n            inviteCollabsEmailTracking: {},\n            inviteCollabTracking: {},\n            modalTracking: {},\n            removeLinkConfirmModalTracking: {},\n            sharedLinkEmailTracking: {},\n            sharedLinkTracking: {},\n        },\n    };\n\n    constructor(props: USFProps) {\n        super(props);\n\n        this.state = {\n            classificationLabelId: '',\n            emailSharedLinkContacts: [],\n            inviteCollabsContacts: props.initiallySelectedContacts,\n            inviteePermissionLevel: '',\n            isEmailLinkSectionExpanded: false,\n            isFetchingJustificationReasons: false,\n            isInviteSectionExpanded: !!props.initiallySelectedContacts.length,\n            justificationReasons: [],\n            showCollaboratorList: false,\n        };\n    }\n\n    componentDidUpdate(prevProps: USFProps) {\n        const { isCollabRestrictionJustificationAllowed, item, restrictedExternalCollabEmails } = this.props;\n        const {\n            restrictedExternalCollabEmails: prevRestrictedExternalCollabEmails,\n            isCollabRestrictionJustificationAllowed: prevIsCollabRestrictionJustificationAllowed,\n        } = prevProps;\n\n        const didExternalCollabRestrictionsChange =\n            !isEqual(restrictedExternalCollabEmails, prevRestrictedExternalCollabEmails) ||\n            isCollabRestrictionJustificationAllowed !== prevIsCollabRestrictionJustificationAllowed;\n\n        if (didExternalCollabRestrictionsChange && this.shouldRequireExternalCollabJustification()) {\n            this.fetchJustificationReasons(item, JUSTIFICATION_CHECKPOINT_EXTERNAL_COLLAB);\n        }\n    }\n\n    fetchJustificationReasons = (item: Item, checkpoint: JustificationCheckpoint) => {\n        const { justificationReasons } = this.state;\n        const { getJustificationReasons } = this.props;\n        const hasJustificationReasons = !!justificationReasons.length;\n\n        if (!getJustificationReasons || hasJustificationReasons) {\n            return Promise.resolve();\n        }\n        this.setState({ isFetchingJustificationReasons: true });\n\n        return getJustificationReasons(item.typedID, checkpoint)\n            .then(({ classificationLabelId, options }: GetJustificationReasonsResponse) => {\n                this.setState({\n                    classificationLabelId,\n                    justificationReasons: options.map(({ id, title }) => ({\n                        displayText: title,\n                        value: id,\n                    })),\n                });\n            })\n            .finally(() => {\n                this.setState({ isFetchingJustificationReasons: false });\n            });\n    };\n\n    shouldRequireExternalCollabJustification = () => {\n        const { inviteCollabsContacts } = this.state;\n        const { isCollabRestrictionJustificationAllowed, restrictedExternalCollabEmails } = this.props;\n\n        const hasRestrictedExternalCollabs = hasRestrictedExternalContacts(\n            inviteCollabsContacts,\n            restrictedExternalCollabEmails,\n        );\n        return hasRestrictedExternalCollabs && isCollabRestrictionJustificationAllowed;\n    };\n\n    handleInviteCollabPillCreate = (pills: Array<SelectOptionProp | Contact>) => {\n        return this.onPillCreate(INVITE_COLLABS_CONTACTS_TYPE, pills);\n    };\n\n    handleEmailSharedLinkPillCreate = (pills: Array<SelectOptionProp | Contact>) => {\n        return this.onPillCreate(EMAIL_SHARED_LINK_CONTACTS_TYPE, pills);\n    };\n\n    onToggleSharedLink = (event: SyntheticInputEvent<HTMLInputElement>) => {\n        const { target } = event;\n        const {\n            handleFtuxCloseClick,\n            onAddLink,\n            openConfirmModal,\n            shouldRenderFTUXTooltip,\n            trackingProps,\n        } = this.props;\n        const { sharedLinkTracking } = trackingProps;\n        const { onToggleLink } = sharedLinkTracking;\n\n        if (shouldRenderFTUXTooltip) {\n            handleFtuxCloseClick();\n        }\n\n        if (target.type === 'checkbox') {\n            if (target.checked === false) {\n                openConfirmModal();\n            } else {\n                onAddLink();\n            }\n\n            if (onToggleLink) {\n                onToggleLink(target.checked);\n            }\n        }\n    };\n\n    showCollaboratorList = () => {\n        this.setState({ showCollaboratorList: true });\n    };\n\n    closeCollaboratorList = () => {\n        this.setState({ showCollaboratorList: false });\n    };\n\n    handleSendInvites = (data: Object) => {\n        const { inviteePermissions, isCollabRestrictionJustificationAllowed, sendInvites, trackingProps } = this.props;\n        const { inviteCollabsEmailTracking } = trackingProps;\n        const { onSendClick } = inviteCollabsEmailTracking;\n        const { classificationLabelId, inviteePermissionLevel } = this.state;\n        const defaultPermissionLevel = getDefaultPermissionLevel(inviteePermissions);\n        const selectedPermissionLevel = inviteePermissionLevel || defaultPermissionLevel;\n        const { emails, groupIDs, justificationReason, message, restrictedExternalEmails } = data;\n\n        let params = {\n            emails: emails.join(','),\n            groupIDs: groupIDs.join(','),\n            emailMessage: message,\n            permission: selectedPermissionLevel,\n            numsOfInvitees: emails.length,\n            numOfInviteeGroups: groupIDs.length,\n        };\n\n        const hasJustificationReason = !!justificationReason;\n        const hasRestrictedExternalInvitees = !isEmpty(restrictedExternalEmails);\n        const shouldSubmitJustificationReason =\n            hasJustificationReason && hasRestrictedExternalInvitees && isCollabRestrictionJustificationAllowed;\n\n        if (shouldSubmitJustificationReason) {\n            params = {\n                ...params,\n                classificationLabelId,\n                justificationReason: {\n                    id: justificationReason.value,\n                    title: justificationReason.displayText,\n                },\n            };\n        }\n\n        if (onSendClick) {\n            onSendClick(params);\n        }\n\n        return sendInvites(params);\n    };\n\n    handleSendSharedLink = (data: Object) => {\n        const { sendSharedLink, trackingProps } = this.props;\n        const { sharedLinkEmailTracking } = trackingProps;\n        const { onSendClick } = sharedLinkEmailTracking;\n\n        const { emails, groupIDs } = data;\n\n        if (onSendClick) {\n            const params = {\n                ...data,\n                numsOfRecipients: emails.length,\n                numOfRecipientGroups: groupIDs.length,\n            };\n            onSendClick(params);\n        }\n\n        return sendSharedLink(data);\n    };\n\n    // TODO-AH: Change permission level to use the appropriate flow type\n    handleInviteePermissionChange = (permissionLevel: string) => {\n        const { trackingProps } = this.props;\n        const { inviteCollabTracking } = trackingProps;\n        const { onInviteePermissionChange } = inviteCollabTracking;\n\n        this.setState({ inviteePermissionLevel: permissionLevel });\n\n        if (onInviteePermissionChange) {\n            onInviteePermissionChange(permissionLevel);\n        }\n    };\n\n    onPillCreate = (type: string, pills: Array<SelectOptionProp | Contact>) => {\n        // If this is a dropdown select event, we ignore it\n        // $FlowFixMe\n        const selectOptionPills = pills.filter(pill => !pill.id);\n        if (selectOptionPills.length === 0) {\n            return;\n        }\n\n        const { getContactsByEmail } = this.props;\n\n        if (getContactsByEmail) {\n            const emails = pills.map(pill => pill.value);\n            // $FlowFixMe\n            getContactsByEmail({ emails }).then((contacts: Object) => {\n                if (type === INVITE_COLLABS_CONTACTS_TYPE) {\n                    this.setState(prevState => ({\n                        inviteCollabsContacts: mergeContacts(prevState.inviteCollabsContacts, contacts),\n                    }));\n                } else if (type === EMAIL_SHARED_LINK_CONTACTS_TYPE) {\n                    this.setState(prevState => ({\n                        emailSharedLinkContacts: mergeContacts(prevState.emailSharedLinkContacts, contacts),\n                    }));\n                }\n            });\n        }\n    };\n\n    openInviteCollaborators = (value: string) => {\n        const { handleFtuxCloseClick } = this.props;\n        if (this.state.isInviteSectionExpanded) {\n            return;\n        }\n\n        // checking the value because IE seems to trigger onInput immediately\n        // on focus of the contacts field\n        if (value !== '') {\n            handleFtuxCloseClick();\n            this.setState(\n                {\n                    isInviteSectionExpanded: true,\n                },\n                () => {\n                    const {\n                        trackingProps: {\n                            inviteCollabTracking: { onEnterInviteCollabs },\n                        },\n                    } = this.props;\n\n                    if (onEnterInviteCollabs) {\n                        onEnterInviteCollabs();\n                    }\n                },\n            );\n        }\n    };\n\n    openInviteCollaboratorsSection = () => {\n        this.setState({\n            isInviteSectionExpanded: true,\n        });\n    };\n\n    closeInviteCollaborators = () => {\n        this.setState({\n            isInviteSectionExpanded: false,\n        });\n    };\n\n    openEmailSharedLinkForm = () => {\n        const { handleFtuxCloseClick } = this.props;\n        handleFtuxCloseClick();\n        this.setState({\n            isEmailLinkSectionExpanded: true,\n        });\n    };\n\n    closeEmailSharedLinkForm = () => {\n        this.setState({ isEmailLinkSectionExpanded: false });\n    };\n\n    hasExternalContact = (type: string): boolean => {\n        const { inviteCollabsContacts, emailSharedLinkContacts } = this.state;\n        if (type === INVITE_COLLABS_CONTACTS_TYPE) {\n            return inviteCollabsContacts.some(contact => contact.isExternalUser);\n        }\n        if (type === EMAIL_SHARED_LINK_CONTACTS_TYPE) {\n            return emailSharedLinkContacts.some(contact => contact.isExternalUser);\n        }\n        return false;\n    };\n\n    isRemovingAllRestrictedExternalCollabs = (\n        currentInviteCollabsContacts: Array<Contact>,\n        newInviteCollabsContacts: Array<Contact>,\n    ) => {\n        const { restrictedExternalCollabEmails } = this.props;\n\n        const hasRestrictedExternalCollabs = hasRestrictedExternalContacts(\n            currentInviteCollabsContacts,\n            restrictedExternalCollabEmails,\n        );\n        const hasRestrictedExternalCollabsAfterUpdate = hasRestrictedExternalContacts(\n            newInviteCollabsContacts,\n            restrictedExternalCollabEmails,\n        );\n\n        return hasRestrictedExternalCollabs && !hasRestrictedExternalCollabsAfterUpdate;\n    };\n\n    updateInviteCollabsContacts = (inviteCollabsContacts: Array<Contact>) => {\n        const { inviteCollabsContacts: currentInviteCollabsContacts } = this.state;\n        const { onRemoveAllRestrictedExternalCollabs, setUpdatedContacts } = this.props;\n\n        const isRemovingAllRestrictedExternalCollabs = this.isRemovingAllRestrictedExternalCollabs(\n            currentInviteCollabsContacts,\n            inviteCollabsContacts,\n        );\n\n        this.setState({\n            inviteCollabsContacts,\n        });\n\n        if (setUpdatedContacts) {\n            setUpdatedContacts(inviteCollabsContacts);\n        }\n        if (onRemoveAllRestrictedExternalCollabs && isRemovingAllRestrictedExternalCollabs) {\n            onRemoveAllRestrictedExternalCollabs();\n        }\n    };\n\n    updateEmailSharedLinkContacts = (emailSharedLinkContacts: Array<Contact>) => {\n        this.setState({\n            emailSharedLinkContacts,\n        });\n    };\n\n    shouldAutoFocusSharedLink = () => {\n        const { focusSharedLinkOnLoad, sharedLink, sharedLinkLoaded, createSharedLinkOnLoad } = this.props;\n\n        if (!createSharedLinkOnLoad && !focusSharedLinkOnLoad) {\n            return false;\n        }\n        // if not forcing focus or not a newly added shared link, return false\n        if (!(focusSharedLinkOnLoad || sharedLink.isNewSharedLink)) {\n            return false;\n        }\n        // otherwise wait until the link data is loaded before focusing\n        if (!sharedLinkLoaded) {\n            return false;\n        }\n        return true;\n    };\n\n    renderInviteSection() {\n        const {\n            canInvite,\n            collaborationRestrictionWarning,\n            config,\n            contactLimit,\n            getCollaboratorContacts,\n            getContactAvatarUrl,\n            handleFtuxCloseClick,\n            item,\n            recommendedSharingTooltipCalloutName = null,\n            restrictedExternalCollabEmails,\n            sendInvitesError,\n            shouldRenderFTUXTooltip,\n            showEnterEmailsCallout = false,\n            showCalloutForUser = false,\n            showUpgradeOptions,\n            submitting,\n            suggestedCollaborators,\n            trackingProps,\n        } = this.props;\n        const { type } = item;\n        const { isFetchingJustificationReasons, isInviteSectionExpanded, justificationReasons } = this.state;\n        const { inviteCollabsEmailTracking, modalTracking } = trackingProps;\n        const contactsFieldDisabledTooltip =\n            type === ITEM_TYPE_WEBLINK ? (\n                <FormattedMessage {...messages.inviteDisabledWeblinkTooltip} />\n            ) : (\n                <FormattedMessage {...messages.inviteDisabledTooltip} />\n            );\n        const inlineNotice = sendInvitesError\n            ? {\n                  type: 'error',\n                  content: sendInvitesError,\n              }\n            : {\n                  type: 'warning',\n                  content: collaborationRestrictionWarning,\n              };\n        const avatars = this.renderCollaboratorAvatars();\n        const { ftuxConfirmButtonProps } = modalTracking;\n        const ftuxTooltipText = (\n            <div>\n                <h4 className=\"ftux-tooltip-title\">\n                    <FormattedMessage {...messages.ftuxNewUSMUserTitle} />\n                </h4>\n                <p className=\"ftux-tooltip-body\">\n                    <FormattedMessage {...messages.ftuxNewUSMUserBody} />{' '}\n                    <Link className=\"ftux-tooltip-link\" href={SHARED_LINKS_COMMUNITY_URL} target=\"_blank\">\n                        <FormattedMessage {...messages.ftuxLinkText} />\n                    </Link>\n                </p>\n                <div className=\"ftux-tooltip-controls\">\n                    <Button className=\"ftux-tooltip-button\" onClick={handleFtuxCloseClick} {...ftuxConfirmButtonProps}>\n                        <FormattedMessage {...messages.ftuxConfirmLabel} />\n                    </Button>\n                </div>\n            </div>\n        );\n        const ftuxTooltipProps = {\n            className: 'usm-ftux-tooltip',\n            // don't want ftux tooltip to show if the recommended sharing tooltip callout is showing\n            isShown: !recommendedSharingTooltipCalloutName && shouldRenderFTUXTooltip && showCalloutForUser,\n            position: 'middle-left',\n            showCloseButton: true,\n            text: ftuxTooltipText,\n            theme: 'callout',\n        };\n\n        return (\n            <>\n                <Tooltip {...ftuxTooltipProps}>\n                    <div className=\"invite-collaborator-container\" data-testid=\"invite-collaborator-container\">\n                        <EmailForm\n                            config={config}\n                            contactLimit={contactLimit}\n                            contactsFieldAvatars={avatars}\n                            contactsFieldDisabledTooltip={contactsFieldDisabledTooltip}\n                            contactsFieldLabel={<FormattedMessage {...messages.inviteFieldLabel} />}\n                            getContacts={getCollaboratorContacts}\n                            getContactAvatarUrl={getContactAvatarUrl}\n                            inlineNotice={inlineNotice}\n                            isContactsFieldEnabled={canInvite}\n                            isExpanded={isInviteSectionExpanded}\n                            isFetchingJustificationReasons={isFetchingJustificationReasons}\n                            isExternalUserSelected={this.hasExternalContact(INVITE_COLLABS_CONTACTS_TYPE)}\n                            isRestrictionJustificationEnabled={this.shouldRequireExternalCollabJustification()}\n                            justificationReasons={justificationReasons}\n                            onContactInput={this.openInviteCollaborators}\n                            onPillCreate={this.handleInviteCollabPillCreate}\n                            onRequestClose={this.closeInviteCollaborators}\n                            onSubmit={this.handleSendInvites}\n                            openInviteCollaboratorsSection={this.openInviteCollaboratorsSection}\n                            recommendedSharingTooltipCalloutName={recommendedSharingTooltipCalloutName}\n                            restrictedExternalEmails={restrictedExternalCollabEmails}\n                            showEnterEmailsCallout={showEnterEmailsCallout}\n                            submitting={submitting}\n                            selectedContacts={this.state.inviteCollabsContacts}\n                            suggestedCollaborators={suggestedCollaborators}\n                            updateSelectedContacts={this.updateInviteCollabsContacts}\n                            {...inviteCollabsEmailTracking}\n                        >\n                            {this.renderInviteePermissionsDropdown()}\n                            {isInviteSectionExpanded && showUpgradeOptions && this.renderUpgradeLinkDescription()}\n                        </EmailForm>\n                    </div>\n                </Tooltip>\n            </>\n        );\n    }\n\n    renderCollaboratorAvatars() {\n        const { collaboratorsList, canInvite, currentUserID, item, trackingProps } = this.props;\n        const { modalTracking } = trackingProps;\n        let avatarsContent = null;\n\n        if (collaboratorsList) {\n            const { collaborators } = collaboratorsList;\n            const { hideCollaborators = true } = item;\n            const canShowCollaboratorAvatars = hideCollaborators ? canInvite : true;\n\n            // filter out the current user by comparing to the ItemCollabRecord ID field\n            avatarsContent = canShowCollaboratorAvatars && (\n                <CollaboratorAvatars\n                    collaborators={collaborators.filter(collaborator => String(collaborator.userID) !== currentUserID)}\n                    onClick={this.showCollaboratorList}\n                    containerAttributes={modalTracking.collaboratorAvatarsProps}\n                />\n            );\n        }\n\n        return avatarsContent;\n    }\n\n    renderUpgradeLinkDescription() {\n        const { trackingProps = {} } = this.props;\n        const { inviteCollabsEmailTracking = {} } = trackingProps;\n        const { upgradeLinkProps = {} } = inviteCollabsEmailTracking;\n\n        return (\n            <div className=\"upgrade-description\">\n                <UpgradeBadge type=\"warning\" />\n                <FormattedMessage\n                    values={{\n                        upgradeGetMoreAccessControlsLink: (\n                            <Link className=\"upgrade-link\" href=\"/upgrade\" {...upgradeLinkProps}>\n                                <FormattedMessage {...messages.upgradeGetMoreAccessControlsLink} />\n                            </Link>\n                        ),\n                    }}\n                    {...messages.upgradeGetMoreAccessControlsDescription}\n                />\n            </div>\n        );\n    }\n\n    renderInviteePermissionsDropdown() {\n        const { inviteePermissions, item, submitting, canInvite, trackingProps } = this.props;\n        const { type } = item;\n        const { inviteCollabTracking } = trackingProps;\n\n        return (\n            inviteePermissions && (\n                <InviteePermissionsMenu\n                    disabled={!canInvite || submitting}\n                    inviteePermissionsButtonProps={inviteCollabTracking.inviteePermissionsButtonProps}\n                    inviteePermissionLevel={this.state.inviteePermissionLevel}\n                    inviteePermissions={inviteePermissions}\n                    changeInviteePermissionLevel={this.handleInviteePermissionChange}\n                    itemType={type}\n                />\n            )\n        );\n    }\n\n    renderCollaboratorList() {\n        const { item, collaboratorsList, trackingProps } = this.props;\n        const { name, type } = item;\n        const { collaboratorListTracking } = trackingProps;\n        let listContent = null;\n\n        if (collaboratorsList) {\n            const { collaborators } = collaboratorsList;\n\n            listContent = (\n                <CollaboratorList\n                    itemName={name}\n                    itemType={type}\n                    onDoneClick={this.closeCollaboratorList}\n                    item={item}\n                    collaborators={collaborators}\n                    trackingProps={collaboratorListTracking}\n                />\n            );\n        }\n\n        return listContent;\n    }\n\n    render() {\n        // Shared link section props\n        const {\n            allShareRestrictionWarning,\n            changeSharedLinkAccessLevel,\n            createSharedLinkOnLoad,\n            changeSharedLinkPermissionLevel,\n            config,\n            displayInModal,\n            focusSharedLinkOnLoad,\n            getSharedLinkContacts,\n            getContactAvatarUrl,\n            intl,\n            isAllowEditSharedLinkForFileEnabled,\n            isFetching,\n            item,\n            onAddLink,\n            onCopyError,\n            onCopyInit,\n            onCopySuccess,\n            onDismissTooltip = () => {},\n            onSettingsClick,\n            sendSharedLinkError,\n            sharedLink,\n            sharedLinkEditTagTargetingApi,\n            sharedLinkEditTooltipTargetingApi,\n            showEnterEmailsCallout = false,\n            showSharedLinkSettingsCallout = false,\n            submitting,\n            tooltips = {},\n            trackingProps,\n        } = this.props;\n        const { sharedLinkTracking, sharedLinkEmailTracking } = trackingProps;\n        const { isEmailLinkSectionExpanded, isInviteSectionExpanded, showCollaboratorList } = this.state;\n\n        // Only show the restriction warning on the main page of the USM where the email and share link option is available\n        const showShareRestrictionWarning =\n            !isEmailLinkSectionExpanded &&\n            !isInviteSectionExpanded &&\n            !showCollaboratorList &&\n            allShareRestrictionWarning;\n\n        return (\n            <div className={displayInModal ? '' : 'be bdl-UnifiedShareForm'}>\n                <LoadingIndicatorWrapper isLoading={isFetching} hideContent>\n                    {showShareRestrictionWarning && allShareRestrictionWarning}\n\n                    {!isEmailLinkSectionExpanded && !showCollaboratorList && this.renderInviteSection()}\n\n                    {!isEmailLinkSectionExpanded && !isInviteSectionExpanded && !showCollaboratorList && (\n                        <SharedLinkSection\n                            addSharedLink={onAddLink}\n                            autofocusSharedLink={this.shouldAutoFocusSharedLink()}\n                            autoCreateSharedLink={createSharedLinkOnLoad}\n                            config={config}\n                            triggerCopyOnLoad={createSharedLinkOnLoad && focusSharedLinkOnLoad}\n                            changeSharedLinkAccessLevel={changeSharedLinkAccessLevel}\n                            changeSharedLinkPermissionLevel={changeSharedLinkPermissionLevel}\n                            intl={intl}\n                            isAllowEditSharedLinkForFileEnabled={isAllowEditSharedLinkForFileEnabled}\n                            item={item}\n                            itemType={item.type}\n                            onDismissTooltip={onDismissTooltip}\n                            onEmailSharedLinkClick={this.openEmailSharedLinkForm}\n                            onSettingsClick={onSettingsClick}\n                            onToggleSharedLink={this.onToggleSharedLink}\n                            onCopyInit={onCopyInit}\n                            onCopySuccess={onCopySuccess}\n                            onCopyError={onCopyError}\n                            sharedLink={sharedLink}\n                            sharedLinkEditTagTargetingApi={sharedLinkEditTagTargetingApi}\n                            sharedLinkEditTooltipTargetingApi={sharedLinkEditTooltipTargetingApi}\n                            showSharedLinkSettingsCallout={showSharedLinkSettingsCallout}\n                            submitting={submitting || isFetching}\n                            trackingProps={sharedLinkTracking}\n                            tooltips={tooltips}\n                        />\n                    )}\n\n                    {isEmailLinkSectionExpanded && !showCollaboratorList && (\n                        <EmailForm\n                            contactsFieldLabel={<FormattedMessage {...messages.sendSharedLinkFieldLabel} />}\n                            getContactAvatarUrl={getContactAvatarUrl}\n                            getContacts={getSharedLinkContacts}\n                            inlineNotice={{\n                                type: 'error',\n                                content: sendSharedLinkError,\n                            }}\n                            isContactsFieldEnabled\n                            isExpanded\n                            isExternalUserSelected={this.hasExternalContact(EMAIL_SHARED_LINK_CONTACTS_TYPE)}\n                            onPillCreate={this.handleEmailSharedLinkPillCreate}\n                            onRequestClose={this.closeEmailSharedLinkForm}\n                            onSubmit={this.handleSendSharedLink}\n                            showEnterEmailsCallout={showEnterEmailsCallout}\n                            submitting={submitting}\n                            selectedContacts={this.state.emailSharedLinkContacts}\n                            updateSelectedContacts={this.updateEmailSharedLinkContacts}\n                            {...sharedLinkEmailTracking}\n                        />\n                    )}\n                    {showCollaboratorList && this.renderCollaboratorList()}\n                </LoadingIndicatorWrapper>\n            </div>\n        );\n    }\n}\n\nexport { UnifiedShareForm as UnifiedShareFormBase };\nexport default injectIntl(UnifiedShareForm);\n"],"file":"UnifiedShareForm.js"}