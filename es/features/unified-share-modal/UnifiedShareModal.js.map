{"version":3,"sources":["../../../src/features/unified-share-modal/UnifiedShareModal.js"],"names":["React","FormattedMessage","injectIntl","LoadingIndicatorWrapper","Modal","Link","Button","UpgradeBadge","ITEM_TYPE_WEBLINK","Tooltip","CollaboratorAvatars","CollaboratorList","UnifiedShareModalTitle","InviteePermissionsMenu","messages","RemoveLinkConfirmModal","SharedLinkSection","EmailForm","getDefaultPermissionLevel","mergeContacts","SHARED_LINKS_COMMUNITY_URL","INVITE_COLLABS_CONTACTS_TYPE","EMAIL_SHARED_LINK_CONTACTS_TYPE","UnifiedShareModal","props","getInitialData","finally","setState","isFetching","shouldRenderFTUXTooltip","getInitialDataCalled","pills","onPillCreate","event","target","onAddLink","trackingProps","state","sharedLinkTracking","onToggleLink","type","checked","openConfirmModal","isConfirmModalOpen","showCollaboratorList","data","inviteePermissions","sendInvites","inviteCollabsEmailTracking","onSendClick","inviteePermissionLevel","defaultPermissionLevel","selectedPermissionLevel","emails","groupIDs","message","params","join","emailMessage","permission","numsOfInvitees","length","numOfInviteeGroups","sendSharedLink","sharedLinkEmailTracking","numsOfRecipients","numOfRecipientGroups","permissionLevel","inviteCollabTracking","onInviteePermissionChange","selectOptionPills","filter","pill","id","getContactsByEmail","map","value","then","contacts","prevState","inviteCollabsContacts","emailSharedLinkContacts","isInviteSectionExpanded","onEnterInviteCollabs","isEmailLinkSectionExpanded","some","contact","isExternalUser","setUpdatedContacts","focusSharedLinkOnLoad","sharedLink","sharedLinkLoaded","isNewSharedLink","initiallySelectedContacts","item","typedID","modalTracking","onLoad","prevProps","prevSharedLink","url","canInvite","collaborationRestrictionWarning","contactLimit","getCollaboratorContacts","recommendedSharingTooltipCalloutName","sendInvitesError","showEnterEmailsCallout","showCalloutForUser","showUpgradeOptions","submitting","suggestedCollaborators","contactsFieldDisabledTooltip","inviteDisabledWeblinkTooltip","inviteDisabledTooltip","inlineNotice","content","avatars","renderCollaboratorAvatars","ftuxConfirmButtonProps","ftuxTooltipText","ftuxNewUSMUserTitle","ftuxNewUSMUserBody","ftuxLinkText","handleFtuxCloseClick","ftuxConfirmLabel","ftuxTooltipProps","className","isShown","position","showCloseButton","text","theme","inviteFieldLabel","hasExternalContact","openInviteCollaborators","handleInviteCollabPillCreate","closeInviteCollaborators","handleSendInvites","openInviteCollaboratorsSection","updateInviteCollabsContacts","renderInviteePermissionsDropdown","renderUpgradeLinkDescription","collaboratorsList","currentUserID","avatarsContent","collaborators","hideCollaborators","canShowCollaboratorAvatars","collaborator","String","userID","collaboratorAvatarsProps","upgradeLinkProps","upgradeGetMoreAccessControlsLink","upgradeGetMoreAccessControlsDescription","inviteePermissionsButtonProps","handleInviteePermissionChange","name","collaboratorListTracking","listContent","closeCollaboratorList","changeSharedLinkAccessLevel","changeSharedLinkPermissionLevel","onSettingsClick","intl","onDismissTooltip","showSharedLinkSettingsCallout","tooltips","rest","getSharedLinkContacts","isOpen","onRequestClose","onRemoveLink","sendSharedLinkError","removeLinkConfirmModalTracking","modalProps","extendedModalProps","focusElementSelector","undefined","renderInviteSection","shouldAutoFocusSharedLink","openEmailSharedLinkForm","onToggleSharedLink","sendSharedLinkFieldLabel","handleEmailSharedLinkPillCreate","closeEmailSharedLinkForm","handleSendSharedLink","updateEmailSharedLinkContacts","renderCollaboratorList","closeConfirmModal","Component","UnifiedShareModalBase"],"mappings":"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","sourcesContent":["// @flow\n\n'no babel-plugin-flow-react-proptypes';\n\n// turn off this plugin because it breaks the IntlShape flow type\nimport * as React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport type { IntlShape } from 'react-intl';\n\nimport LoadingIndicatorWrapper from '../../components/loading-indicator/LoadingIndicatorWrapper';\nimport { Modal } from '../../components/modal';\nimport { Link } from '../../components/link';\nimport Button from '../../components/button';\nimport { UpgradeBadge } from '../../components/badge';\nimport { ITEM_TYPE_WEBLINK } from '../../common/constants';\nimport Tooltip from '../../components/tooltip';\nimport { CollaboratorAvatars, CollaboratorList } from '../collaborator-avatars';\n\nimport UnifiedShareModalTitle from './UnifiedShareModalTitle';\nimport InviteePermissionsMenu from './InviteePermissionsMenu';\nimport messages from './messages';\nimport RemoveLinkConfirmModal from './RemoveLinkConfirmModal';\nimport SharedLinkSection from './SharedLinkSection';\nimport EmailForm from './EmailForm';\nimport getDefaultPermissionLevel from './utils/defaultPermissionLevel';\nimport mergeContacts from './utils/mergeContacts';\nimport type {\n    accessLevelType,\n    collaboratorsListType,\n    permissionLevelType,\n    inviteePermissionType as InviteePermissions,\n    item as ItemType,\n    contactType as Contact,\n    tooltipComponentIdentifierType,\n    trackingPropsType,\n    sharedLinkType,\n    suggestedCollaboratorsType,\n} from './flowTypes';\nimport type { SelectOptionProp } from '../../components/select-field/props';\n\nimport './UnifiedShareModal.scss';\n\nconst SHARED_LINKS_COMMUNITY_URL = 'https://community.box.com/t5/Using-Shared-Links/Creating-Shared-Links/ta-p/19523';\nconst INVITE_COLLABS_CONTACTS_TYPE = 'inviteCollabsContacts';\nconst EMAIL_SHARED_LINK_CONTACTS_TYPE = 'emailSharedLinkContacts';\n\ntype Props = {\n    /** Flag to determine whether to enable invite collaborators section */\n    canInvite: boolean,\n    /** Handler function that changes shared link access level */\n    changeSharedLinkAccessLevel: (newAccessLevel: accessLevelType) => Promise<{ accessLevel: accessLevelType }>,\n    /** Handler function that changes shared link permission level */\n    changeSharedLinkPermissionLevel: (\n        newPermissionLevel: permissionLevelType,\n    ) => Promise<{ permissionLevel: permissionLevelType }>,\n    /** Message warning about restrictions regarding inviting collaborators to the item */\n    collaborationRestrictionWarning: React.Node,\n    /** List of existing collaborators */\n    collaboratorsList?: collaboratorsListType,\n    /** Used to limit the number of contacts that can be added in the contacts field */\n    contactLimit?: number,\n    /** User ID of currently logged in user */\n    currentUserID: string,\n    /** Whether the modal should focus the shared link after the URL is resolved */\n    focusSharedLinkOnLoad?: boolean,\n    /** Handler function for when the user types into invite collaborators field to fetch contacts. */\n    getCollaboratorContacts: (query: string) => Promise<Array<Contact>>,\n    /** Handler function that gets contacts by a list of emails */\n    getContactsByEmail?: ({ emails: Array<string>, itemTypedID?: string }) => Promise<Object>,\n    /** Handler function for getting intial data for modal */\n    getInitialData: Function,\n    /** Handler function for when the user types into email shared link field to fetch contacts. */\n    getSharedLinkContacts: (query: string) => Promise<Array<Contact>>,\n    /** An array of initially selected contacts. If none are initially selected, an empty array. */\n    initiallySelectedContacts: Array<Contact>,\n    intl: IntlShape,\n    /** An array of invitee permissions */\n    inviteePermissions: Array<InviteePermissions>,\n    /** Flag to set whether the unified share modal is open */\n    isOpen: boolean,\n    /** Item data */\n    item: ItemType,\n    /** Handler function that adds the shared link */\n    onAddLink: () => void,\n    /** Handler function that gets called whenever the user dismisses a tooltip on the given component identifier */\n    onDismissTooltip?: (componentIdentifier: tooltipComponentIdentifierType) => void,\n    /** Handler function that removes the shared link */\n    onRemoveLink: () => void,\n    /** Handler function for when modal is closed */\n    onRequestClose?: Function,\n    /** Handler function for clicks on the settings icon. If not provided, the settings icon won't be rendered. */\n    onSettingsClick?: Function,\n    /** Shows a callout tooltip next to the names / email addresses input field explaining pre-populated recommendation */\n    recommendedSharingTooltipCalloutName: ?string,\n    /**\n     * Function to send collab invitations based on the given parameters object.\n     * This function should return a Promise.\n     */\n    sendInvites: (params: Object) => Promise<Object>,\n    /** Message indicating an error occurred while sending the invites. */\n    sendInvitesError: React.Node,\n    /**\n     * Function to send shared link email based on the given parameters object.\n     * This function should return a Promise.\n     */\n    sendSharedLink: (params: Object) => Promise<Object>,\n    /** Message indicating an error occurred while sending the shared link. */\n    sendSharedLinkError: React.Node,\n    /** Function hoists contact data upon updates to the parent component. Only needed for suggested collabs. */\n    setUpdatedContacts?: (inviteCollabsContacts: Array<Contact>) => void,\n    /** Shared link data */\n    sharedLink: sharedLinkType,\n    /** Determine whether to show the First-time experience tooltip on load */\n    showCalloutForUser?: boolean,\n    /** Shows a callout tooltip next to the names / email addresses input field encouraging users to fill out coworkers contact info */\n    showEnterEmailsCallout?: boolean,\n    /** Shows a callout tooltip next gear icon with info about what can be customized */\n    showSharedLinkSettingsCallout?: boolean,\n    /**\n     * Flag to show link to upgrade and get more access controls.\n     * Only applicable to non-file item types.\n     */\n    showUpgradeOptions: boolean,\n    /** Whether or not a request is in progress */\n    submitting: boolean,\n    /** Data for suggested collaborators shown at bottom of input box. UI doesn't render when this has length of 0. */\n    suggestedCollaborators?: suggestedCollaboratorsType,\n    /** Mapping of components to the content that should be rendered in their tooltips */\n    tooltips?: { [componentIdentifier: tooltipComponentIdentifierType]: React.Node },\n    /** Object with props and handlers for tracking interactions in unified share modal */\n    trackingProps: trackingPropsType,\n};\n\ntype State = {\n    emailSharedLinkContacts: Array<Contact>,\n    getInitialDataCalled: boolean,\n    inviteCollabsContacts: Array<Contact>,\n    inviteePermissionLevel: string,\n    isConfirmModalOpen: boolean,\n    isEmailLinkSectionExpanded: boolean,\n    isFetching: boolean,\n    isInviteSectionExpanded: boolean,\n    sharedLinkLoaded: boolean,\n    shouldRenderFTUXTooltip: boolean,\n    showCollaboratorList: boolean,\n};\n\nclass UnifiedShareModal extends React.Component<Props, State> {\n    static defaultProps = {\n        initiallySelectedContacts: [],\n        focusSharedLinkOnLoad: false,\n        trackingProps: {\n            inviteCollabsEmailTracking: {},\n            sharedLinkEmailTracking: {},\n            sharedLinkTracking: {},\n            inviteCollabTracking: {},\n            modalTracking: {},\n            removeLinkConfirmModalTracking: {},\n            collaboratorListTracking: {},\n        },\n    };\n\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            emailSharedLinkContacts: [],\n            inviteCollabsContacts: props.initiallySelectedContacts,\n            inviteePermissionLevel: '',\n            isConfirmModalOpen: false,\n            isEmailLinkSectionExpanded: false,\n            isFetching: true,\n            isInviteSectionExpanded: !!props.initiallySelectedContacts.length,\n            showCollaboratorList: false,\n            getInitialDataCalled: false,\n            shouldRenderFTUXTooltip: false,\n            sharedLinkLoaded: false,\n        };\n    }\n\n    componentDidMount() {\n        const { item, trackingProps } = this.props;\n        const { type, typedID } = item;\n        const { modalTracking } = trackingProps;\n        const { onLoad } = modalTracking;\n        const { getInitialDataCalled } = this.state;\n\n        // This check is to ensure minimum item props are\n        // hydrated before we fetch data\n        if (!getInitialDataCalled && type && typedID) {\n            this.getInitialData();\n        }\n\n        if (onLoad) {\n            onLoad();\n        }\n    }\n\n    componentDidUpdate(prevProps: Props) {\n        const { item, sharedLink } = this.props;\n        const { type, typedID } = item;\n        const prevSharedLink = prevProps.sharedLink;\n        const { getInitialDataCalled } = this.state;\n\n        // This check is to ensure minimum item props are\n        // hydrated before we fetch data\n        if (!getInitialDataCalled && type && typedID) {\n            this.getInitialData();\n        }\n\n        // we use state to override the default auto copy prop when a URL comes into view\n        if (prevSharedLink.url !== sharedLink.url && sharedLink.url) {\n            this.setState({ sharedLinkLoaded: true });\n        }\n    }\n\n    getInitialData = () => {\n        const { getInitialData } = this.props;\n\n        getInitialData().finally(() => {\n            this.setState({\n                isFetching: false,\n                shouldRenderFTUXTooltip: true,\n            });\n        });\n        this.setState({ getInitialDataCalled: true });\n    };\n\n    handleInviteCollabPillCreate = (pills: Array<SelectOptionProp | Contact>) => {\n        return this.onPillCreate(INVITE_COLLABS_CONTACTS_TYPE, pills);\n    };\n\n    handleEmailSharedLinkPillCreate = (pills: Array<SelectOptionProp | Contact>) => {\n        return this.onPillCreate(EMAIL_SHARED_LINK_CONTACTS_TYPE, pills);\n    };\n\n    onToggleSharedLink = (event: SyntheticInputEvent<HTMLInputElement>) => {\n        const { target } = event;\n        const { onAddLink, trackingProps } = this.props;\n        const { shouldRenderFTUXTooltip } = this.state;\n        const { sharedLinkTracking } = trackingProps;\n        const { onToggleLink } = sharedLinkTracking;\n\n        if (shouldRenderFTUXTooltip) {\n            this.setState({ shouldRenderFTUXTooltip: false });\n        }\n\n        if (target.type === 'checkbox') {\n            if (target.checked === false) {\n                this.openConfirmModal();\n            } else {\n                onAddLink();\n            }\n\n            if (onToggleLink) {\n                onToggleLink(target.checked);\n            }\n        }\n    };\n\n    openConfirmModal = () => {\n        this.setState({ isConfirmModalOpen: true });\n    };\n\n    closeConfirmModal = () => {\n        this.setState({ isConfirmModalOpen: false });\n    };\n\n    showCollaboratorList = () => {\n        this.setState({ showCollaboratorList: true });\n    };\n\n    closeCollaboratorList = () => {\n        this.setState({ showCollaboratorList: false });\n    };\n\n    handleSendInvites = (data: Object) => {\n        const { inviteePermissions, sendInvites, trackingProps } = this.props;\n        const { inviteCollabsEmailTracking } = trackingProps;\n        const { onSendClick } = inviteCollabsEmailTracking;\n        const { inviteePermissionLevel } = this.state;\n        const defaultPermissionLevel = getDefaultPermissionLevel(inviteePermissions);\n        const selectedPermissionLevel = inviteePermissionLevel || defaultPermissionLevel;\n        const { emails, groupIDs, message } = data;\n        const params = {\n            emails: emails.join(','),\n            groupIDs: groupIDs.join(','),\n            emailMessage: message,\n            permission: selectedPermissionLevel,\n            numsOfInvitees: emails.length,\n            numOfInviteeGroups: groupIDs.length,\n        };\n\n        if (onSendClick) {\n            onSendClick(params);\n        }\n\n        return sendInvites(params);\n    };\n\n    handleSendSharedLink = (data: Object) => {\n        const { sendSharedLink, trackingProps } = this.props;\n        const { sharedLinkEmailTracking } = trackingProps;\n        const { onSendClick } = sharedLinkEmailTracking;\n\n        const { emails, groupIDs } = data;\n\n        if (onSendClick) {\n            const params = {\n                ...data,\n                numsOfRecipients: emails.length,\n                numOfRecipientGroups: groupIDs.length,\n            };\n            onSendClick(params);\n        }\n\n        return sendSharedLink(data);\n    };\n\n    // TODO-AH: Change permission level to use the appropriate flow type\n    handleInviteePermissionChange = (permissionLevel: string) => {\n        const { trackingProps } = this.props;\n        const { inviteCollabTracking } = trackingProps;\n        const { onInviteePermissionChange } = inviteCollabTracking;\n\n        this.setState({ inviteePermissionLevel: permissionLevel });\n\n        if (onInviteePermissionChange) {\n            onInviteePermissionChange(permissionLevel);\n        }\n    };\n\n    handleFtuxCloseClick = () => {\n        this.setState({\n            shouldRenderFTUXTooltip: false,\n        });\n    };\n\n    onPillCreate = (type: string, pills: Array<SelectOptionProp | Contact>) => {\n        // If this is a dropdown select event, we ignore it\n        // $FlowFixMe\n        const selectOptionPills = pills.filter(pill => !pill.id);\n        if (selectOptionPills.length === 0) {\n            return;\n        }\n\n        const { getContactsByEmail } = this.props;\n\n        if (getContactsByEmail) {\n            const emails = pills.map(pill => pill.value);\n            // $FlowFixMe\n            getContactsByEmail({ emails }).then((contacts: Object) => {\n                if (type === INVITE_COLLABS_CONTACTS_TYPE) {\n                    this.setState(prevState => ({\n                        inviteCollabsContacts: mergeContacts(prevState.inviteCollabsContacts, contacts),\n                    }));\n                } else if (type === EMAIL_SHARED_LINK_CONTACTS_TYPE) {\n                    this.setState(prevState => ({\n                        emailSharedLinkContacts: mergeContacts(prevState.emailSharedLinkContacts, contacts),\n                    }));\n                }\n            });\n        }\n    };\n\n    openInviteCollaborators = (value: string) => {\n        if (this.state.isInviteSectionExpanded) {\n            return;\n        }\n\n        // checking the value because IE seems to trigger onInput immediately\n        // on focus of the contacts field\n        if (value !== '') {\n            this.setState(\n                {\n                    shouldRenderFTUXTooltip: false,\n                    isInviteSectionExpanded: true,\n                },\n                () => {\n                    const {\n                        trackingProps: {\n                            inviteCollabTracking: { onEnterInviteCollabs },\n                        },\n                    } = this.props;\n\n                    if (onEnterInviteCollabs) {\n                        onEnterInviteCollabs();\n                    }\n                },\n            );\n        }\n    };\n\n    openInviteCollaboratorsSection = () => {\n        this.setState({\n            isInviteSectionExpanded: true,\n        });\n    };\n\n    closeInviteCollaborators = () => {\n        this.setState({\n            isInviteSectionExpanded: false,\n        });\n    };\n\n    openEmailSharedLinkForm = () => {\n        this.setState({\n            isEmailLinkSectionExpanded: true,\n            shouldRenderFTUXTooltip: false,\n        });\n    };\n\n    closeEmailSharedLinkForm = () => {\n        this.setState({ isEmailLinkSectionExpanded: false });\n    };\n\n    hasExternalContact = (type: string): boolean => {\n        const { inviteCollabsContacts, emailSharedLinkContacts } = this.state;\n        if (type === INVITE_COLLABS_CONTACTS_TYPE) {\n            return inviteCollabsContacts.some(contact => contact.isExternalUser);\n        }\n        if (type === EMAIL_SHARED_LINK_CONTACTS_TYPE) {\n            return emailSharedLinkContacts.some(contact => contact.isExternalUser);\n        }\n        return false;\n    };\n\n    updateInviteCollabsContacts = (inviteCollabsContacts: Array<Contact>) => {\n        const { setUpdatedContacts } = this.props;\n        this.setState({\n            inviteCollabsContacts,\n        });\n        if (setUpdatedContacts) {\n            setUpdatedContacts(inviteCollabsContacts);\n        }\n    };\n\n    updateEmailSharedLinkContacts = (emailSharedLinkContacts: Array<Contact>) => {\n        this.setState({\n            emailSharedLinkContacts,\n        });\n    };\n\n    shouldAutoFocusSharedLink = () => {\n        const { focusSharedLinkOnLoad, sharedLink } = this.props;\n        const { sharedLinkLoaded } = this.state;\n        // if not forcing focus (due to USM being opened from shared link UI)\n        // or not a newly added shared link, return false\n        if (!(focusSharedLinkOnLoad || sharedLink.isNewSharedLink)) {\n            return false;\n        }\n        // otherwise wait until the link data is loaded before focusing\n        if (!sharedLinkLoaded) {\n            return false;\n        }\n        return true;\n    };\n\n    renderInviteSection() {\n        const {\n            canInvite,\n            collaborationRestrictionWarning,\n            contactLimit,\n            getCollaboratorContacts,\n            item,\n            recommendedSharingTooltipCalloutName = null,\n            sendInvitesError,\n            showEnterEmailsCallout = false,\n            showCalloutForUser = false,\n            showUpgradeOptions,\n            submitting,\n            suggestedCollaborators,\n            trackingProps,\n        } = this.props;\n        const { type } = item;\n        const { isInviteSectionExpanded, shouldRenderFTUXTooltip } = this.state;\n        const { inviteCollabsEmailTracking, modalTracking } = trackingProps;\n        const contactsFieldDisabledTooltip =\n            type === ITEM_TYPE_WEBLINK ? (\n                <FormattedMessage {...messages.inviteDisabledWeblinkTooltip} />\n            ) : (\n                <FormattedMessage {...messages.inviteDisabledTooltip} />\n            );\n        const inlineNotice = sendInvitesError\n            ? {\n                  type: 'error',\n                  content: sendInvitesError,\n              }\n            : {\n                  type: 'warning',\n                  content: collaborationRestrictionWarning,\n              };\n        const avatars = this.renderCollaboratorAvatars();\n        const { ftuxConfirmButtonProps } = modalTracking;\n        const ftuxTooltipText = (\n            <div>\n                <h4 className=\"ftux-tooltip-title\">\n                    <FormattedMessage {...messages.ftuxNewUSMUserTitle} />\n                </h4>\n                <p className=\"ftux-tooltip-body\">\n                    <FormattedMessage {...messages.ftuxNewUSMUserBody} />{' '}\n                    <Link className=\"ftux-tooltip-link\" href={SHARED_LINKS_COMMUNITY_URL} target=\"_blank\">\n                        <FormattedMessage {...messages.ftuxLinkText} />\n                    </Link>\n                </p>\n                <div className=\"ftux-tooltip-controls\">\n                    <Button\n                        className=\"ftux-tooltip-button\"\n                        onClick={this.handleFtuxCloseClick}\n                        {...ftuxConfirmButtonProps}\n                    >\n                        <FormattedMessage {...messages.ftuxConfirmLabel} />\n                    </Button>\n                </div>\n            </div>\n        );\n        const ftuxTooltipProps = {\n            className: 'usm-ftux-tooltip',\n            // don't want ftux tooltip to show if the recommended sharing tooltip callout is showing\n            isShown: !recommendedSharingTooltipCalloutName && shouldRenderFTUXTooltip && showCalloutForUser,\n            position: 'middle-left',\n            showCloseButton: true,\n            text: ftuxTooltipText,\n            theme: 'callout',\n        };\n\n        return (\n            <>\n                <Tooltip {...ftuxTooltipProps}>\n                    <div className=\"invite-collaborator-container\">\n                        <EmailForm\n                            contactLimit={contactLimit}\n                            contactsFieldAvatars={avatars}\n                            contactsFieldDisabledTooltip={contactsFieldDisabledTooltip}\n                            contactsFieldLabel={<FormattedMessage {...messages.inviteFieldLabel} />}\n                            getContacts={getCollaboratorContacts}\n                            inlineNotice={inlineNotice}\n                            isContactsFieldEnabled={canInvite}\n                            isExpanded={isInviteSectionExpanded}\n                            isExternalUserSelected={this.hasExternalContact(INVITE_COLLABS_CONTACTS_TYPE)}\n                            onContactInput={this.openInviteCollaborators}\n                            onPillCreate={this.handleInviteCollabPillCreate}\n                            onRequestClose={this.closeInviteCollaborators}\n                            onSubmit={this.handleSendInvites}\n                            openInviteCollaboratorsSection={this.openInviteCollaboratorsSection}\n                            recommendedSharingTooltipCalloutName={recommendedSharingTooltipCalloutName}\n                            showEnterEmailsCallout={showEnterEmailsCallout}\n                            submitting={submitting}\n                            selectedContacts={this.state.inviteCollabsContacts}\n                            suggestedCollaborators={suggestedCollaborators}\n                            updateSelectedContacts={this.updateInviteCollabsContacts}\n                            {...inviteCollabsEmailTracking}\n                        >\n                            {this.renderInviteePermissionsDropdown()}\n                            {isInviteSectionExpanded && showUpgradeOptions && this.renderUpgradeLinkDescription()}\n                        </EmailForm>\n                    </div>\n                </Tooltip>\n            </>\n        );\n    }\n\n    renderCollaboratorAvatars() {\n        const { collaboratorsList, canInvite, currentUserID, item, trackingProps } = this.props;\n        const { modalTracking } = trackingProps;\n        let avatarsContent = null;\n\n        if (collaboratorsList) {\n            const { collaborators } = collaboratorsList;\n            const { hideCollaborators = true } = item;\n            const canShowCollaboratorAvatars = hideCollaborators ? canInvite : true;\n\n            // filter out the current user by comparing to the ItemCollabRecord ID field\n            avatarsContent = canShowCollaboratorAvatars && (\n                <CollaboratorAvatars\n                    collaborators={collaborators.filter(collaborator => String(collaborator.userID) !== currentUserID)}\n                    onClick={this.showCollaboratorList}\n                    containerAttributes={modalTracking.collaboratorAvatarsProps}\n                />\n            );\n        }\n\n        return avatarsContent;\n    }\n\n    renderUpgradeLinkDescription() {\n        const { trackingProps = {} } = this.props;\n        const { inviteCollabsEmailTracking = {} } = trackingProps;\n        const { upgradeLinkProps = {} } = inviteCollabsEmailTracking;\n\n        return (\n            <div className=\"upgrade-description\">\n                <UpgradeBadge type=\"warning\" />\n                <FormattedMessage\n                    values={{\n                        upgradeGetMoreAccessControlsLink: (\n                            <Link className=\"upgrade-link\" href=\"/upgrade\" {...upgradeLinkProps}>\n                                <FormattedMessage {...messages.upgradeGetMoreAccessControlsLink} />\n                            </Link>\n                        ),\n                    }}\n                    {...messages.upgradeGetMoreAccessControlsDescription}\n                />\n            </div>\n        );\n    }\n\n    renderInviteePermissionsDropdown() {\n        const { inviteePermissions, item, submitting, canInvite, trackingProps } = this.props;\n        const { type } = item;\n        const { inviteCollabTracking } = trackingProps;\n\n        return (\n            inviteePermissions && (\n                <InviteePermissionsMenu\n                    disabled={!canInvite || submitting}\n                    inviteePermissionsButtonProps={inviteCollabTracking.inviteePermissionsButtonProps}\n                    inviteePermissionLevel={this.state.inviteePermissionLevel}\n                    inviteePermissions={inviteePermissions}\n                    changeInviteePermissionLevel={this.handleInviteePermissionChange}\n                    itemType={type}\n                />\n            )\n        );\n    }\n\n    renderCollaboratorList() {\n        const { item, collaboratorsList, trackingProps } = this.props;\n        const { name, type } = item;\n        const { collaboratorListTracking } = trackingProps;\n        let listContent = null;\n\n        if (collaboratorsList) {\n            const { collaborators } = collaboratorsList;\n\n            listContent = (\n                <CollaboratorList\n                    itemName={name}\n                    itemType={type}\n                    onDoneClick={this.closeCollaboratorList}\n                    item={item}\n                    collaborators={collaborators}\n                    trackingProps={collaboratorListTracking}\n                />\n            );\n        }\n\n        return listContent;\n    }\n\n    render() {\n        // Shared link section props\n        const {\n            changeSharedLinkAccessLevel,\n            changeSharedLinkPermissionLevel,\n            focusSharedLinkOnLoad,\n            item,\n            onSettingsClick,\n            sharedLink,\n            intl,\n            onDismissTooltip = () => {},\n            showEnterEmailsCallout = false,\n            showSharedLinkSettingsCallout = false,\n            submitting,\n            tooltips = {},\n            ...rest\n        } = this.props;\n        const {\n            canInvite,\n            getSharedLinkContacts,\n            isOpen,\n            onRequestClose,\n            onRemoveLink,\n            sendSharedLinkError,\n            trackingProps,\n        } = rest;\n        const {\n            modalTracking,\n            sharedLinkTracking,\n            sharedLinkEmailTracking,\n            removeLinkConfirmModalTracking,\n        } = trackingProps;\n        const { modalProps } = modalTracking;\n        const {\n            isEmailLinkSectionExpanded,\n            isFetching,\n            isInviteSectionExpanded,\n            isConfirmModalOpen,\n            showCollaboratorList,\n        } = this.state;\n\n        // focus logic at modal level\n        const extendedModalProps = {\n            focusElementSelector: canInvite\n                ? '.pill-selector-input' // focus on invite collabs field\n                : '.toggle-simple', // focus on shared link toggle\n            ...modalProps,\n        };\n\n        return (\n            <div>\n                <Modal\n                    className=\"unified-share-modal\"\n                    isOpen={isConfirmModalOpen ? false : isOpen}\n                    onRequestClose={submitting ? undefined : onRequestClose}\n                    title={\n                        <UnifiedShareModalTitle\n                            isEmailLinkSectionExpanded={isEmailLinkSectionExpanded}\n                            showCollaboratorList={showCollaboratorList}\n                            item={item}\n                        />\n                    }\n                    {...extendedModalProps}\n                >\n                    <LoadingIndicatorWrapper isLoading={isFetching} hideContent>\n                        {!isEmailLinkSectionExpanded && !showCollaboratorList && this.renderInviteSection()}\n\n                        {!isEmailLinkSectionExpanded && !isInviteSectionExpanded && !showCollaboratorList && (\n                            <SharedLinkSection\n                                autofocusSharedLink={this.shouldAutoFocusSharedLink()}\n                                triggerCopyOnLoad={focusSharedLinkOnLoad}\n                                changeSharedLinkAccessLevel={changeSharedLinkAccessLevel}\n                                changeSharedLinkPermissionLevel={changeSharedLinkPermissionLevel}\n                                intl={intl}\n                                item={item}\n                                itemType={item.type}\n                                onDismissTooltip={onDismissTooltip}\n                                onEmailSharedLinkClick={this.openEmailSharedLinkForm}\n                                onSettingsClick={onSettingsClick}\n                                onToggleSharedLink={this.onToggleSharedLink}\n                                sharedLink={sharedLink}\n                                showSharedLinkSettingsCallout={showSharedLinkSettingsCallout}\n                                submitting={submitting || isFetching}\n                                trackingProps={sharedLinkTracking}\n                                tooltips={tooltips}\n                            />\n                        )}\n\n                        {isEmailLinkSectionExpanded && !showCollaboratorList && (\n                            <EmailForm\n                                contactsFieldLabel={<FormattedMessage {...messages.sendSharedLinkFieldLabel} />}\n                                getContacts={getSharedLinkContacts}\n                                inlineNotice={{\n                                    type: 'error',\n                                    content: sendSharedLinkError,\n                                }}\n                                isContactsFieldEnabled\n                                isExpanded\n                                isExternalUserSelected={this.hasExternalContact(EMAIL_SHARED_LINK_CONTACTS_TYPE)}\n                                onPillCreate={this.handleEmailSharedLinkPillCreate}\n                                onRequestClose={this.closeEmailSharedLinkForm}\n                                onSubmit={this.handleSendSharedLink}\n                                showEnterEmailsCallout={showEnterEmailsCallout}\n                                submitting={submitting}\n                                selectedContacts={this.state.emailSharedLinkContacts}\n                                updateSelectedContacts={this.updateEmailSharedLinkContacts}\n                                {...sharedLinkEmailTracking}\n                            />\n                        )}\n                        {showCollaboratorList && this.renderCollaboratorList()}\n                    </LoadingIndicatorWrapper>\n                </Modal>\n                {isConfirmModalOpen && (\n                    <RemoveLinkConfirmModal\n                        isOpen={isConfirmModalOpen}\n                        onRequestClose={this.closeConfirmModal}\n                        removeLink={onRemoveLink}\n                        submitting={submitting}\n                        {...removeLinkConfirmModalTracking}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport { UnifiedShareModal as UnifiedShareModalBase };\nexport default injectIntl(UnifiedShareModal);\n"],"file":"UnifiedShareModal.js"}