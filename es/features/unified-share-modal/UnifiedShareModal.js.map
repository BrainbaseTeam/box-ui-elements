{"version":3,"sources":["../../../src/features/unified-share-modal/UnifiedShareModal.js"],"names":["React","injectIntl","Modal","UnifiedShareModalTitle","UnifiedShareForm","RemoveLinkConfirmModal","UnifiedShareModal","props","getInitialData","finally","setState","isFetching","shouldRenderFTUXTooltip","getInitialDataCalled","isConfirmModalOpen","onRemoveLink","displayInModal","closeConfirmModal","sharedLinkEditTagTargetingApi","sharedLinkEditTooltipTargetingApi","state","sharedLinkLoaded","handleFtuxCloseClick","openConfirmModal","initialDataReceived","isEmailLinkSectionExpanded","showCollaboratorList","item","trackingProps","type","typedID","modalTracking","onLoad","prevProps","sharedLink","prevSharedLink","url","canInvite","isOpen","onRequestClose","submitting","removeLinkConfirmModalTracking","modalProps","extendedModalProps","focusElementSelector","undefined","renderUSF","removeLink","Component","initiallySelectedContacts","isAllowEditSharedLinkForFileEnabled","createSharedLinkOnLoad","focusSharedLinkOnLoad","restrictedExternalCollabEmails","inviteCollabsEmailTracking","sharedLinkEmailTracking","sharedLinkTracking","inviteCollabTracking","collaboratorListTracking","UnifiedShareModalBase"],"mappings":"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","sourcesContent":["// @flow\n\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\n\nimport { Modal } from '../../components/modal';\n\nimport UnifiedShareModalTitle from './UnifiedShareModalTitle';\nimport UnifiedShareForm from './UnifiedShareForm';\nimport RemoveLinkConfirmModal from './RemoveLinkConfirmModal';\nimport type { USMProps } from './flowTypes';\n\nimport './UnifiedShareModal.scss';\n\ntype State = {\n    getInitialDataCalled: boolean,\n    isConfirmModalOpen: boolean,\n    isEmailLinkSectionExpanded: boolean,\n    isFetching: boolean,\n    sharedLinkLoaded: boolean,\n    shouldRenderFTUXTooltip: boolean,\n    showCollaboratorList: boolean,\n};\n\nclass UnifiedShareModal extends React.Component<USMProps, State> {\n    static defaultProps = {\n        displayInModal: true,\n        initiallySelectedContacts: [],\n        isAllowEditSharedLinkForFileEnabled: false,\n        createSharedLinkOnLoad: false,\n        focusSharedLinkOnLoad: false,\n        restrictedExternalCollabEmails: [],\n        trackingProps: {\n            inviteCollabsEmailTracking: {},\n            sharedLinkEmailTracking: {},\n            sharedLinkTracking: {},\n            inviteCollabTracking: {},\n            modalTracking: {},\n            removeLinkConfirmModalTracking: {},\n            collaboratorListTracking: {},\n        },\n    };\n\n    constructor(props: USMProps) {\n        super(props);\n\n        const { initialDataReceived } = props;\n\n        this.state = {\n            getInitialDataCalled: !!initialDataReceived,\n            isConfirmModalOpen: false,\n            isEmailLinkSectionExpanded: false,\n            isFetching: !initialDataReceived,\n            sharedLinkLoaded: false,\n            shouldRenderFTUXTooltip: false,\n            showCollaboratorList: false,\n        };\n    }\n\n    componentDidMount() {\n        const { item, trackingProps } = this.props;\n        const { type, typedID } = item;\n        const { modalTracking } = trackingProps;\n        const { onLoad } = modalTracking;\n        const { getInitialDataCalled } = this.state;\n\n        // This check is to ensure minimum item props are\n        // hydrated before we fetch data\n        if (!getInitialDataCalled && type && typedID) {\n            this.getInitialData();\n        }\n\n        if (onLoad) {\n            onLoad();\n        }\n    }\n\n    componentDidUpdate(prevProps: USMProps) {\n        const { item, sharedLink } = this.props;\n        const { type, typedID } = item;\n        const prevSharedLink = prevProps.sharedLink;\n        const { getInitialDataCalled } = this.state;\n\n        // This check is to ensure minimum item props are\n        // hydrated before we fetch data\n        if (!getInitialDataCalled && type && typedID) {\n            this.getInitialData();\n        }\n\n        // we use state to override the default auto copy prop when a URL comes into view\n        if (prevSharedLink.url !== sharedLink.url && sharedLink.url) {\n            this.setState({ sharedLinkLoaded: true });\n        }\n    }\n\n    getInitialData = () => {\n        const { getInitialData } = this.props;\n\n        getInitialData().finally(() => {\n            this.setState({\n                isFetching: false,\n                shouldRenderFTUXTooltip: true,\n            });\n        });\n        this.setState({ getInitialDataCalled: true });\n    };\n\n    handleFtuxCloseClick = () => {\n        this.setState({\n            shouldRenderFTUXTooltip: false,\n        });\n    };\n\n    openConfirmModal = () => {\n        this.setState({ isConfirmModalOpen: true });\n    };\n\n    closeConfirmModal = () => {\n        this.setState({ isConfirmModalOpen: false });\n    };\n\n    removeLink = () => {\n        const { onRemoveLink, displayInModal } = this.props;\n        onRemoveLink();\n        if (!displayInModal) {\n            this.closeConfirmModal();\n        }\n    };\n\n    renderUSF = () => {\n        const { sharedLinkEditTagTargetingApi, sharedLinkEditTooltipTargetingApi } = this.props;\n        const { isFetching, sharedLinkLoaded, shouldRenderFTUXTooltip } = this.state;\n        return (\n            <UnifiedShareForm\n                {...this.props}\n                handleFtuxCloseClick={this.handleFtuxCloseClick}\n                isFetching={isFetching}\n                openConfirmModal={this.openConfirmModal}\n                sharedLinkEditTagTargetingApi={sharedLinkEditTagTargetingApi}\n                sharedLinkEditTooltipTargetingApi={sharedLinkEditTooltipTargetingApi}\n                sharedLinkLoaded={sharedLinkLoaded}\n                shouldRenderFTUXTooltip={shouldRenderFTUXTooltip}\n            />\n        );\n    };\n\n    render() {\n        // Shared link section props\n        const { canInvite, displayInModal, isOpen, item, onRequestClose, submitting, trackingProps } = this.props;\n        const { modalTracking, removeLinkConfirmModalTracking } = trackingProps;\n        const { modalProps } = modalTracking;\n        const { isEmailLinkSectionExpanded, isConfirmModalOpen, showCollaboratorList } = this.state;\n\n        // focus logic at modal level\n        const extendedModalProps = {\n            focusElementSelector: canInvite\n                ? '.bdl-PillSelector-input' // focus on invite collabs field\n                : '.toggle-simple', // focus on shared link toggle\n            ...modalProps,\n        };\n\n        return (\n            <>\n                {displayInModal ? (\n                    <Modal\n                        className=\"be-modal unified-share-modal\"\n                        isOpen={isConfirmModalOpen ? false : isOpen}\n                        onRequestClose={submitting ? undefined : onRequestClose}\n                        title={\n                            <UnifiedShareModalTitle\n                                isEmailLinkSectionExpanded={isEmailLinkSectionExpanded}\n                                showCollaboratorList={showCollaboratorList}\n                                item={item}\n                            />\n                        }\n                        {...extendedModalProps}\n                    >\n                        {this.renderUSF()}\n                    </Modal>\n                ) : (\n                    <div className=\"bdl-UnifiedShareForm-container\">{this.renderUSF()}</div>\n                )}\n                {isConfirmModalOpen && (\n                    <RemoveLinkConfirmModal\n                        isOpen={isConfirmModalOpen}\n                        onRequestClose={this.closeConfirmModal}\n                        removeLink={this.removeLink}\n                        submitting={submitting}\n                        {...removeLinkConfirmModalTracking}\n                    />\n                )}\n            </>\n        );\n    }\n}\n\nexport { UnifiedShareModal as UnifiedShareModalBase };\nexport default injectIntl(UnifiedShareModal);\n"],"file":"UnifiedShareModal.js"}