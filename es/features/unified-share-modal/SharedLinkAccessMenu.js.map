{"version":3,"sources":["../../../src/features/unified-share-modal/SharedLinkAccessMenu.js"],"names":["React","classNames","FormattedMessage","DropdownMenu","MenuToggle","Menu","SelectMenuItem","PlainButton","Tooltip","SharedLinkAccessLabel","ANYONE_WITH_LINK","ANYONE_IN_COMPANY","PEOPLE_IN_ITEM","messages","accessLevels","SharedLinkAccessMenu","newAccessLevel","props","accessLevel","changeAccessLevel","trackingProps","onChangeSharedLinkAccessLevel","accessLevelsDisabledReason","allowedAccessLevels","enterpriseName","itemType","map","level","isDisabled","isDisabledByPolicy","disabledShareLinkPermission","onChangeAccessLevel","onDismissTooltip","submitting","tooltipContent","onSharedLinkAccessMenuOpen","sharedLinkAccessMenuButtonProps","renderMenu","Component"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\n\nimport DropdownMenu, { MenuToggle } from '../../components/dropdown-menu';\nimport { Menu, SelectMenuItem } from '../../components/menu';\nimport PlainButton from '../../components/plain-button';\nimport Tooltip from '../../components/tooltip';\nimport type { ItemType } from '../../common/types/core';\n\nimport SharedLinkAccessLabel from './SharedLinkAccessLabel';\nimport { ANYONE_WITH_LINK, ANYONE_IN_COMPANY, PEOPLE_IN_ITEM } from './constants';\nimport messages from './messages';\nimport type { accessLevelType, accessLevelsDisabledReasonType, allowedAccessLevelsType } from './flowTypes';\n\nconst accessLevels = [ANYONE_WITH_LINK, ANYONE_IN_COMPANY, PEOPLE_IN_ITEM];\n\ntype Props = {\n    accessLevel?: accessLevelType,\n    accessLevelsDisabledReason: accessLevelsDisabledReasonType,\n    allowedAccessLevels: allowedAccessLevelsType,\n    changeAccessLevel: (newAccessLevel: accessLevelType) => Promise<{ accessLevel: accessLevelType }>,\n    enterpriseName?: string,\n    itemType: ItemType,\n    onDismissTooltip: () => void,\n    submitting: boolean,\n    tooltipContent: React.Node,\n    trackingProps: {\n        onChangeSharedLinkAccessLevel?: Function,\n        onSharedLinkAccessMenuOpen?: Function,\n        sharedLinkAccessMenuButtonProps?: Object,\n    },\n};\n\nclass SharedLinkAccessMenu extends React.Component<Props> {\n    static defaultProps = {\n        accessLevelsDisabledReason: {},\n        allowedAccessLevels: {},\n        trackingProps: {},\n    };\n\n    onChangeAccessLevel = (newAccessLevel: accessLevelType) => {\n        const { accessLevel, changeAccessLevel, trackingProps } = this.props;\n        const { onChangeSharedLinkAccessLevel } = trackingProps;\n\n        if (accessLevel !== newAccessLevel) {\n            changeAccessLevel(newAccessLevel);\n\n            if (onChangeSharedLinkAccessLevel) {\n                onChangeSharedLinkAccessLevel(newAccessLevel);\n            }\n        }\n    };\n\n    renderMenu() {\n        const { accessLevel, accessLevelsDisabledReason, allowedAccessLevels, enterpriseName, itemType } = this.props;\n        return (\n            <Menu className=\"usm-share-access-menu\">\n                {accessLevels.map(level => {\n                    const isDisabled = !allowedAccessLevels[level];\n                    const isDisabledByPolicy = accessLevelsDisabledReason[level] === 'access_policy';\n\n                    // If an access level is disabled for reasons other than access policy enforcement\n                    // then we just don't show that menu item. If it is disabled because of an access policy\n                    // instead, then we show the menu item in a disabled state and with a tooltip.\n                    if (isDisabled && !isDisabledByPolicy) {\n                        return null;\n                    }\n\n                    return (\n                        <Tooltip\n                            isDisabled={!isDisabledByPolicy}\n                            key={`tooltip-${level}`}\n                            position=\"top-center\"\n                            text={<FormattedMessage {...messages.disabledShareLinkPermission} />}\n                        >\n                            <SelectMenuItem\n                                key={level}\n                                isDisabled={isDisabled}\n                                isSelected={level === accessLevel}\n                                onClick={() => this.onChangeAccessLevel(level)}\n                            >\n                                <SharedLinkAccessLabel\n                                    accessLevel={level}\n                                    enterpriseName={enterpriseName}\n                                    hasDescription\n                                    itemType={itemType}\n                                />\n                            </SelectMenuItem>\n                        </Tooltip>\n                    );\n                })}\n            </Menu>\n        );\n    }\n\n    render() {\n        const {\n            accessLevel,\n            enterpriseName,\n            itemType,\n            onDismissTooltip,\n            submitting,\n            tooltipContent,\n            trackingProps,\n        } = this.props;\n        const { onSharedLinkAccessMenuOpen, sharedLinkAccessMenuButtonProps } = trackingProps;\n\n        return (\n            <Tooltip\n                className=\"usm-ftux-tooltip\"\n                isShown={!!tooltipContent}\n                onDismiss={onDismissTooltip}\n                position=\"middle-left\"\n                showCloseButton\n                text={tooltipContent}\n                theme=\"callout\"\n            >\n                <DropdownMenu onMenuOpen={onSharedLinkAccessMenuOpen} constrainToWindow>\n                    <PlainButton\n                        className={classNames('lnk', {\n                            'is-disabled': submitting,\n                        })}\n                        disabled={submitting}\n                        {...sharedLinkAccessMenuButtonProps}\n                    >\n                        <MenuToggle>\n                            <SharedLinkAccessLabel\n                                accessLevel={accessLevel}\n                                enterpriseName={enterpriseName}\n                                hasDescription={false}\n                                itemType={itemType}\n                            />\n                        </MenuToggle>\n                    </PlainButton>\n                    {this.renderMenu()}\n                </DropdownMenu>\n            </Tooltip>\n        );\n    }\n}\n\nexport default SharedLinkAccessMenu;\n"],"file":"SharedLinkAccessMenu.js"}