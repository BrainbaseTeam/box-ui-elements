{"version":3,"sources":["../../../src/features/unified-share-modal/flowTypes.js"],"names":["constants","accessLevelValues","ANYONE_WITH_LINK","ANYONE_IN_COMPANY","PEOPLE_IN_ITEM","permissionLevelValues","CAN_VIEW_DOWNLOAD","CAN_VIEW_ONLY","collaboratorGroupValues","COLLAB_GROUP_TYPE","COLLAB_USER_TYPE","COLLAB_PENDING_TYPE"],"mappings":";;;;AAEA,OAAO,KAAKA,SAAZ,MAA2B,aAA3B,C,CAEA;;AACA,IAAMC,iBAAiB,iEAClBD,SAAS,CAACE,gBADQ,EACW,kBADX,uCAElBF,SAAS,CAACG,iBAFQ,EAEY,mBAFZ,uCAGlBH,SAAS,CAACI,cAHQ,EAGS,gBAHT,sBAAvB;AAOA,IAAMC,qBAAqB,uEACtBL,SAAS,CAACM,iBADY,EACQ,mBADR,0CAEtBN,SAAS,CAACO,aAFY,EAEI,eAFJ,yBAA3B;AAMA,IAAMC,uBAAuB,uEACxBR,SAAS,CAACS,iBADc,EACM,mBADN,0CAExBT,SAAS,CAACU,gBAFc,EAEK,kBAFL,0CAGxBV,SAAS,CAACW,mBAHc,EAGQ,qBAHR,yBAA7B","sourcesContent":["// @flow\nimport type { ItemType } from '../../common/types/core';\nimport * as constants from './constants';\n\n// DRY: Invert the constants so that we can construct the appropriate enum types\nconst accessLevelValues = {\n    [constants.ANYONE_WITH_LINK]: 'ANYONE_WITH_LINK',\n    [constants.ANYONE_IN_COMPANY]: 'ANYONE_IN_COMPANY',\n    [constants.PEOPLE_IN_ITEM]: 'PEOPLE_IN_ITEM',\n};\nexport type accessLevelType = $Keys<typeof accessLevelValues>;\n\nconst permissionLevelValues = {\n    [constants.CAN_VIEW_DOWNLOAD]: 'CAN_VIEW_DOWNLOAD',\n    [constants.CAN_VIEW_ONLY]: 'CAN_VIEW_ONLY',\n};\nexport type permissionLevelType = $Keys<typeof permissionLevelValues>;\n\nconst collaboratorGroupValues = {\n    [constants.COLLAB_GROUP_TYPE]: 'COLLAB_GROUP_TYPE',\n    [constants.COLLAB_USER_TYPE]: 'COLLAB_USER_TYPE',\n    [constants.COLLAB_PENDING_TYPE]: 'COLLAB_PENDING_TYPE',\n};\nexport type collaboratorGroupType = $Keys<typeof collaboratorGroupValues>;\n\nexport type allowedAccessLevelsType = {\n    peopleInThisItem?: boolean,\n    peopleInYourCompany?: boolean,\n    peopleWithTheLink?: boolean,\n};\n\nexport type accessLevelsDisabledReasonType = {\n    peopleInThisItem?: 'access_policy' | null,\n    peopleInYourCompany?: 'access_policy' | null,\n    peopleWithTheLink?: 'access_policy' | null,\n};\n\nexport type contactType = {\n    email?: string,\n    id: number | string,\n    isExternalUser?: boolean,\n    name?: string,\n    text?: string,\n    type: string,\n    value?: number | string,\n};\n\nexport type inviteePermissionType = {\n    default: boolean,\n    disabled?: boolean,\n    text: string,\n    value: string,\n};\n\nexport type item = {\n    bannerPolicy?: {\n        body: string,\n        title: string,\n    },\n    classification?: string,\n    description: string,\n    extension: string,\n    grantedPermissions: {\n        itemShare: boolean,\n    },\n    hideCollaborators: boolean,\n    id: number,\n    name: string,\n    type: ItemType,\n    typedID: string,\n};\n\nexport type emailFormTrackingType = {\n    cancelButtonProps?: Object,\n    messageProps?: Object,\n    onContactAdd?: Function,\n    onContactRemove?: Function,\n    onSendClick?: Function,\n};\n\nexport type sharedLinkTrackingType = {\n    copyButtonProps?: Object,\n    onChangeSharedLinkAccessLevel?: Function,\n    onChangeSharedLinkPermissionLevel?: Function,\n    onSharedLinkAccessMenuOpen?: Function,\n    onSharedLinkCopy?: Function,\n    onToggleLink?: Function,\n    sendSharedLinkButtonProps?: Object,\n    sharedLinkAccessMenuButtonProps?: Object,\n    sharedLinkPermissionsMenuButtonProps?: Object,\n    sharedLinkSettingsButtonProps?: Object,\n};\n\nexport type collaboratorListTrackingType = {\n    doneButtonProps?: Object,\n    emailProps?: Object,\n    manageLinkProps?: Object,\n    usernameProps?: Object,\n    viewAdditionalProps?: Object,\n};\n\nexport type trackingPropsType = {\n    collaboratorListTracking: collaboratorListTrackingType,\n    inviteCollabTracking: {\n        inviteePermissionsButtonProps?: Object,\n        onEnterInviteCollabs?: Function,\n        onInviteePermissionChange?: Function,\n    },\n    inviteCollabsEmailTracking: {\n        ...emailFormTrackingType,\n        upgradeLinkProps?: Object,\n    },\n    modalTracking: {\n        collaboratorAvatarsProps?: Object,\n        ftuxConfirmButtonProps?: Object,\n        modalProps?: Object,\n        onLoad?: Function,\n    },\n    removeLinkConfirmModalTracking: {\n        cancelButtonProps?: Object,\n        modalProps?: Object,\n        okayButtonProps?: Object,\n        onLoad?: Function,\n    },\n    sharedLinkEmailTracking: emailFormTrackingType,\n    sharedLinkTracking: sharedLinkTrackingType,\n};\n\n// this type is a strict subset of the SharedLinkRecord data returned from the server\nexport type sharedLinkType = {\n    accessLevel: accessLevelType,\n    accessLevelsDisabledReason?: accessLevelsDisabledReasonType,\n    allowedAccessLevels: allowedAccessLevelsType,\n    canChangeAccessLevel: boolean,\n    enterpriseName: string,\n    expirationTimestamp: ?number,\n    isDownloadAllowed: boolean,\n    isDownloadSettingAvailable: boolean,\n    isEditAllowed: boolean,\n    isNewSharedLink: boolean,\n    isPreviewAllowed: boolean,\n    permissionLevel: permissionLevelType,\n    url: string,\n};\n\nexport type collaboratorType = {\n    collabID: number,\n    hasCustomAvatar: boolean,\n    imageURL: ?string,\n    name: string,\n    type: collaboratorGroupType,\n    userID: ?number,\n};\n\nexport type collaboratorsListType = {\n    collaborators: Array<collaboratorType>,\n};\n\nexport type tooltipComponentIdentifierType =\n    | 'shared-link-access-menu'\n    | 'shared-link-copy-button'\n    | 'shared-link-settings'\n    | 'shared-link-toggle';\n\nexport type suggestedCollaboratorsType = { [id: string]: { id: string, userScore: number } };\n"],"file":"flowTypes.js"}