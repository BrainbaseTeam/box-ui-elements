{"version":3,"sources":["../../../../src/features/targeting/utils/useSuppressed.js"],"names":["neverTargeted","useSuppressed","useTargetingApi","useShouldSuppress","targetingApi","shouldSuppress"],"mappings":"AACA,OAAOA,aAAP,MAA0B,kBAA1B;;AAGA;;;;AAIA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,eAAD,EAAsCC,iBAAtC,EAAyF;AAC3G,MAAMC,YAAY,GAAGF,eAAe,EAApC;AACA,MAAMG,cAAc,GAAGF,iBAAiB,EAAxC;;AACA,MAAIE,cAAJ,EAAoB;AAChB,WAAOL,aAAP;AACH;;AACD,SAAOI,YAAP;AACH,CAPD;;AASA,eAAeH,aAAf","sourcesContent":["// @flow\nimport neverTargeted from '../neverTargeted';\nimport { type TargetingApi } from '../types';\n\n/**\n * Returns a targetingApi that will be targeted as long as the input targeting api is targeted\n * and should suppress is false.\n */\nconst useSuppressed = (useTargetingApi: () => TargetingApi, useShouldSuppress: () => boolean): TargetingApi => {\n    const targetingApi = useTargetingApi();\n    const shouldSuppress = useShouldSuppress();\n    if (shouldSuppress) {\n        return neverTargeted;\n    }\n    return targetingApi;\n};\n\nexport default useSuppressed;\n"],"file":"useSuppressed.js"}