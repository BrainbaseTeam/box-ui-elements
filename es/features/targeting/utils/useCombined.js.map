{"version":3,"sources":["../../../../src/features/targeting/utils/useCombined.js"],"names":["neverTargeted","useCombined","useTargetingApis","useGetTargetingApi","useTargetingApi","targetingApis","map","firstEligibleTargetingApi","find","canShow"],"mappings":"AACA,OAAOA,aAAP,MAA0B,kBAA1B;;AAGA;AACA;AACA;AACA;AACA;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,gBAAD,EAAwE;AACxF,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,eAAD;AAAA,WAAuDA,eAAe,EAAtE;AAAA,GAA3B;;AACA,MAAMC,aAAa,GAAGH,gBAAgB,CAACI,GAAjB,CAAqBH,kBAArB,CAAtB;AAEA,MAAMI,yBAAyB,GAAGF,aAAa,CAACG,IAAd,CAAmB;AAAA,QAAGC,OAAH,QAAGA,OAAH;AAAA,WAAwCA,OAAxC;AAAA,GAAnB,CAAlC;AAEA,SAAOF,yBAAyB,IAAIP,aAApC;AACH,CAPD;;AASA,eAAeC,WAAf","sourcesContent":["// @flow\nimport neverTargeted from '../neverTargeted';\nimport { type TargetingApi } from '../types';\n\n// This function takes in an array of targetingApi hooks (functions) and returns the first\n// eligible targetingApi hook OR defaults to the neverTargeted hook.\n//\n// @TODO (online-sales): Incorporate priority for determining targeting in case we have multiple\n// items in the array which are eligible (i.e. contextual messages having greater priority than onboarding).\nconst useCombined = (useTargetingApis: $ReadOnlyArray<() => TargetingApi>): TargetingApi => {\n    const useGetTargetingApi = (useTargetingApi: () => TargetingApi): TargetingApi => useTargetingApi();\n    const targetingApis = useTargetingApis.map(useGetTargetingApi);\n\n    const firstEligibleTargetingApi = targetingApis.find(({ canShow }: TargetingApi): boolean => canShow);\n\n    return firstEligibleTargetingApi || neverTargeted;\n};\n\nexport default useCombined;\n"],"file":"useCombined.js"}