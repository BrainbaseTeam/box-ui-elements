{"version":3,"sources":["../../../../src/features/targeting/hocs/withTargetedClickThrough.js"],"names":["React","useOnClickBody","withTargetedClickThrough","WrappedComponent","WrapperComponent","children","closeOnClickOutside","shouldTarget","useTargetingApi","rest","canShow","onComplete","onClose","onShow","handleOnComplete","shouldShow","useEffect","displayName","name"],"mappings":";;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,cAAT,QAA+B,UAA/B;;AAGA,SAASC,wBAAT,CACIC,gBADJ,EAKI;AACA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OASlB;AAAA,QARHC,QAQG,QARHA,QAQG;AAAA,QAPHC,mBAOG,QAPHA,mBAOG;AAAA,QANHC,YAMG,QANHA,YAMG;AAAA,QALHC,eAKG,QALHA,eAKG;AAAA,QAJAC,IAIA;;AAAA,2BAC8CD,eAAe,EAD7D;AAAA,QACKE,OADL,oBACKA,OADL;AAAA,QACcC,UADd,oBACcA,UADd;AAAA,QAC0BC,OAD1B,oBAC0BA,OAD1B;AAAA,QACmCC,MADnC,oBACmCA,MADnC;;AAGH,QAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3B,UAAIP,YAAY,IAAIG,OAApB,EAA6B;AACzBC,QAAAA,UAAU;AACb;AACJ,KAJD;;AAMA,QAAMI,UAAU,GAAGR,YAAY,IAAIG,OAAnC;AAEAT,IAAAA,cAAc,CAACW,OAAD,EAAU,CAAC,EAAEG,UAAU,IAAIT,mBAAhB,CAAX,CAAd;AAEAN,IAAAA,KAAK,CAACgB,SAAN,CAAgB,YAAM;AAClB,UAAID,UAAJ,EAAgB;AACZF,QAAAA,MAAM;AACT;AACJ,KAJD,EAIG,CAACE,UAAD,EAAaF,MAAb,CAJH;AAMA,WACI,oBAAC,gBAAD;AAAkB,MAAA,eAAe,MAAjC;AAAkC,MAAA,UAAU;AAA5C,OAAiDJ,IAAjD;AAAuD,MAAA,OAAO,EAAEM,UAAhE;AAA4E,MAAA,SAAS,EAAEH;AAAvF,QACI;AACI,MAAA,SAAS,EAAC,4BADd;AAEI,wBAAe,eAFnB;AAGI,qBAAY,0BAHhB;AAII,MAAA,cAAc,EAAEE,gBAJpB;AAKI,MAAA,iBAAiB,EAAEA,gBALvB;AAMI,MAAA,QAAQ,EAAE,CAAC;AANf,OAQKT,QARL,CADJ,CADJ;AAcH,GA1CD;;AA4CAD,EAAAA,gBAAgB,CAACa,WAAjB,sCAA2Dd,gBAAgB,CAACc,WAAjB,IACvDd,gBAAgB,CAACe,IADsC,IAEvD,WAFJ;AAIA,SAAOd,gBAAP;AACH;;AAED,eAAeF,wBAAf","sourcesContent":["// @flow\nimport * as React from 'react';\n\nimport { useOnClickBody } from '../utils';\nimport { type TargetedComponentProps } from '../types';\n\nfunction withTargetedClickThrough<Config>(\n    WrappedComponent: React.ComponentType<Config>,\n): React.ComponentType<{|\n    ...Config,\n    ...$Exact<TargetedComponentProps>,\n|}> {\n    const WrapperComponent = ({\n        children,\n        closeOnClickOutside,\n        shouldTarget,\n        useTargetingApi,\n        ...rest\n    }: {|\n        ...Config,\n        ...$Exact<TargetedComponentProps>,\n    |}) => {\n        const { canShow, onComplete, onClose, onShow } = useTargetingApi();\n\n        const handleOnComplete = () => {\n            if (shouldTarget && canShow) {\n                onComplete();\n            }\n        };\n\n        const shouldShow = shouldTarget && canShow;\n\n        useOnClickBody(onClose, !!(shouldShow && closeOnClickOutside));\n\n        React.useEffect(() => {\n            if (shouldShow) {\n                onShow();\n            }\n        }, [shouldShow, onShow]);\n\n        return (\n            <WrappedComponent showCloseButton stopBubble {...rest} isShown={shouldShow} onDismiss={onClose}>\n                <span\n                    className=\"bdl-targeted-click-through\"\n                    data-targeting=\"click-through\"\n                    data-testid=\"with-targeted-click-span\"\n                    onClickCapture={handleOnComplete}\n                    onKeyPressCapture={handleOnComplete}\n                    tabIndex={-1}\n                >\n                    {children}\n                </span>\n            </WrappedComponent>\n        );\n    };\n\n    WrapperComponent.displayName = `withTargetedClickThrough(${WrappedComponent.displayName ||\n        WrappedComponent.name ||\n        'Component'})`;\n\n    return WrapperComponent;\n}\n\nexport default withTargetedClickThrough;\n"],"file":"withTargetedClickThrough.js"}