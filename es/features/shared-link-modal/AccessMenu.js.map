{"version":3,"sources":["../../../src/features/shared-link-modal/AccessMenu.js"],"names":["React","Component","classNames","FormattedMessage","PlainButton","DropdownMenu","MenuToggle","Menu","MenuSeparator","MenuSectionHeader","SelectMenuItem","messages","PEOPLE_WITH_LINK","PEOPLE_IN_COMPANY","PEOPLE_IN_ITEM","accessLevelPropType","allowedAccessLevelsPropType","AccessLabel","RemoveLinkConfirmModal","accessLevels","AccessMenu","isConfirmModalOpen","setState","props","accessLevel","allowedAccessLevels","canRemoveLink","changeAccessLevel","enterpriseName","itemType","removeLinkButtonProps","accessTypeTitle","map","level","openConfirmModal","removeLink","accessDropdownMenuProps","accessMenuButtonProps","submitting","state","renderMenu","closeConfirmModal"],"mappings":"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","sourcesContent":["/* @flow */\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\n\nimport PlainButton from '../../components/plain-button';\nimport DropdownMenu, { MenuToggle } from '../../components/dropdown-menu';\nimport { Menu, MenuSeparator, MenuSectionHeader, SelectMenuItem } from '../../components/menu';\n\nimport messages from './messages';\nimport { PEOPLE_WITH_LINK, PEOPLE_IN_COMPANY, PEOPLE_IN_ITEM } from './constants';\nimport { accessLevelPropType, allowedAccessLevelsPropType } from './propTypes';\nimport AccessLabel from './AccessLabel';\nimport RemoveLinkConfirmModal from './RemoveLinkConfirmModal';\n\nconst accessLevels = [PEOPLE_WITH_LINK, PEOPLE_IN_COMPANY, PEOPLE_IN_ITEM];\n\ntype Props = {\n    accessDropdownMenuProps?: Object,\n    accessLevel: accessLevelPropType,\n    accessMenuButtonProps?: Object,\n    allowedAccessLevels: allowedAccessLevelsPropType,\n    canRemoveLink?: boolean,\n    changeAccessLevel: Function,\n    enterpriseName?: string,\n    itemType: string,\n    removeLink: Function,\n    removeLinkButtonProps?: Object,\n    submitting?: boolean,\n};\n\ntype State = {\n    isConfirmModalOpen: boolean,\n};\n\nclass AccessMenu extends Component<Props, State> {\n    static defaultProps = {\n        accessDropdownMenuProps: {},\n        accessMenuButtonProps: {},\n        removeLinkButtonProps: {},\n    };\n\n    state = {\n        isConfirmModalOpen: false,\n    };\n\n    openConfirmModal = () => {\n        this.setState({ isConfirmModalOpen: true });\n    };\n\n    closeConfirmModal = () => {\n        this.setState({ isConfirmModalOpen: false });\n    };\n\n    renderMenu() {\n        const {\n            accessLevel,\n            allowedAccessLevels,\n            canRemoveLink,\n            changeAccessLevel,\n            enterpriseName,\n            itemType,\n            removeLinkButtonProps,\n        } = this.props;\n\n        return (\n            <Menu className=\"share-access-menu\">\n                <MenuSectionHeader>\n                    <FormattedMessage {...messages.accessTypeTitle} />\n                </MenuSectionHeader>\n                {accessLevels.map(level =>\n                    allowedAccessLevels[level] ? (\n                        <SelectMenuItem\n                            key={level}\n                            isSelected={level === accessLevel}\n                            onClick={() => changeAccessLevel(level)}\n                        >\n                            <AccessLabel accessLevel={level} enterpriseName={enterpriseName} itemType={itemType} />\n                        </SelectMenuItem>\n                    ) : null,\n                )}\n                {canRemoveLink && <MenuSeparator />}\n                {canRemoveLink && (\n                    <SelectMenuItem onClick={this.openConfirmModal} {...removeLinkButtonProps}>\n                        <FormattedMessage {...messages.removeLink} />\n                    </SelectMenuItem>\n                )}\n            </Menu>\n        );\n    }\n\n    render() {\n        const {\n            accessDropdownMenuProps,\n            accessLevel,\n            accessMenuButtonProps,\n            enterpriseName,\n            itemType,\n            removeLink,\n            submitting,\n        } = this.props;\n        const { isConfirmModalOpen } = this.state;\n\n        return (\n            <span>\n                <DropdownMenu {...accessDropdownMenuProps}>\n                    <PlainButton\n                        className={classNames('lnk', {\n                            'is-disabled bdl-is-disabled': submitting,\n                        })}\n                        disabled={submitting}\n                        {...accessMenuButtonProps}\n                    >\n                        <MenuToggle>\n                            <AccessLabel\n                                accessLevel={accessLevel}\n                                enterpriseName={enterpriseName}\n                                itemType={itemType}\n                            />\n                        </MenuToggle>\n                    </PlainButton>\n                    {this.renderMenu()}\n                </DropdownMenu>\n                <RemoveLinkConfirmModal\n                    isOpen={isConfirmModalOpen}\n                    onRequestClose={this.closeConfirmModal}\n                    removeLink={removeLink}\n                    submitting={submitting}\n                />\n            </span>\n        );\n    }\n}\n\nexport default AccessMenu;\n"],"file":"AccessMenu.js"}