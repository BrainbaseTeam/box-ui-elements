{"version":3,"sources":["../../../../../src/features/message-center/components/message/Message.js"],"names":["React","PreviewTitleBodyTags","PreviewTitleBodyTagsButton","TitleBodyTags","TitleBodyTagsButton","PREVIEW_TITLE_BODY_TAGS","PREVIEW_TITLE_BODY_TAGS_BUTTON","TITLE_BODY_TAGS","TITLE_BODY_TAGS_BUTTON","Message","activateDate","apiHost","contentPreviewProps","getToken","templateName","templateParams","body","button1","fileUpload","tags","title","name","date","Date"],"mappings":"AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAIA,SAASC,oBAAT,EAA+BC,0BAA/B,EAA2DC,aAA3D,EAA0EC,mBAA1E,QAAqG,cAArG;AACA,SACIC,uBADJ,EAEIC,8BAFJ,EAGIC,eAHJ,EAIIC,sBAJJ,QAKO,iBALP;;AAcA,SAASC,OAAT,OAQU;AAAA,MAPNC,YAOM,QAPNA,YAOM;AAAA,MANNC,OAMM,QANNA,OAMM;AAAA,MALNC,mBAKM,QALNA,mBAKM;AAAA,MAJNC,QAIM,QAJNA,QAIM;AAAA,MAHNC,YAGM,QAHNA,YAGM;AAAA,iCAFNC,cAEM;AAAA,MAFYC,IAEZ,uBAFYA,IAEZ;AAAA,MAFkBC,OAElB,uBAFkBA,OAElB;AAAA,MAF2BC,UAE3B,uBAF2BA,UAE3B;AAAA,MAFuCC,IAEvC,uBAFuCA,IAEvC;AAAA,MAF6CC,KAE7C,uBAF6CA,KAE7C;AAAA,MADNC,IACM,QADNA,IACM;AACN,MAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASb,YAAY,GAAG,IAAxB,CAAb;;AACA,MAAII,YAAY,KAAKT,uBAAjB,IAA4Ca,UAAhD,EAA4D;AACxD,WACI,oBAAC,oBAAD;AACI,MAAA,OAAO,EAAEP,OADb;AAEI,MAAA,IAAI,EAAEK,IAFV;AAGI,MAAA,mBAAmB,EAAEJ,mBAHzB;AAII,MAAA,IAAI,EAAEU,IAJV;AAKI,MAAA,UAAU,EAAEJ,UALhB;AAMI,MAAA,QAAQ,EAAEL,QANd;AAOI,MAAA,IAAI,EAAEM,IAPV;AAQI,MAAA,KAAK,EAAEC,KARX;AASI,MAAA,IAAI,EAAEC;AATV,MADJ;AAaH;;AACD,MAAIP,YAAY,KAAKR,8BAAjB,IAAmDW,OAAnD,IAA8DC,UAAlE,EAA8E;AAC1E,WACI,oBAAC,0BAAD;AACI,MAAA,OAAO,EAAEP,OADb;AAEI,MAAA,IAAI,EAAEK,IAFV;AAGI,MAAA,OAAO,EAAEC,OAHb;AAII,MAAA,mBAAmB,EAAEL,mBAJzB;AAKI,MAAA,IAAI,EAAEU,IALV;AAMI,MAAA,UAAU,EAAEJ,UANhB;AAOI,MAAA,QAAQ,EAAEL,QAPd;AAQI,MAAA,IAAI,EAAEM,IARV;AASI,MAAA,KAAK,EAAEC,KATX;AAUI,MAAA,IAAI,EAAEC;AAVV,MADJ;AAcH;;AACD,MAAIP,YAAY,KAAKP,eAArB,EAAsC;AAClC,WAAO,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAES,IAArB;AAA2B,MAAA,IAAI,EAAEM,IAAjC;AAAuC,MAAA,IAAI,EAAEH,IAA7C;AAAmD,MAAA,KAAK,EAAEC,KAA1D;AAAiE,MAAA,IAAI,EAAEC;AAAvE,MAAP;AACH;;AACD,MAAIP,YAAY,KAAKN,sBAAjB,IAA2CS,OAA/C,EAAwD;AACpD,WAAO,oBAAC,mBAAD;AAAqB,MAAA,IAAI,EAAED,IAA3B;AAAiC,MAAA,OAAO,EAAEC,OAA1C;AAAmD,MAAA,IAAI,EAAEK,IAAzD;AAA+D,MAAA,IAAI,EAAEH,IAArE;AAA2E,MAAA,KAAK,EAAEC,KAAlF;AAAyF,MAAA,IAAI,EAAEC;AAA/F,MAAP;AACH;;AAED,SAAO,IAAP;AACH;;AAED,eAAeZ,OAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport type { Token } from '../../../../common/types/core';\nimport type { EligibleMessageCenterMessage } from '../../types';\nimport type { ContentPreviewProps } from '../../../message-preview-content/MessagePreviewContent';\nimport { PreviewTitleBodyTags, PreviewTitleBodyTagsButton, TitleBodyTags, TitleBodyTagsButton } from '../templates';\nimport {\n    PREVIEW_TITLE_BODY_TAGS,\n    PREVIEW_TITLE_BODY_TAGS_BUTTON,\n    TITLE_BODY_TAGS,\n    TITLE_BODY_TAGS_BUTTON,\n} from '../../constants';\n\ntype Props = {|\n    ...EligibleMessageCenterMessage,\n    apiHost: string,\n    contentPreviewProps?: ContentPreviewProps,\n    getToken: (fileId: string) => Promise<Token>,\n|};\n\nfunction Message({\n    activateDate,\n    apiHost,\n    contentPreviewProps,\n    getToken,\n    templateName,\n    templateParams: { body, button1, fileUpload, tags, title },\n    name,\n}: Props) {\n    const date = new Date(activateDate * 1000);\n    if (templateName === PREVIEW_TITLE_BODY_TAGS && fileUpload) {\n        return (\n            <PreviewTitleBodyTags\n                apiHost={apiHost}\n                body={body}\n                contentPreviewProps={contentPreviewProps}\n                date={date}\n                fileUpload={fileUpload}\n                getToken={getToken}\n                tags={tags}\n                title={title}\n                name={name}\n            />\n        );\n    }\n    if (templateName === PREVIEW_TITLE_BODY_TAGS_BUTTON && button1 && fileUpload) {\n        return (\n            <PreviewTitleBodyTagsButton\n                apiHost={apiHost}\n                body={body}\n                button1={button1}\n                contentPreviewProps={contentPreviewProps}\n                date={date}\n                fileUpload={fileUpload}\n                getToken={getToken}\n                tags={tags}\n                title={title}\n                name={name}\n            />\n        );\n    }\n    if (templateName === TITLE_BODY_TAGS) {\n        return <TitleBodyTags body={body} date={date} tags={tags} title={title} name={name} />;\n    }\n    if (templateName === TITLE_BODY_TAGS_BUTTON && button1) {\n        return <TitleBodyTagsButton body={body} button1={button1} date={date} tags={tags} title={title} name={name} />;\n    }\n\n    return null;\n}\n\nexport default Message;\n"],"file":"Message.js"}