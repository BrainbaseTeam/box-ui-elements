{"version":3,"sources":["../../../src/features/metadata-instance-editor/MetadataInstanceEditor.js"],"names":["React","ScrollWrapper","Header","Instances","EmptyContent","MetadataInstanceEditor","canAdd","isCascadingPolicyApplicable","isDropdownBusy","editors","onModification","onRemove","onAdd","onSave","selectedTemplateKey","templates","title","length"],"mappings":"AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,aAAP,MAA0B,iCAA1B;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,+BAAP;;AAsBA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB;AAAA,MAC3BC,MAD2B,QAC3BA,MAD2B;AAAA,mCAE3BC,2BAF2B;AAAA,MAE3BA,2BAF2B,sCAEG,KAFH;AAAA,MAG3BC,cAH2B,QAG3BA,cAH2B;AAAA,0BAI3BC,OAJ2B;AAAA,MAI3BA,OAJ2B,6BAIjB,EAJiB;AAAA,MAK3BC,cAL2B,QAK3BA,cAL2B;AAAA,MAM3BC,QAN2B,QAM3BA,QAN2B;AAAA,MAO3BC,KAP2B,QAO3BA,KAP2B;AAAA,MAQ3BC,MAR2B,QAQ3BA,MAR2B;AAAA,MAS3BC,mBAT2B,QAS3BA,mBAT2B;AAAA,MAU3BC,SAV2B,QAU3BA,SAV2B;AAAA,MAW3BC,KAX2B,QAW3BA,KAX2B;AAAA,sBAa3B;AAAK,IAAA,SAAS,EAAC;AAAf,kBACI,oBAAC,MAAD;AACI,IAAA,MAAM,EAAEV,MADZ;AAEI,IAAA,OAAO,EAAEG,OAFb;AAGI,IAAA,cAAc,EAAED,cAHpB;AAII,IAAA,KAAK,EAAEI,KAJX;AAKI,IAAA,SAAS,EAAEG,SALf;AAMI,IAAA,KAAK,EAAEC;AANX,IADJ,EASKP,OAAO,CAACQ,MAAR,KAAmB,CAAnB,gBACG,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAEX;AAAtB,IADH,gBAGG,oBAAC,aAAD,qBACI,oBAAC,SAAD;AACI,IAAA,OAAO,EAAEG,OADb;AAEI,IAAA,2BAA2B,EAAEF,2BAFjC;AAGI,IAAA,cAAc,EAAEG,cAHpB;AAII,IAAA,QAAQ,EAAEC,QAJd;AAKI,IAAA,MAAM,EAAEE,MALZ;AAMI,IAAA,mBAAmB,EAAEC;AANzB,IADJ,CAZR,CAb2B;AAAA,CAA/B;;AAuCA,eAAeT,sBAAf","sourcesContent":["// @flow\nimport * as React from 'react';\n\nimport ScrollWrapper from '../../components/scroll-wrapper';\n\nimport Header from './Header';\nimport Instances from './Instances';\nimport EmptyContent from './EmptyContent';\nimport './MetadataInstanceEditor.scss';\n\ntype Props = {\n    canAdd: boolean,\n    editors?: Array<MetadataEditor>,\n    isCascadingPolicyApplicable?: boolean,\n    isDropdownBusy?: boolean,\n    onAdd?: (template: MetadataTemplate) => void,\n    onModification?: (id: string, isDirty: boolean) => void,\n    onRemove?: (id: string) => void,\n    onSave?: (\n        id: string,\n        data: JSONPatchOperations,\n        cascadingPolicy?: MetadataCascadingPolicyData,\n        rawData: Object,\n    ) => void,\n    selectedTemplateKey?: string,\n    templateFilters?: Array<string> | string,\n    templates: Array<MetadataTemplate>,\n    title?: React.Node,\n};\n\nconst MetadataInstanceEditor = ({\n    canAdd,\n    isCascadingPolicyApplicable = false,\n    isDropdownBusy,\n    editors = [],\n    onModification,\n    onRemove,\n    onAdd,\n    onSave,\n    selectedTemplateKey,\n    templates,\n    title,\n}: Props) => (\n    <div className=\"metadata-instance-editor\">\n        <Header\n            canAdd={canAdd}\n            editors={editors}\n            isDropdownBusy={isDropdownBusy}\n            onAdd={onAdd}\n            templates={templates}\n            title={title}\n        />\n        {editors.length === 0 ? (\n            <EmptyContent canAdd={canAdd} />\n        ) : (\n            <ScrollWrapper>\n                <Instances\n                    editors={editors}\n                    isCascadingPolicyApplicable={isCascadingPolicyApplicable}\n                    onModification={onModification}\n                    onRemove={onRemove}\n                    onSave={onSave}\n                    selectedTemplateKey={selectedTemplateKey}\n                />\n            </ScrollWrapper>\n        )}\n    </div>\n);\n\nexport default MetadataInstanceEditor;\n"],"file":"MetadataInstanceEditor.js"}