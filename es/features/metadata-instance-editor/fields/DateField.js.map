{"version":3,"sources":["../../../../src/features/metadata-instance-editor/fields/DateField.js"],"names":["React","injectIntl","DatePicker","convertISOStringToUTCDate","messages","DateField","dataKey","dataValue","displayName","description","intl","onChange","onRemove","day","month","year","date","isoDate","formatMessage","metadataFieldSetDate","undefined","DateFieldBase"],"mappings":"AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,YAA3B;AAEA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,SAASC,yBAAT,QAA0C,yBAA1C;AAEA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAO,kBAAP;;AAYA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,MAAGC,OAAH,QAAGA,OAAH;AAAA,MAAYC,SAAZ,QAAYA,SAAZ;AAAA,MAAuBC,WAAvB,QAAuBA,WAAvB;AAAA,MAAoCC,WAApC,QAAoCA,WAApC;AAAA,MAAiDC,IAAjD,QAAiDA,IAAjD;AAAA,MAAuDC,SAAvD,QAAuDA,QAAvD;AAAA,MAAiEC,QAAjE,QAAiEA,QAAjE;AAAA,sBACd,oBAAC,UAAD;AACI,IAAA,SAAS,EAAC,qCADd;AAEI,IAAA,UAAU,EAAC,cAFf;AAGI,IAAA,WAAW,EAAEH,WAHjB;AAII,IAAA,aAAa,EAAE;AACXI,MAAAA,GAAG,EAAE,SADM;AAEXC,MAAAA,KAAK,EAAE,MAFI;AAGXC,MAAAA,IAAI,EAAE;AAHK,KAJnB;AASI,IAAA,iBAAiB,MATrB;AAUI,IAAA,KAAK,EAAEP,WAVX;AAWI,IAAA,QAAQ,EAAE,kBAACQ,IAAD,EAAaC,OAAb,EAAiC;AACvC,UAAIA,OAAJ,EAAa;AACTN,QAAAA,SAAQ,CAACL,OAAD,EAAUW,OAAV,CAAR;AACH,OAFD,MAEO;AACHL,QAAAA,QAAQ,CAACN,OAAD,CAAR;AACH;AACJ,KAjBL;AAkBI,IAAA,WAAW,EAAEI,IAAI,CAACQ,aAAL,CAAmBd,QAAQ,CAACe,oBAA5B,CAlBjB;AAmBI,IAAA,KAAK,EAAE,OAAOZ,SAAP,KAAqB,QAArB,GAAgCJ,yBAAyB,CAACI,SAAD,CAAzD,GAAuEa;AAnBlF,IADc;AAAA,CAAlB;;AAwBA,SAASf,SAAS,IAAIgB,aAAtB;AACA,eAAepB,UAAU,CAACI,SAAD,CAAzB","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\n\nimport DatePicker from '../../../components/date-picker';\nimport { convertISOStringToUTCDate } from '../../../utils/datetime';\n\nimport messages from '../messages';\nimport './DateField.scss';\n\ntype Props = {\n    dataKey: string,\n    dataValue?: MetadataFieldValue,\n    description?: string,\n    displayName: string,\n    intl: any,\n    onChange: (key: string, value: MetadataFieldValue) => void,\n    onRemove: (key: string) => void,\n};\n\nconst DateField = ({ dataKey, dataValue, displayName, description, intl, onChange, onRemove }: Props) => (\n    <DatePicker\n        className=\"metadata-instance-editor-field-date\"\n        dateFormat=\"utcISOString\"\n        description={description}\n        displayFormat={{\n            day: 'numeric',\n            month: 'long',\n            year: 'numeric',\n        }}\n        hideOptionalLabel\n        label={displayName}\n        onChange={(date: Date, isoDate: string) => {\n            if (isoDate) {\n                onChange(dataKey, isoDate);\n            } else {\n                onRemove(dataKey);\n            }\n        }}\n        placeholder={intl.formatMessage(messages.metadataFieldSetDate)}\n        value={typeof dataValue === 'string' ? convertISOStringToUTCDate(dataValue) : undefined}\n    />\n);\n\nexport { DateField as DateFieldBase };\nexport default injectIntl(DateField);\n"],"file":"DateField.js"}