{"version":3,"sources":["../../../../src/features/metadata-instance-editor/fields/MultiSelectField.js"],"names":["React","FormattedMessage","Label","MultiSelect","messages","MultiSelectField","dataKey","dataValue","displayName","description","onChange","onRemove","options","placeholder","metadataFieldMultiSelectValue","selectedOptions","length","map","value","option","displayText","key","MultiSelectFieldBase"],"mappings":"AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,WAAP,MAAwB,mDAAxB;AAGA,OAAOC,QAAP,MAAqB,aAArB;AAEA,OAAO,yBAAP;;AAYA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAQZ;AAAA,MAPTC,OAOS,QAPTA,OAOS;AAAA,MANTC,SAMS,QANTA,SAMS;AAAA,MALTC,WAKS,QALTA,WAKS;AAAA,MAJTC,WAIS,QAJTA,WAIS;AAAA,MAHTC,SAGS,QAHTA,QAGS;AAAA,MAFTC,QAES,QAFTA,QAES;AAAA,0BADTC,OACS;AAAA,MADTA,OACS,6BADC,EACD;AACT,MAAMC,WAAW,gBAAG,oBAAC,gBAAD,EAAsBT,QAAQ,CAACU,6BAA/B,CAApB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC;AAAf,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEN;AAAb,KACK,CAAC,CAACC,WAAF,iBAAiB;AAAG,IAAA,SAAS,EAAC;AAAb,KAAiEA,WAAjE,CADtB,eAEI,oBAAC,WAAD;AACI,IAAA,YAAY,MADhB;AAEI,IAAA,QAAQ,EAAE,kBAACM,eAAD,EAA8C;AACpD,UAAIA,eAAe,CAACC,MAApB,EAA4B;AACxBN,QAAAA,SAAQ,CAACJ,OAAD,EAAUS,eAAe,CAACE,GAAhB,CAAoB;AAAA,cAAGC,KAAH,SAAGA,KAAH;AAAA,iBAAeA,KAAf;AAAA,SAApB,CAAV,CAAR;AACH,OAFD,MAEO;AACHP,QAAAA,QAAQ,CAACL,OAAD,CAAR;AACH;AACJ,KARL;AASI,IAAA,OAAO,EAAEM,OAAO,CAACK,GAAR,CAAY,UAAAE,MAAM;AAAA,aAAK;AAC5BC,QAAAA,WAAW,EAAED,MAAM,CAACE,GADQ;AAE5BH,QAAAA,KAAK,EAAEC,MAAM,CAACE;AAFc,OAAL;AAAA,KAAlB,CATb;AAaI,IAAA,WAAW,EAAER,WAbjB;AAcI,IAAA,cAAc,EAAEN;AAdpB,IAFJ,CADJ,CADJ;AAuBH,CAlCD;;AAoCA,SAASF,gBAAgB,IAAIiB,oBAA7B;AACA,eAAejB,gBAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Label from '../../../components/label/Label';\nimport MultiSelect from '../../../components/select-field/MultiSelectField';\nimport type { SelectOptionProp } from '../../../components/select-field/props';\n\nimport messages from '../messages';\n\nimport './MultiSelectField.scss';\n\ntype Props = {\n    dataKey: string,\n    dataValue?: MetadataFieldValue,\n    description?: string,\n    displayName: string,\n    onChange: (key: string, value: MetadataFieldValue) => void,\n    onRemove: (key: string) => void,\n    options?: Array<MetadataTemplateFieldOption>,\n};\n\nconst MultiSelectField = ({\n    dataKey,\n    dataValue,\n    displayName,\n    description,\n    onChange,\n    onRemove,\n    options = [],\n}: Props) => {\n    const placeholder = <FormattedMessage {...messages.metadataFieldMultiSelectValue} />;\n\n    return (\n        <div className=\"metadata-instance-editor-field-multi-select\">\n            <Label text={displayName}>\n                {!!description && <i className=\"metadata-instance-editor-field-multi-select-desc\">{description}</i>}\n                <MultiSelect\n                    isScrollable\n                    onChange={(selectedOptions: Array<SelectOptionProp>) => {\n                        if (selectedOptions.length) {\n                            onChange(dataKey, selectedOptions.map(({ value }) => value));\n                        } else {\n                            onRemove(dataKey);\n                        }\n                    }}\n                    options={options.map(option => ({\n                        displayText: option.key,\n                        value: option.key,\n                    }))}\n                    placeholder={placeholder}\n                    selectedValues={dataValue}\n                />\n            </Label>\n        </div>\n    );\n};\n\nexport { MultiSelectField as MultiSelectFieldBase };\nexport default MultiSelectField;\n"],"file":"MultiSelectField.js"}