{"version":3,"sources":["../../../../src/features/metadata-instance-editor/fields/ReadOnlyField.js"],"names":["React","FormattedMessage","FormattedDate","convertISOStringToUTCDate","FIELD_TYPE_DATE","messages","ReadOnlyField","dataValue","description","displayName","type","value","metadataFieldNoValue","Array","isArray","join"],"mappings":";;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,EAA2BC,aAA3B,QAAgD,YAAhD;AAEA,SAASC,yBAAT,QAA0C,yBAA1C;AAEA,SAASC,eAAT,QAAgC,cAAhC;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAO,sBAAP;;AASA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAA0D;AAAA,MAAvDC,SAAuD,QAAvDA,SAAuD;AAAA,MAA5CC,WAA4C,QAA5CA,WAA4C;AAAA,MAA/BC,WAA+B,QAA/BA,WAA+B;AAAA,MAAlBC,IAAkB,QAAlBA,IAAkB;AAC5E,MAAIC,KAAK,gBAAG,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAC;AAA1B,KAAkCN,QAAQ,CAACO,oBAA3C,EAAZ;;AAEA,MAAIL,SAAS,IAAI,OAAOA,SAAP,KAAqB,QAAtC,EAAgD;AAC5C,QAAI,OAAOA,SAAP,KAAqB,QAArB,IAAiCG,IAAI,KAAKN,eAA9C,EAA+D;AAC3DO,MAAAA,KAAK,gBACD,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAC,SAAnB;AAA6B,QAAA,KAAK,EAAC,MAAnC;AAA0C,QAAA,KAAK,EAAER,yBAAyB,CAACI,SAAD,CAA1E;AAAuF,QAAA,IAAI,EAAC;AAA5F,QADJ;AAGH,KAJD,MAIO,IAAIM,KAAK,CAACC,OAAN,CAAcP,SAAd,CAAJ,EAA8B;AACjCI,MAAAA,KAAK,GAAGJ,SAAS,CAACQ,IAAV,CAAe,IAAf,CAAR;AACH,KAFM,MAEA;AACHJ,MAAAA,KAAK,GAAGJ,SAAR;AACH;AACJ;;AAED,sBACI;AAAI,IAAA,SAAS,EAAC;AAAd,kBACI,gCAAKE,WAAL,CADJ,EAEK,CAAC,CAACD,WAAF,iBAAiB;AAAG,IAAA,SAAS,EAAC;AAAb,KAA8DA,WAA9D,CAFtB,eAGI,gCAAKG,KAAL,CAHJ,CADJ;AAOH,CAtBD;;AAwBA,eAAeL,aAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage, FormattedDate } from 'react-intl';\n\nimport { convertISOStringToUTCDate } from '../../../utils/datetime';\n\nimport { FIELD_TYPE_DATE } from '../constants';\nimport messages from '../messages';\nimport './ReadOnlyField.scss';\n\ntype Props = {\n    dataValue?: MetadataFieldValue,\n    description?: string,\n    displayName: string,\n    type: MetadataFieldType,\n};\n\nconst ReadOnlyField = ({ dataValue, description, displayName, type }: Props) => {\n    let value = <FormattedMessage tagName=\"i\" {...messages.metadataFieldNoValue} />;\n\n    if (dataValue || typeof dataValue === 'number') {\n        if (typeof dataValue === 'string' && type === FIELD_TYPE_DATE) {\n            value = (\n                <FormattedDate day=\"numeric\" month=\"long\" value={convertISOStringToUTCDate(dataValue)} year=\"numeric\" />\n            );\n        } else if (Array.isArray(dataValue)) {\n            value = dataValue.join(', ');\n        } else {\n            value = dataValue;\n        }\n    }\n\n    return (\n        <dl className=\"metadata-instance-editor-field-read-only\">\n            <dt>{displayName}</dt>\n            {!!description && <i className=\"metadata-instance-editor-field-read-only-desc\">{description}</i>}\n            <dd>{value}</dd>\n        </dl>\n    );\n};\n\nexport default ReadOnlyField;\n"],"file":"ReadOnlyField.js"}