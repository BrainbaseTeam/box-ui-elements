{"version":3,"sources":["../../../../src/features/metadata-instance-editor/fields/EnumField.js"],"names":["React","injectIntl","Label","SingleSelectField","messages","EnumField","dataKey","dataValue","displayName","description","intl","onChange","onRemove","options","selectOptions","map","option","displayText","key","value","isSelectable","defaultValue","formatMessage","metadataFieldSelectValue","unshift","Array","isArray","join","EnumFieldBase"],"mappings":"AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,YAA3B;AAEA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,iBAAP,MAA8B,oDAA9B;AAEA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAO,kBAAP;;AAmBA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAqG;AAAA,MAAlGC,OAAkG,QAAlGA,OAAkG;AAAA,MAAzFC,SAAyF,QAAzFA,SAAyF;AAAA,MAA9EC,WAA8E,QAA9EA,WAA8E;AAAA,MAAjEC,WAAiE,QAAjEA,WAAiE;AAAA,MAApDC,IAAoD,QAApDA,IAAoD;AAAA,MAA9CC,SAA8C,QAA9CA,QAA8C;AAAA,MAApCC,QAAoC,QAApCA,QAAoC;AAAA,0BAA1BC,OAA0B;AAAA,MAA1BA,OAA0B,6BAAhB,EAAgB;AACnH,MAAMC,aAAa,GAAGD,OAAO,CAACE,GAAR,CAAY,UAAAC,MAAM;AAAA,WAAK;AACzCC,MAAAA,WAAW,EAAED,MAAM,CAACE,GADqB;AAEzCC,MAAAA,KAAK,EAAEH,MAAM,CAACE,GAF2B;AAGzCE,MAAAA,YAAY,EAAE;AAH2B,KAAL;AAAA,GAAlB,CAAtB;AAMA,MAAMC,YAAY,GAAGX,IAAI,CAACY,aAAL,CAAmBlB,QAAQ,CAACmB,wBAA5B,CAArB;AAEAT,EAAAA,aAAa,CAACU,OAAd,CAAsB;AAClBP,IAAAA,WAAW,EAAEI,YADK;AAElBF,IAAAA,KAAK,EAAEE,YAFW;AAGlBD,IAAAA,YAAY,EAAE;AAHI,GAAtB;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC;AAAf,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEZ;AAAb,KACK,CAAC,CAACC,WAAF,iBAAiB;AAAG,IAAA,SAAS,EAAC;AAAb,KAAyDA,WAAzD,CADtB,eAEI,oBAAC,iBAAD;AACI,IAAA,YAAY,MADhB;AAEI,IAAA,QAAQ,EAAE,kBAACO,MAAD,EAAoB;AAC1B,UAAIA,MAAM,CAACI,YAAX,EAAyB;AACrBT,QAAAA,SAAQ,CAACL,OAAD,EAAUU,MAAM,CAACG,KAAjB,CAAR;AACH,OAFD,MAEO,IAAIP,QAAJ,EAAc;AACjBA,QAAAA,QAAQ,CAACN,OAAD,CAAR;AACH;AACJ,KARL;AASI,IAAA,OAAO,EAAEQ,aATb;AAUI,IAAA,aAAa,EACT;AACAW,IAAAA,KAAK,CAACC,OAAN,CAAcnB,SAAd,IAA2BA,SAAS,CAACoB,IAAV,CAAe,IAAf,CAA3B,GAAkDpB,SAAS,IAAIc;AAZvE,IAFJ,CADJ,CADJ;AAsBH,CArCD;;AAuCA,SAAShB,SAAS,IAAIuB,aAAtB;AACA,eAAe3B,UAAU,CAACI,SAAD,CAAzB","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\n\nimport Label from '../../../components/label/Label';\nimport SingleSelectField from '../../../components/select-field/SingleSelectField';\n\nimport messages from '../messages';\nimport './EnumField.scss';\n\ntype Option = {\n    displayText: string,\n    isSelectable: boolean,\n    value: string,\n};\n\ntype Props = {\n    dataKey: string,\n    dataValue?: MetadataFieldValue,\n    description?: string,\n    displayName: string,\n    intl: any,\n    onChange: (key: string, value: MetadataFieldValue) => void,\n    onRemove: (key: string) => void,\n    options?: Array<MetadataTemplateFieldOption>,\n};\n\nconst EnumField = ({ dataKey, dataValue, displayName, description, intl, onChange, onRemove, options = [] }: Props) => {\n    const selectOptions = options.map(option => ({\n        displayText: option.key,\n        value: option.key,\n        isSelectable: true,\n    }));\n\n    const defaultValue = intl.formatMessage(messages.metadataFieldSelectValue);\n\n    selectOptions.unshift({\n        displayText: defaultValue,\n        value: defaultValue,\n        isSelectable: false,\n    });\n\n    return (\n        <div className=\"metadata-instance-editor-field-enum\">\n            <Label text={displayName}>\n                {!!description && <i className=\"metadata-instance-editor-field-enum-desc\">{description}</i>}\n                <SingleSelectField\n                    isScrollable\n                    onChange={(option: Option) => {\n                        if (option.isSelectable) {\n                            onChange(dataKey, option.value);\n                        } else if (onRemove) {\n                            onRemove(dataKey);\n                        }\n                    }}\n                    options={selectOptions}\n                    selectedValue={\n                        // Conditional to make flow happy, dataValue should never be an array\n                        Array.isArray(dataValue) ? dataValue.join(', ') : dataValue || defaultValue\n                    }\n                />\n            </Label>\n        </div>\n    );\n};\n\nexport { EnumField as EnumFieldBase };\nexport default injectIntl(EnumField);\n"],"file":"EnumField.js"}