{"version":3,"sources":["../../../src/features/metadata-instance-editor/CascadePolicy.js"],"names":["React","FormattedMessage","Toggle","RadioButton","RadioGroup","Link","IconAlertDefault","messages","COMMUNITY_LINK","CascadePolicy","canEdit","isCascadingEnabled","isCascadingOverwritten","isCustomMetadata","onCascadeToggle","onCascadeModeChange","shouldShowCascadeOptions","readOnlyState","metadataCascadePolicyEnabledInfo","enableCascadePolicy","e","target","checked","applyCascadePolicyText","cascadePolicyLearnMore","cannotApplyCascadePolicyText","cascadePolicyModeQuestion","operationNotImmediate","value","cascadePolicySkipMode","cascadePolicyOverwriteMode"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Toggle from '../../components/toggle';\nimport { RadioButton, RadioGroup } from '../../components/radio';\nimport Link from '../../components/link/Link';\nimport IconAlertDefault from '../../icons/general/IconAlertDefault';\nimport messages from './messages';\nimport './CascadePolicy.scss';\n\nconst COMMUNITY_LINK = 'https://community.box.com/t5/Organizing-and-Tracking-Content/Metadata/ta-p/30765';\n\ntype Props = {\n    canEdit: boolean,\n    isCascadingEnabled: boolean,\n    isCascadingOverwritten: boolean,\n    isCustomMetadata: boolean,\n    onCascadeModeChange: (value: boolean) => void,\n    onCascadeToggle: (value: boolean) => void,\n    shouldShowCascadeOptions: boolean,\n};\n\nconst CascadePolicy = ({\n    canEdit,\n    isCascadingEnabled,\n    isCascadingOverwritten,\n    isCustomMetadata,\n    onCascadeToggle,\n    onCascadeModeChange,\n    shouldShowCascadeOptions,\n}: Props) => {\n    const readOnlyState = isCascadingEnabled ? (\n        <div className=\"metadata-cascade-notice\">\n            <FormattedMessage {...messages.metadataCascadePolicyEnabledInfo} />\n        </div>\n    ) : null;\n\n    return canEdit ? (\n        <>\n            <div className=\"metadata-cascade-editor\">\n                <div className=\"metadata-cascade-enable\">\n                    <div>\n                        <FormattedMessage tagName=\"strong\" {...messages.enableCascadePolicy} />\n                        {!isCustomMetadata && (\n                            <Toggle\n                                className={`metadata-cascade-toggle ${\n                                    isCascadingEnabled ? 'cascade-on' : 'cascade-off'\n                                }`}\n                                isOn={isCascadingEnabled}\n                                label=\"\"\n                                onChange={e => onCascadeToggle(e.target.checked)}\n                            />\n                        )}\n                    </div>\n                    {!isCustomMetadata ? (\n                        <div className=\"cascade-policy-text\">\n                            <FormattedMessage {...messages.applyCascadePolicyText} />\n                            &nbsp;\n                            <Link className=\"cascade-policy-learnmore-link\" href={COMMUNITY_LINK} target=\"_blank\">\n                                <FormattedMessage {...messages.cascadePolicyLearnMore} />\n                            </Link>\n                        </div>\n                    ) : (\n                        <div>\n                            <FormattedMessage {...messages.cannotApplyCascadePolicyText} />\n                        </div>\n                    )}\n                </div>\n            </div>\n            {shouldShowCascadeOptions && (\n                <div className=\"metadata-cascade-editor\">\n                    <div className=\"metadata-cascading-mode\">\n                        <FormattedMessage {...messages.cascadePolicyModeQuestion} />\n\n                        <div className=\"metadata-operation-not-immediate\">\n                            <IconAlertDefault />\n                            <span>\n                                <FormattedMessage {...messages.operationNotImmediate} />\n                            </span>\n                        </div>\n                        <RadioGroup\n                            className=\"metadata-cascading-options\"\n                            onChange={e => onCascadeModeChange(e.target.value === 'overwrite')}\n                            value={isCascadingOverwritten ? 'overwrite' : 'skip'}\n                        >\n                            <RadioButton\n                                label={<FormattedMessage {...messages.cascadePolicySkipMode} />}\n                                value=\"skip\"\n                            />\n                            <RadioButton\n                                label={<FormattedMessage {...messages.cascadePolicyOverwriteMode} />}\n                                value=\"overwrite\"\n                            />\n                        </RadioGroup>\n                    </div>\n                </div>\n            )}\n        </>\n    ) : (\n        readOnlyState\n    );\n};\n\nexport default CascadePolicy;\n"],"file":"CascadePolicy.js"}