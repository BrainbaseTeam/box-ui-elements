{"version":3,"sources":["../../../src/features/collaborator-avatars/CollaboratorListItem.js"],"names":["React","classnames","FormattedMessage","Link","COLLAB_GROUP_TYPE","COLLAB_PENDING_TYPE","messages","CollaboratorAvatarItem","CollaboratorListItem","props","index","trackingProps","usernameProps","emailProps","collaborator","email","expiration","hasCustomAvatar","name","type","imageURL","isExternalCollab","profileURL","translatedRole","userID","userOrGroupNameContent","emailContent","pendingCollabText"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,SAASC,IAAT,QAAqB,uBAArB;AAEA,SAASC,iBAAT,EAA4BC,mBAA5B,QAAuD,aAAvD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,OAAO,6BAAP;;AAQA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,KAAD,EAAkB;AAAA,MACnCC,KADmC,GACVD,KADU,CACnCC,KADmC;AAAA,MAC5BC,aAD4B,GACVF,KADU,CAC5BE,aAD4B;AAAA,MAEnCC,aAFmC,GAELD,aAFK,CAEnCC,aAFmC;AAAA,MAEpBC,UAFoB,GAELF,aAFK,CAEpBE,UAFoB;AAAA,4BAcvCJ,KAAK,CAACK,YAdiC;AAAA,MAIvCC,KAJuC,uBAIvCA,KAJuC;AAAA,MAKvCC,UALuC,uBAKvCA,UALuC;AAAA,MAMvCC,eANuC,uBAMvCA,eANuC;AAAA,MAOvCC,IAPuC,uBAOvCA,IAPuC;AAAA,MAQvCC,IARuC,uBAQvCA,IARuC;AAAA,MASvCC,QATuC,uBASvCA,QATuC;AAAA,MAUvCC,gBAVuC,uBAUvCA,gBAVuC;AAAA,MAWvCC,UAXuC,uBAWvCA,UAXuC;AAAA,MAYvCC,cAZuC,uBAYvCA,cAZuC;AAAA,MAavCC,MAbuC,uBAavCA,MAbuC;AAgB3C,MAAMC,sBAAsB,GACxBN,IAAI,KAAKf,iBAAT,GACI;AAAK,IAAA,SAAS,EAAEH,UAAU,CAAC,MAAD,EAASkB,IAAT;AAA1B,KACI,oBAAC,IAAD;AACI,IAAA,IAAI,EAAEG,UAAU,uBAAgBE,MAAhB,CADpB;AAEI,IAAA,GAAG,EAAC,UAFR;AAGI,IAAA,MAAM,EAAC,QAHX;AAII,IAAA,KAAK,EAAEN;AAJX,KAKQN,aALR,GAOKM,IAPL,CADJ,CADJ,GAaI;AAAK,IAAA,SAAS,EAAEjB,UAAU,CAAC,MAAD,EAASkB,IAAT;AAA1B,KAA2CD,IAA3C,CAdR;AAiBA,MAAMQ,YAAY,GACdP,IAAI,KAAKf,iBAAT,IAA8BW,KAA9B,GACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,mBAAYA,KAAZ,CAAV;AAA+B,IAAA,KAAK,EAAEA;AAAtC,KAAiDF,UAAjD,GACKE,KADL,CADJ,CADJ,GAMI,IAPR;AASA,SACI,gCACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,oBAAC,sBAAD;AACI,IAAA,YAAY,MADhB;AAEI,IAAA,SAAS,EAAEK,QAFf;AAGI,IAAA,KAAK,EAAEL,KAHX;AAII,IAAA,UAAU,EAAEC,UAJhB;AAKI,IAAA,eAAe,EAAEC,eALrB;AAMI,IAAA,EAAE,EAAEP,KANR;AAOI,IAAA,gBAAgB,EAAEW,gBAPtB;AAQI,IAAA,IAAI,EAAEH;AARV,IADJ,EAWI;AAAK,IAAA,SAAS,EAAC;AAAf,KACKO,sBADL,EAEKC,YAFL,CAXJ,CADJ,EAiBI;AAAK,IAAA,SAAS,EAAC;AAAf,KACKP,IAAI,KAAKd,mBAAT,GACG,oBAAC,gBAAD,EAAsBC,QAAQ,CAACqB,iBAA/B,CADH,GAGGJ,cAJR,CAjBJ,CADJ,CADJ;AA6BH,CAvED;;AAyEA,eAAef,oBAAf","sourcesContent":["// @flow\nimport React from 'react';\nimport classnames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Link } from '../../components/link';\n\nimport { COLLAB_GROUP_TYPE, COLLAB_PENDING_TYPE } from './constants';\nimport messages from './messages';\nimport CollaboratorAvatarItem from './CollaboratorAvatarItem';\nimport './CollaboratorListItem.scss';\n\ntype Props = {\n    collaborator: Object,\n    index: number,\n    trackingProps: { emailProps: ?Object, usernameProps: ?Object },\n};\n\nconst CollaboratorListItem = (props: Props) => {\n    const { index, trackingProps } = props;\n    const { usernameProps, emailProps } = trackingProps;\n    const {\n        email,\n        expiration,\n        hasCustomAvatar,\n        name,\n        type,\n        imageURL,\n        isExternalCollab,\n        profileURL,\n        translatedRole,\n        userID,\n    } = props.collaborator;\n\n    const userOrGroupNameContent =\n        type !== COLLAB_GROUP_TYPE ? (\n            <div className={classnames('name', type)}>\n                <Link\n                    href={profileURL || `/profile/${userID}`}\n                    rel=\"noopener\"\n                    target=\"_blank\"\n                    title={name}\n                    {...usernameProps}\n                >\n                    {name}\n                </Link>\n            </div>\n        ) : (\n            <div className={classnames('name', type)}>{name}</div>\n        );\n\n    const emailContent =\n        type !== COLLAB_GROUP_TYPE && email ? (\n            <div className=\"email\">\n                <Link href={`mailto:${email}`} title={email} {...emailProps}>\n                    {email}\n                </Link>\n            </div>\n        ) : null;\n\n    return (\n        <li>\n            <div className=\"collaborator-list-item\">\n                <div className=\"user\">\n                    <CollaboratorAvatarItem\n                        allowBadging\n                        avatarUrl={imageURL}\n                        email={email}\n                        expiration={expiration}\n                        hasCustomAvatar={hasCustomAvatar}\n                        id={index}\n                        isExternalCollab={isExternalCollab}\n                        name={name}\n                    />\n                    <div className=\"info\">\n                        {userOrGroupNameContent}\n                        {emailContent}\n                    </div>\n                </div>\n                <div className=\"role\">\n                    {type === COLLAB_PENDING_TYPE ? (\n                        <FormattedMessage {...messages.pendingCollabText} />\n                    ) : (\n                        translatedRole\n                    )}\n                </div>\n            </div>\n        </li>\n    );\n};\n\nexport default CollaboratorListItem;\n"],"file":"CollaboratorListItem.js"}