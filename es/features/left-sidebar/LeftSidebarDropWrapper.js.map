{"version":3,"sources":["../../../src/features/left-sidebar/LeftSidebarDropWrapper.js"],"names":["React","classNames","LeftSidebarDropWrapper","dropZoneHover","setState","prevProps","props","showDropZoneOnHover","isDragging","children","className","message","dropTargetRef","rest","state","shouldShowVeil","hoverEventHandlers","onMouseEnter","handleDropZoneHover","onMouseLeave","handleDropZoneHoverLeave","classes","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,sCAAP;;IAeMC,sB;;;;;;;;;;;;;;;;;;4DACM;AACJC,MAAAA,aAAa,EAAE;AADX,K;;0EAac;AAAA,aAAM,MAAKC,QAAL,CAAc;AAAED,QAAAA,aAAa,EAAE;AAAjB,OAAd,CAAN;AAAA,K;;+EAEK;AAAA,aAAM,MAAKC,QAAL,CAAc;AAAED,QAAAA,aAAa,EAAE;AAAjB,OAAd,CAAN;AAAA,K;;;;;;;uCAXRE,S,EAAkB;AAAA,wBACW,KAAKC,KADhB;AAAA,UACzBC,mBADyB,eACzBA,mBADyB;AAAA,UACJC,UADI,eACJA,UADI,EAGjC;;AACA,UAAID,mBAAmB,IAAI,CAACC,UAAxB,IAAsCH,SAAS,CAACG,UAApD,EAAgE;AAC5D,aAAKJ,QAAL,CAAc;AAAED,UAAAA,aAAa,EAAE;AAAjB,SAAd;AACH;AACJ;;;6BAMQ;AAAA,yBASD,KAAKG,KATJ;AAAA,UAEDG,QAFC,gBAEDA,QAFC;AAAA,+CAGDC,SAHC;AAAA,UAGDA,SAHC,sCAGW,EAHX;AAAA,+CAIDF,UAJC;AAAA,UAIDA,UAJC,sCAIY,KAJZ;AAAA,+CAKDD,mBALC;AAAA,UAKDA,mBALC,sCAKqB,KALrB;AAAA,8CAMDI,OANC;AAAA,UAMDA,OANC,qCAMS,EANT;AAAA,UAODC,aAPC,gBAODA,aAPC;AAAA,UAQEC,IARF;;AAAA,UAUGV,aAVH,GAUqB,KAAKW,KAV1B,CAUGX,aAVH;AAWL,UAAMY,cAAc,GAAGP,UAAU,KAAKD,mBAAmB,GAAGJ,aAAH,GAAmB,IAA3C,CAAjC;AACA,UAAMa,kBAAkB,GACpBR,UAAU,IAAID,mBAAd,GACM;AACIU,QAAAA,YAAY,EAAE,KAAKC,mBADvB;AAEIC,QAAAA,YAAY,EAAE,KAAKC;AAFvB,OADN,GAKM,EANV;AAOA,UAAMC,OAAO,GAAGpB,UAAU,CAAC,2BAAD,EAA8BS,SAA9B,CAA1B;AAEA,aACI;AAAK,QAAA,GAAG,EAAEE,aAAV;AAAyB,QAAA,SAAS,EAAES;AAApC,SAAiDL,kBAAjD,EAAyEH,IAAzE,GACKE,cAAc,GACX;AAAK,QAAA,SAAS,EAAC;AAAf,SACI;AAAM,QAAA,SAAS,EAAC;AAAhB,SAAkDJ,OAAlD,CADJ,CADW,GAIX,IALR,EAMKF,QANL,CADJ;AAUH;;;;EAjDgCT,KAAK,CAACsB,S;;AAoD3C,eAAepB,sBAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\n\nimport './styles/LeftSidebarDropWrapper.scss';\n\ntype Props = {\n    children: React.Node,\n    className?: string,\n    dropTargetRef?: { current: null | HTMLDivElement },\n    isDragging?: boolean,\n    message?: string,\n    showDropZoneOnHover?: boolean,\n};\n\ntype State = {\n    dropZoneHover: boolean,\n};\n\nclass LeftSidebarDropWrapper extends React.Component<Props, State> {\n    state = {\n        dropZoneHover: false,\n    };\n\n    componentDidUpdate(prevProps: Props) {\n        const { showDropZoneOnHover, isDragging } = this.props;\n\n        // Reset drop zone hover state if dragging has stopped without firing a mouseleave event.\n        if (showDropZoneOnHover && !isDragging && prevProps.isDragging) {\n            this.setState({ dropZoneHover: false });\n        }\n    }\n\n    handleDropZoneHover = () => this.setState({ dropZoneHover: true });\n\n    handleDropZoneHoverLeave = () => this.setState({ dropZoneHover: false });\n\n    render() {\n        const {\n            children,\n            className = '',\n            isDragging = false,\n            showDropZoneOnHover = false,\n            message = '',\n            dropTargetRef,\n            ...rest\n        } = this.props;\n        const { dropZoneHover } = this.state;\n        const shouldShowVeil = isDragging && (showDropZoneOnHover ? dropZoneHover : true);\n        const hoverEventHandlers =\n            isDragging && showDropZoneOnHover\n                ? {\n                      onMouseEnter: this.handleDropZoneHover,\n                      onMouseLeave: this.handleDropZoneHoverLeave,\n                  }\n                : {};\n        const classes = classNames('left-sidebar-drop-wrapper', className);\n\n        return (\n            <div ref={dropTargetRef} className={classes} {...hoverEventHandlers} {...rest}>\n                {shouldShowVeil ? (\n                    <div className=\"left-sidebar-drop-veil\">\n                        <span className=\"left-sidebar-drop-wrapper-text\">{message}</span>\n                    </div>\n                ) : null}\n                {children}\n            </div>\n        );\n    }\n}\n\nexport default LeftSidebarDropWrapper;\n"],"file":"LeftSidebarDropWrapper.js"}