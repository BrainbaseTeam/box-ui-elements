{"version":3,"sources":["../../../src/features/left-sidebar/LeftSidebarLinkCallout.js"],"names":["React","classNames","TetherComponent","PlainButton","IconClose","TETHER_POSITIONS","LeftSidebarLinkCallout","props","onClose","callout","setState","isShown","isShownProp","isControlled","showTooltip","state","attachmentPosition","MIDDLE_LEFT","children","content","navLinkClassName","targetAttachmentPosition","MIDDLE_RIGHT","Children","only","hideCallout","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AAKA,OAAO,sCAAP;;IAeMC,sB;;;;;AACF,kCAAYC,KAAZ,EAA0B;AAAA;;AAAA;;AACtB,gGAAMA,KAAN;;AADsB,kEAKZ,YAAM;AAAA,UACRC,OADQ,GACI,MAAKD,KAAL,CAAWE,OADf,CACRD,OADQ;;AAEhB,UAAIA,OAAJ,EAAa;AACTA,QAAAA,OAAO;AACV;;AACD,YAAKE,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAXyB;;AAAA,mEAaX,YAAM;AAAA,UACAC,WADA,GACgB,MAAKL,KADrB,CACTI,OADS;AAEjB,aAAO,OAAOC,WAAP,KAAuB,WAA9B;AACH,KAhByB;;AAAA,8DAkBhB,YAAM;AAAA,UACKA,WADL,GACqB,MAAKL,KAD1B,CACJI,OADI;;AAEZ,UAAME,YAAY,GAAG,MAAKA,YAAL,EAArB;;AAEA,UAAMC,WAAW,GAAGD,YAAY,GAAGD,WAAH,GAAiB,MAAKG,KAAL,CAAWJ,OAA5D;AAEA,aAAOG,WAAP;AACH,KAzByB;;AAEtB,UAAKC,KAAL,GAAa;AAAEJ,MAAAA,OAAO,EAAE;AAAX,KAAb;AAFsB;AAGzB;;;;6BAwBQ;AAAA,wBAOD,KAAKJ,KAPJ;AAAA,8CAEDS,kBAFC;AAAA,UAEDA,kBAFC,sCAEoBX,gBAAgB,CAACY,WAFrC;AAAA,UAGDC,QAHC,eAGDA,QAHC;AAAA,UAIUC,OAJV,eAIDV,OAJC,CAIUU,OAJV;AAAA,UAKDC,gBALC,eAKDA,gBALC;AAAA,8CAMDC,wBANC;AAAA,UAMDA,wBANC,sCAM0BhB,gBAAgB,CAACiB,YAN3C;AASL,UAAMR,WAAW,GAAG,KAAKH,OAAL,EAApB;AAEA,aACI,oBAAC,eAAD;AACI,QAAA,UAAU,EAAEK,kBADhB;AAEI,QAAA,WAAW,EAAC,kBAFhB;AAGI,QAAA,OAAO,EAAEF,WAHb;AAII,QAAA,gBAAgB,EAAEO;AAJtB,SAMKrB,KAAK,CAACuB,QAAN,CAAeC,IAAf,CAAoBN,QAApB,CANL,EAOKJ,WAAW,IACR;AAAK,QAAA,SAAS,EAAEb,UAAU,CAAC,kBAAD,EAAqBmB,gBAArB;AAA1B,SACI,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAC,+BAAvB;AAAuD,QAAA,OAAO,EAAE,KAAKK;AAArE,SACI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,MAAjB;AAAwB,QAAA,MAAM,EAAE,EAAhC;AAAoC,QAAA,KAAK,EAAE;AAA3C,QADJ,CADJ,EAIKN,OAJL,CARR,CADJ;AAkBH;;;;EAzDgCnB,KAAK,CAAC0B,S;;AA4D3C,eAAepB,sBAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport TetherComponent from 'react-tether';\n\nimport PlainButton from '../../components/plain-button';\nimport IconClose from '../../icons/general/IconClose';\nimport TETHER_POSITIONS from '../../common/tether-positions';\n\nimport type { TetherPosition } from '../../common/tether-positions';\nimport type { Callout } from './Callout';\n\nimport './styles/LeftSidebarLinkCallout.scss';\n\ntype Props = {\n    attachmentPosition?: TetherPosition,\n    callout: Callout,\n    children: React.Node,\n    isShown?: boolean,\n    navLinkClassName?: string,\n    targetAttachmentPosition?: TetherPosition,\n};\n\ntype State = {\n    isShown: boolean,\n};\n\nclass LeftSidebarLinkCallout extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = { isShown: true };\n    }\n\n    hideCallout = () => {\n        const { onClose } = this.props.callout;\n        if (onClose) {\n            onClose();\n        }\n        this.setState({ isShown: false });\n    };\n\n    isControlled = () => {\n        const { isShown: isShownProp } = this.props;\n        return typeof isShownProp !== 'undefined';\n    };\n\n    isShown = () => {\n        const { isShown: isShownProp } = this.props;\n        const isControlled = this.isControlled();\n\n        const showTooltip = isControlled ? isShownProp : this.state.isShown;\n\n        return showTooltip;\n    };\n\n    render() {\n        const {\n            attachmentPosition = TETHER_POSITIONS.MIDDLE_LEFT,\n            children,\n            callout: { content },\n            navLinkClassName,\n            targetAttachmentPosition = TETHER_POSITIONS.MIDDLE_RIGHT,\n        } = this.props;\n\n        const showTooltip = this.isShown();\n\n        return (\n            <TetherComponent\n                attachment={attachmentPosition}\n                classPrefix=\"nav-link-callout\"\n                enabled={showTooltip}\n                targetAttachment={targetAttachmentPosition}\n            >\n                {React.Children.only(children)}\n                {showTooltip && (\n                    <div className={classNames('nav-link-callout', navLinkClassName)}>\n                        <PlainButton className=\"nav-link-callout-close-button\" onClick={this.hideCallout}>\n                            <IconClose color=\"#fff\" height={16} width={16} />\n                        </PlainButton>\n                        {content}\n                    </div>\n                )}\n            </TetherComponent>\n        );\n    }\n}\n\nexport default LeftSidebarLinkCallout;\n"],"file":"LeftSidebarLinkCallout.js"}