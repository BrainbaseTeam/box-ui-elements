{"version":3,"sources":["../../../src/features/access-stats/AccessStatsItem.js"],"names":["React","FormattedMessage","FormattedNumber","PlainButton","IconEye","IconComment","IconDownloadSolid","IconPencilSolid","messages","statsAttributesTable","preview","icon","message","accessStatsPreviews","view","accessStatsViews","download","accessStatsDownloads","comment","accessStatsComments","edit","accessStatsEdits","ICON_COLOR","ITEM_CONTENT_CLASS_NAME","AccessStatsItem","type","count","hasCountOverflowed","openAccessStatsModal","statButtonProps","statAttributes","IconComponent","labelMessage","itemContent"],"mappings":";;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,EAA2BC,eAA3B,QAAkD,YAAlD;AAEA,OAAOC,WAAP,MAAwB,2CAAxB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,OAAOC,eAAP,MAA4B,qCAA5B;AAEA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAO,wBAAP;AAEA,IAAMC,oBAAoB,GAAG;AACzBC,EAAAA,OAAO,EAAE;AACLC,IAAAA,IAAI,EAAEP,OADD;AAELQ,IAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAFb,GADgB;AAKzBC,EAAAA,IAAI,EAAE;AACFH,IAAAA,IAAI,EAAEP,OADJ;AAEFQ,IAAAA,OAAO,EAAEJ,QAAQ,CAACO;AAFhB,GALmB;AASzBC,EAAAA,QAAQ,EAAE;AACNL,IAAAA,IAAI,EAAEL,iBADA;AAENM,IAAAA,OAAO,EAAEJ,QAAQ,CAACS;AAFZ,GATe;AAazBC,EAAAA,OAAO,EAAE;AACLP,IAAAA,IAAI,EAAEN,WADD;AAELO,IAAAA,OAAO,EAAEJ,QAAQ,CAACW;AAFb,GAbgB;AAiBzBC,EAAAA,IAAI,EAAE;AACFT,IAAAA,IAAI,EAAEJ,eADJ;AAEFK,IAAAA,OAAO,EAAEJ,QAAQ,CAACa;AAFhB;AAjBmB,CAA7B;AAsBA,IAAMC,UAAU,GAAG,SAAnB;AACA,IAAMC,uBAAuB,GAAG,2BAAhC;;AAUA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAMG;AAAA,MALvBC,IAKuB,QALvBA,IAKuB;AAAA,wBAJvBC,KAIuB;AAAA,MAJvBA,KAIuB,2BAJf,CAIe;AAAA,mCAHvBC,kBAGuB;AAAA,MAHvBA,kBAGuB,sCAHF,KAGE;AAAA,MAFvBC,oBAEuB,QAFvBA,oBAEuB;AAAA,MADvBC,eACuB,QADvBA,eACuB;AACvB,MAAMC,cAAc,GAAGrB,oBAAoB,CAACgB,IAAD,CAA3C;AACA,MAAMM,aAAa,GAAGD,cAAc,CAACnB,IAArC;AACA,MAAMqB,YAAY,GAAGF,cAAc,CAAClB,OAApC;AAEA,MAAMqB,WAAW,GACb,0CACI,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEX,UAAtB;AAAkC,IAAA,MAAM,EAAE,EAA1C;AAA8C,IAAA,KAAK,EAAE;AAArD,IADJ,EAEI;AAAM,IAAA,SAAS,EAAC;AAAhB,KACI,oBAAC,gBAAD,EAAsBU,YAAtB,CADJ,CAFJ,EAKI,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAEN;AAAxB,IALJ,EAMKC,kBAAkB,IAAI,GAN3B,CADJ;AAWA,SACI;AAAI,IAAA,SAAS,EAAC;AAAd,KACKC,oBAAoB,GACjB,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEL,uBAAxB;AAAiD,IAAA,OAAO,EAAEK;AAA1D,KAAoFC,eAApF,GACKI,WADL,CADiB,GAKjB;AAAM,IAAA,SAAS,EAAEV;AAAjB,KAA2CU,WAA3C,CANR,CADJ;AAWH,CAjCD;;AAmCA,eAAeT,eAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage, FormattedNumber } from 'react-intl';\n\nimport PlainButton from '../../components/plain-button/PlainButton';\nimport IconEye from '../../icons/general/IconEye';\nimport IconComment from '../../icons/general/IconComment';\nimport IconDownloadSolid from '../../icons/general/IconDownloadSolid';\nimport IconPencilSolid from '../../icons/general/IconPencilSolid';\n\nimport messages from './messages';\n\nimport './AccessStatsItem.scss';\n\nconst statsAttributesTable = {\n    preview: {\n        icon: IconEye,\n        message: messages.accessStatsPreviews,\n    },\n    view: {\n        icon: IconEye,\n        message: messages.accessStatsViews,\n    },\n    download: {\n        icon: IconDownloadSolid,\n        message: messages.accessStatsDownloads,\n    },\n    comment: {\n        icon: IconComment,\n        message: messages.accessStatsComments,\n    },\n    edit: {\n        icon: IconPencilSolid,\n        message: messages.accessStatsEdits,\n    },\n};\nconst ICON_COLOR = '#2a62b9';\nconst ITEM_CONTENT_CLASS_NAME = 'access-stats-item-content';\n\ntype AccessStatsItemType = {\n    count: number,\n    hasCountOverflowed?: boolean,\n    openAccessStatsModal?: Function,\n    statButtonProps: Object,\n    type: $Keys<typeof statsAttributesTable>,\n};\n\nconst AccessStatsItem = ({\n    type,\n    count = 0,\n    hasCountOverflowed = false,\n    openAccessStatsModal,\n    statButtonProps,\n}: AccessStatsItemType) => {\n    const statAttributes = statsAttributesTable[type];\n    const IconComponent = statAttributes.icon;\n    const labelMessage = statAttributes.message;\n\n    const itemContent = (\n        <>\n            <IconComponent color={ICON_COLOR} height={10} width={14} />\n            <span className=\"access-stats-label\">\n                <FormattedMessage {...labelMessage} />\n            </span>\n            <FormattedNumber value={count} />\n            {hasCountOverflowed && '+'}\n        </>\n    );\n\n    return (\n        <li className=\"access-stats-item\">\n            {openAccessStatsModal ? (\n                <PlainButton className={ITEM_CONTENT_CLASS_NAME} onClick={openAccessStatsModal} {...statButtonProps}>\n                    {itemContent}\n                </PlainButton>\n            ) : (\n                <span className={ITEM_CONTENT_CLASS_NAME}>{itemContent}</span>\n            )}\n        </li>\n    );\n};\n\nexport default AccessStatsItem;\n"],"file":"AccessStatsItem.js"}