{"version":3,"sources":["../../../src/features/query-bar/QueryBar.js"],"names":["React","TemplateButton","FilterButton","ColumnButton","isItemName","column","source","property","QueryBar","activeTemplate","columns","conditions","onColumnChange","onFilterChange","onTemplateChange","templates","metadataColumns","filter","columnsWithoutItemName"],"mappings":"AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AAKA,OAAO,+BAAP;;AAYA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,MAAD,EAAwB;AACvC,SAAOA,MAAM,CAACC,MAAP,KAAkB,MAAlB,IAA4BD,MAAM,CAACE,QAAP,KAAoB,MAAvD;AACH,CAFD;;AAIA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAQJ;AAAA,MAPTC,cAOS,QAPTA,cAOS;AAAA,MANTC,OAMS,QANTA,OAMS;AAAA,MALTC,UAKS,QALTA,UAKS;AAAA,MAJTC,cAIS,QAJTA,cAIS;AAAA,MAHTC,cAGS,QAHTA,cAGS;AAAA,MAFTC,gBAES,QAFTA,gBAES;AAAA,MADTC,SACS,QADTA,SACS;AACT,MAAMC,eAAe,GAAGN,OAAO,IAAIA,OAAO,CAACO,MAAR,CAAe,UAAAZ,MAAM;AAAA,WAAIA,MAAM,CAACC,MAAP,KAAkB,MAAtB;AAAA,GAArB,CAAnC;AACA,MAAMY,sBAAsB,GAAGR,OAAO,IAAIA,OAAO,CAACO,MAAR,CAAe,UAAAZ,MAAM;AAAA,WAAI,CAACD,UAAU,CAACC,MAAD,CAAf;AAAA,GAArB,CAA1C;AACA,SACI;AAAS,IAAA,SAAS,EAAC;AAAnB,KACI,oBAAC,cAAD;AAAgB,IAAA,cAAc,EAAEI,cAAhC;AAAgD,IAAA,gBAAgB,EAAEK,gBAAlE;AAAoF,IAAA,SAAS,EAAEC;AAA/F,IADJ,EAEI,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEC,eAAvB;AAAwC,IAAA,UAAU,EAAEL,UAApD;AAAgE,IAAA,cAAc,EAAEE;AAAhF,IAFJ,EAGI,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEK,sBAAvB;AAA+C,IAAA,cAAc,EAAEN,cAA/D;AAA+E,IAAA,QAAQ,EAAEH;AAAzF,IAHJ,CADJ;AAOH,CAlBD;;AAoBA,eAAeD,QAAf","sourcesContent":["// @flow\nimport * as React from 'react';\n\nimport TemplateButton from './components/TemplateButton';\nimport FilterButton from './components/filter/FilterButton';\nimport ColumnButton from './components/ColumnButton';\n\nimport type { ColumnType, ConditionType } from './flowTypes';\nimport type { MetadataTemplate } from '../../common/types/metadata';\n\nimport './styles/QueryBarButtons.scss';\n\ntype Props = {\n    activeTemplate?: MetadataTemplate,\n    columns?: Array<ColumnType>,\n    conditions: Array<ConditionType>,\n    onColumnChange?: Function,\n    onFilterChange?: Function,\n    onTemplateChange?: Function,\n    templates?: Array<MetadataTemplate>,\n};\n\nconst isItemName = (column: ColumnType) => {\n    return column.source === 'item' && column.property === 'name';\n};\n\nconst QueryBar = ({\n    activeTemplate,\n    columns,\n    conditions,\n    onColumnChange,\n    onFilterChange,\n    onTemplateChange,\n    templates,\n}: Props) => {\n    const metadataColumns = columns && columns.filter(column => column.source !== 'item');\n    const columnsWithoutItemName = columns && columns.filter(column => !isItemName(column));\n    return (\n        <section className=\"metadata-view-query-bar\">\n            <TemplateButton activeTemplate={activeTemplate} onTemplateChange={onTemplateChange} templates={templates} />\n            <FilterButton columns={metadataColumns} conditions={conditions} onFilterChange={onFilterChange} />\n            <ColumnButton columns={columnsWithoutItemName} onColumnChange={onColumnChange} template={activeTemplate} />\n        </section>\n    );\n};\n\nexport default QueryBar;\n"],"file":"QueryBar.js"}