{"version":3,"sources":["../../../src/features/collapsible-sidebar/CollapsibleSidebar.js"],"names":["React","classNames","styled","tabbable","KEYS","StyledNav","nav","props","theme","primary","background","border","foreground","CollapsibleSidebar","createRef","direction","navRef","current","tabbableEls","currentElIndex","findIndex","el","document","activeElement","index","length","focus","event","contains","key","arrowDown","stopPropagation","preventDefault","focusEl","arrowUp","children","className","expanded","htmlAttributes","classes","handleKeyDown","Component"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Sidebar component that supports rendering different elements based on expand/collapse state\n * @author Box\n *\n * A sidebar component that supports collapsed/expanded state and responsive sizing.\n */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport styled from 'styled-components';\nimport tabbable from 'tabbable';\nimport { KEYS } from '../../constants';\n\nimport './CollapsibleSidebar.scss';\n\nconst StyledNav = styled.nav`\n    background-color: ${props => props.theme.primary.background};\n    border-right: 1px solid ${props => props.theme.primary.border};\n    color: ${props => props.theme.primary.foreground};\n\n    .crawler > div {\n        background-color: ${props => props.theme.primary.foreground};\n    }\n`;\n\ntype Props = {\n    /** Primary content */\n    children?: React.Node,\n\n    /** Additional classes */\n    className?: string,\n\n    /** Controls whether or not the sidebar is expanded on the page */\n    expanded?: boolean,\n\n    /** Optional HTML attributes to append to menu item */\n    htmlAttributes?: Object,\n};\n\nclass CollapsibleSidebar extends React.Component<Props> {\n    navRef: { current: null | HTMLElement } = React.createRef();\n\n    static defaultProps = {\n        expanded: false,\n    };\n\n    focusEl = (direction: 'down' | 'up') => {\n        if (this.navRef.current) {\n            const tabbableEls = tabbable(this.navRef.current);\n            const currentElIndex = tabbableEls.findIndex(el => el === document.activeElement);\n            let index;\n            if (direction === 'down') {\n                index = currentElIndex === tabbableEls.length - 1 ? 0 : currentElIndex + 1;\n            } else {\n                index = currentElIndex === 0 ? tabbableEls.length - 1 : currentElIndex - 1;\n            }\n            tabbableEls[index].focus();\n        }\n    };\n\n    handleKeyDown = (event: SyntheticKeyboardEvent<>) => {\n        if (this.navRef.current && this.navRef.current.contains(document.activeElement)) {\n            switch (event.key) {\n                case KEYS.arrowDown:\n                    event.stopPropagation();\n                    event.preventDefault();\n                    this.focusEl('down');\n                    break;\n\n                case KEYS.arrowUp:\n                    event.stopPropagation();\n                    event.preventDefault();\n                    this.focusEl('up');\n                    break;\n\n                default:\n                    break;\n            }\n        }\n    };\n\n    render() {\n        const { children, className, expanded, htmlAttributes } = this.props;\n        const classes = classNames(\n            {\n                'is-expanded': expanded,\n            },\n            'bdl-CollapsibleSidebar',\n            className,\n        );\n\n        return (\n            <div className=\"bdl-CollapsibleSidebar-wrapper\" {...htmlAttributes}>\n                <StyledNav ref={this.navRef} className={classes} onKeyDown={this.handleKeyDown}>\n                    {children}\n                </StyledNav>\n            </div>\n        );\n    }\n}\n\nexport default CollapsibleSidebar;\n"],"file":"CollapsibleSidebar.js"}