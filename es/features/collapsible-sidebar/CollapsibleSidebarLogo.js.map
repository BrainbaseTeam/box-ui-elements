{"version":3,"sources":["../../../src/features/collapsible-sidebar/CollapsibleSidebarLogo.js"],"names":["React","classNames","styled","injectIntl","bdlGridUnit","Logo","PlainButton","LinkBase","IconHamburger","CollapsibleSidebarItem","messages","StyledLogo","props","theme","primary","foreground","StyledIconHamburger","StyledToggleButton","CollapsibleSidebarLogo","badge","buttonProps","className","expanded","linkProps","onToggle","intl","classes","toggleButton","formatMessage","collapseButtonLabel","expandButtonLabel"],"mappings":";;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,UAAT,QAA2B,YAA3B;AAEA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AAEA,OAAOC,sBAAP,MAAmC,0BAAnC;AAEA,OAAOC,QAAP,MAAqB,YAArB;AAEA,IAAMC,UAAU,GAAGT,MAAM,CAACG,IAAD,CAAT;AAAA;AAAA;AAAA,+IACDD,WADC,EAOA,UAAAQ,KAAK;AAAA;;AAAA,yBAAIA,KAAK,CAACC,KAAV,yEAAI,aAAaC,OAAjB,yDAAI,qBAAsBC,UAA1B;AAAA,CAPL,EAYQ,UAAAH,KAAK;AAAA;;AAAA,0BAAIA,KAAK,CAACC,KAAV,2EAAI,cAAaC,OAAjB,0DAAI,sBAAsBC,UAA1B;AAAA,CAZb,CAAhB;AAiBA,IAAMC,mBAAmB,GAAGd,MAAM,CAACM,aAAD,CAAT;AAAA;AAAA;AAAA,4DAIT,UAAAI,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBC,UAAxB;AAAA,CAJI,CAAzB;AAQA,IAAME,kBAAkB,GAAGf,MAAM,CAACI,WAAD,CAAT;AAAA;AAAA;AAAA,2LAeA,UAAAM,KAAK;AAAA;;AAAA,SAAIA,KAAJ,aAAIA,KAAJ,wCAAIA,KAAK,CAAEC,KAAX,2EAAI,cAAcC,OAAlB,0DAAI,sBAAuBC,UAA3B;AAAA,CAfL,CAAxB;;AAqCA,SAASG,sBAAT,CAAgCN,KAAhC,EAA8C;AAAA,MAClCO,KADkC,GACqCP,KADrC,CAClCO,KADkC;AAAA,MAC3BC,WAD2B,GACqCR,KADrC,CAC3BQ,WAD2B;AAAA,MACdC,SADc,GACqCT,KADrC,CACdS,SADc;AAAA,MACHC,QADG,GACqCV,KADrC,CACHU,QADG;AAAA,MACOC,SADP,GACqCX,KADrC,CACOW,SADP;AAAA,MACkBC,QADlB,GACqCZ,KADrC,CACkBY,QADlB;AAAA,MAC4BC,IAD5B,GACqCb,KADrC,CAC4Ba,IAD5B;AAG1C,MAAMC,OAAO,GAAGzB,UAAU,CAAC,6BAAD,EAAgCoB,SAAhC,CAA1B;AAEA,MAAMM,YAAY,GACd,oBAAC,kBAAD;AACI,IAAA,SAAS,EAAC,qCADd;AAEI,IAAA,OAAO,EAAEH,QAFb;AAGI,kBAAYC,IAAI,CAACG,aAAL,CAAmBN,QAAQ,GAAGZ,QAAQ,CAACmB,mBAAZ,GAAkCnB,QAAQ,CAACoB,iBAAtE,CAHhB;AAII,IAAA,IAAI,EAAC;AAJT,KAKQV,WALR,GAOI,oBAAC,mBAAD;AAAqB,IAAA,MAAM,EAAE,EAA7B;AAAiC,IAAA,KAAK,EAAE;AAAxC,IAPJ,CADJ;AAYA,SACI;AAAK,IAAA,SAAS,EAAEM;AAAhB,KACI,oBAAC,sBAAD;AACI,IAAA,gBAAgB,EAAEC,YADtB;AAEI,IAAA,QAAQ,EAAEL,QAFd;AAGI,IAAA,eAAe,EACX,0CACKK,YADL,EAEI,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAC;AAApB,OAA0DJ,SAA1D,GACI,0CACI,oBAAC,UAAD;AACI,MAAA,SAAS,EAAC,iCADd;AAEI,MAAA,MAAM,EAAE,KAAK,IAAI;AAAE;AAAX,QAA0B,IAAI;AAAE;AAF5C;AAGI,MAAA,KAAK,EAAE,KAAK,IAAI;AAAE;AAAX,QAA0B,IAAI;AAAE;;AAH3C,MADJ,EAMKJ,KANL,CADJ,CAFJ;AAJR,IADJ,CADJ;AAuBH;;AAED,eAAehB,UAAU,CAACe,sBAAD,CAAzB","sourcesContent":["// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport styled from 'styled-components';\n\nimport { injectIntl } from 'react-intl';\nimport type { InjectIntlProvidedProps } from 'react-intl';\nimport { bdlGridUnit } from '../../styles/variables';\nimport Logo from '../../icon/logo/BoxLogo';\nimport PlainButton from '../../components/plain-button/PlainButton';\nimport LinkBase from '../../components/link/LinkBase';\nimport IconHamburger from '../../icons/general/IconHamburger';\n\nimport CollapsibleSidebarItem from './CollapsibleSidebarItem';\n\nimport messages from './messages';\n\nconst StyledLogo = styled(Logo)`\n    padding: ${bdlGridUnit};\n    border: 1px solid transparent;\n    border-radius: 8px;\n\n    & path,\n    & .fill-color {\n        fill: ${props => props.theme?.primary?.foreground};\n    }\n\n    a:focus & {\n        /* since root navlink is focusable, give logo some kind of focus state */\n        border-color: ${props => props.theme?.primary?.foreground};\n        outline: none;\n    }\n`;\n\nconst StyledIconHamburger = styled(IconHamburger)`\n    position: relative;\n    top: 1px; /* svg alignment */\n    & .fill-color {\n        fill: ${props => props.theme.primary.foreground};\n    }\n`;\n\nconst StyledToggleButton = styled(PlainButton)`\n    /* override .btn-plain's overzealous pseudoelement styling */\n    &,\n    &:focus,\n    &:active,\n    &:hover {\n        padding: 8px 12px; /* we don't have unitless variables to multiply in JS yet */\n        line-height: 1;\n        border-color: transparent;\n        border-style: solid;\n        border-width: 1px;\n        border-radius: 8px; /* we don't have unitless variables to multiply in JS yet */\n    }\n\n    &:focus {\n        border-color: ${props => props?.theme?.primary?.foreground};\n        outline: none;\n    }\n`;\n\ntype Props = {\n    /** optional badge to be displayed next to logo */\n    badge?: React.Node,\n\n    buttonProps?: Object,\n\n    /** Additional classes */\n    className?: string,\n\n    /** Controls whether or not the sidebar is expanded on the page */\n    expanded: boolean,\n\n    linkProps: Object,\n\n    onToggle: () => void,\n} & InjectIntlProvidedProps;\n\nfunction CollapsibleSidebarLogo(props: Props) {\n    const { badge, buttonProps, className, expanded, linkProps, onToggle, intl } = props;\n\n    const classes = classNames('bdl-CollapsibleSidebar-logo', className);\n\n    const toggleButton = (\n        <StyledToggleButton\n            className=\"bdl-CollapsibleSidebar-toggleButton\"\n            onClick={onToggle}\n            aria-label={intl.formatMessage(expanded ? messages.collapseButtonLabel : messages.expandButtonLabel)}\n            type=\"button\"\n            {...buttonProps}\n        >\n            <StyledIconHamburger height={20} width={20} />\n        </StyledToggleButton>\n    );\n\n    return (\n        <div className={classes}>\n            <CollapsibleSidebarItem\n                collapsedElement={toggleButton}\n                expanded={expanded}\n                expandedElement={\n                    <>\n                        {toggleButton}\n                        <LinkBase className=\"bdl-CollapsibleSidebar-logoLink\" {...linkProps}>\n                            <>\n                                <StyledLogo\n                                    className=\"bdl-CollapsibleSidebar-logoIcon\"\n                                    height={32 + 2 * 1 /* border */ + 2 * 4 /* padding */}\n                                    width={61 + 2 * 1 /* border */ + 2 * 4 /* padding */}\n                                />\n                                {badge}\n                            </>\n                        </LinkBase>\n                    </>\n                }\n            />\n        </div>\n    );\n}\n\nexport default injectIntl(CollapsibleSidebarLogo);\n"],"file":"CollapsibleSidebarLogo.js"}