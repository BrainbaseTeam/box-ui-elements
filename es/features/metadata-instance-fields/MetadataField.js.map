{"version":3,"sources":["../../../src/features/metadata-instance-fields/MetadataField.js"],"names":["React","FormattedMessage","InlineError","TextMetadataField","EnumMetadataField","DateMetadataField","FloatMetadataField","IntegerMetadataField","MultiSelectMetadataField","ReadOnlyMetadataField","messages","FIELD_TYPE_ENUM","FIELD_TYPE_FLOAT","FIELD_TYPE_INTEGER","FIELD_TYPE_STRING","FIELD_TYPE_DATE","FIELD_TYPE_MULTISELECT","MetadataField","blurExceptionClassNames","dataKey","dataValue","displayName","description","error","isHidden","canEdit","onChange","onRemove","options","type","Error","invalidMetadataFieldType"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport InlineError from '../../components/inline-error/InlineError';\n\nimport TextMetadataField from './TextMetadataField';\nimport EnumMetadataField from './EnumMetadataField';\nimport DateMetadataField from './DateMetadataField';\nimport FloatMetadataField from './FloatMetadataField';\nimport IntegerMetadataField from './IntegerMetadataField';\nimport MultiSelectMetadataField from './MultiSelectMetadataField';\nimport ReadOnlyMetadataField from './ReadOnlyMetadataField';\nimport messages from './messages';\nimport type { MetadataFieldValue, MetadataTemplateFieldOption, MetadataFieldType } from '../../common/types/metadata';\n\nimport {\n    FIELD_TYPE_ENUM,\n    FIELD_TYPE_FLOAT,\n    FIELD_TYPE_INTEGER,\n    FIELD_TYPE_STRING,\n    FIELD_TYPE_DATE,\n    FIELD_TYPE_MULTISELECT,\n} from './constants';\n\ntype Props = {\n    blurExceptionClassNames?: Array<string>,\n    canEdit: boolean,\n    dataKey: string,\n    dataValue?: MetadataFieldValue,\n    description?: string,\n    displayName: string,\n    error?: React.Node,\n    isHidden?: boolean,\n    onChange?: (key: string, value: MetadataFieldValue) => void,\n    onRemove?: (key: string) => void,\n    options?: Array<MetadataTemplateFieldOption>,\n    type: MetadataFieldType,\n};\n\nconst MetadataField = ({\n    blurExceptionClassNames,\n    dataKey,\n    dataValue,\n    displayName,\n    description,\n    error,\n    isHidden,\n    canEdit,\n    onChange,\n    onRemove,\n    options,\n    type,\n}: Props) => {\n    if (isHidden) {\n        return null;\n    }\n\n    if (!canEdit) {\n        return (\n            <ReadOnlyMetadataField\n                dataValue={dataValue}\n                description={description}\n                displayName={displayName}\n                type={type}\n            />\n        );\n    }\n\n    if (!onChange || !onRemove) {\n        throw new Error('Need to have onChange and onRemove');\n    }\n\n    switch (type) {\n        case FIELD_TYPE_STRING:\n            return (\n                <TextMetadataField\n                    dataKey={dataKey}\n                    dataValue={dataValue}\n                    description={description}\n                    displayName={displayName}\n                    onChange={onChange}\n                    onRemove={onRemove}\n                />\n            );\n\n        case FIELD_TYPE_FLOAT:\n            return (\n                <FloatMetadataField\n                    dataKey={dataKey}\n                    dataValue={dataValue}\n                    description={description}\n                    displayName={displayName}\n                    error={error}\n                    onChange={onChange}\n                    onRemove={onRemove}\n                    type={type}\n                />\n            );\n\n        case FIELD_TYPE_INTEGER:\n            return (\n                <IntegerMetadataField\n                    dataKey={dataKey}\n                    dataValue={dataValue}\n                    description={description}\n                    displayName={displayName}\n                    error={error}\n                    onChange={onChange}\n                    onRemove={onRemove}\n                    type={type}\n                />\n            );\n\n        case FIELD_TYPE_ENUM:\n            return (\n                <EnumMetadataField\n                    blurExceptionClassNames={blurExceptionClassNames}\n                    dataKey={dataKey}\n                    dataValue={dataValue}\n                    description={description}\n                    displayName={displayName}\n                    onChange={onChange}\n                    onRemove={onRemove}\n                    options={options}\n                />\n            );\n\n        case FIELD_TYPE_MULTISELECT:\n            return (\n                <MultiSelectMetadataField\n                    blurExceptionClassNames={blurExceptionClassNames}\n                    dataKey={dataKey}\n                    dataValue={dataValue}\n                    description={description}\n                    displayName={displayName}\n                    onChange={onChange}\n                    onRemove={onRemove}\n                    options={options}\n                />\n            );\n\n        case FIELD_TYPE_DATE:\n            return (\n                <DateMetadataField\n                    dataKey={dataKey}\n                    dataValue={dataValue}\n                    description={description}\n                    displayName={displayName}\n                    onChange={onChange}\n                    onRemove={onRemove}\n                />\n            );\n\n        default:\n            return (\n                <InlineError title={type}>\n                    <FormattedMessage {...messages.invalidMetadataFieldType} />\n                </InlineError>\n            );\n    }\n};\n\nexport default MetadataField;\n"],"file":"MetadataField.js"}