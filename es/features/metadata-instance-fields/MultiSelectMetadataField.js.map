{"version":3,"sources":["../../../src/features/metadata-instance-fields/MultiSelectMetadataField.js"],"names":["React","FormattedMessage","Label","MultiSelect","messages","MultiSelectMetadataField","blurExceptionClassNames","dataKey","dataValue","displayName","description","onChange","onRemove","options","placeholder","metadataFieldMultiSelectValue","selectedOptions","length","map","value","option","displayText","key","MultiSelectMetadataFieldBase"],"mappings":"AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,WAAP,MAAwB,gDAAxB;AAGA,OAAOC,QAAP,MAAqB,YAArB;AAIA,OAAO,iCAAP;;AAaA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,OASpB;AAAA,MARTC,uBAQS,QARTA,uBAQS;AAAA,MAPTC,OAOS,QAPTA,OAOS;AAAA,MANTC,SAMS,QANTA,SAMS;AAAA,MALTC,WAKS,QALTA,WAKS;AAAA,MAJTC,WAIS,QAJTA,WAIS;AAAA,MAHTC,SAGS,QAHTA,QAGS;AAAA,MAFTC,QAES,QAFTA,QAES;AAAA,0BADTC,OACS;AAAA,MADTA,OACS,6BADC,EACD;AACT,MAAMC,WAAW,GAAG,oBAAC,gBAAD,EAAsBV,QAAQ,CAACW,6BAA/B,CAApB;AAEA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEN;AAAb,KACK,CAAC,CAACC,WAAF,IAAiB;AAAG,IAAA,SAAS,EAAC;AAAb,KAAkDA,WAAlD,CADtB,EAEI,oBAAC,WAAD;AACI,IAAA,uBAAuB,EAAEJ,uBAD7B;AAEI,IAAA,sBAAsB,MAF1B;AAGI,IAAA,YAAY,MAHhB;AAII,IAAA,QAAQ,EAAE,kBAACU,eAAD,EAA8C;AACpD,UAAIA,eAAe,CAACC,MAApB,EAA4B;AACxBN,QAAAA,SAAQ,CACJJ,OADI,EAEJS,eAAe,CAACE,GAAhB,CAAoB;AAAA,cAAGC,KAAH,SAAGA,KAAH;AAAA,iBAAeA,KAAf;AAAA,SAApB,CAFI,CAAR;AAIH,OALD,MAKO;AACHP,QAAAA,QAAQ,CAACL,OAAD,CAAR;AACH;AACJ,KAbL;AAcI,IAAA,OAAO,EAAEM,OAAO,CAACK,GAAR,CAAY,UAAAE,MAAM;AAAA,aAAK;AAC5BC,QAAAA,WAAW,EAAED,MAAM,CAACE,GADQ;AAE5BH,QAAAA,KAAK,EAAEC,MAAM,CAACE;AAFc,OAAL;AAAA,KAAlB,CAdb;AAkBI,IAAA,WAAW,EAAER,WAlBjB;AAmBI,IAAA,cAAc,EAAEN;AAnBpB,IAFJ,CADJ,CADJ;AA4BH,CAxCD;;AA0CA,SAASH,wBAAwB,IAAIkB,4BAArC;AACA,eAAelB,wBAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Label from '../../components/label/Label';\nimport MultiSelect from '../../components/select-field/MultiSelectField';\nimport type { SelectOptionProp } from '../../components/select-field/props';\n\nimport messages from './messages';\n\nimport type { MetadataFieldValue, MetadataTemplateFieldOption } from '../../common/types/metadata';\n\nimport './MultiSelectMetadataField.scss';\n\ntype Props = {\n    blurExceptionClassNames?: Array<string>,\n    dataKey: string,\n    dataValue?: MetadataFieldValue,\n    description?: string,\n    displayName: string,\n    onChange: (key: string, value: MetadataFieldValue) => void,\n    onRemove: (key: string) => void,\n    options?: Array<MetadataTemplateFieldOption>,\n};\n\nconst MultiSelectMetadataField = ({\n    blurExceptionClassNames,\n    dataKey,\n    dataValue,\n    displayName,\n    description,\n    onChange,\n    onRemove,\n    options = [],\n}: Props) => {\n    const placeholder = <FormattedMessage {...messages.metadataFieldMultiSelectValue} />;\n\n    return (\n        <div className=\"bdl-MultiSelectMetadataField\">\n            <Label text={displayName}>\n                {!!description && <i className=\"bdl-MultiSelectMetadataField-desc\">{description}</i>}\n                <MultiSelect\n                    blurExceptionClassNames={blurExceptionClassNames}\n                    isEscapedWithReference\n                    isScrollable\n                    onChange={(selectedOptions: Array<SelectOptionProp>) => {\n                        if (selectedOptions.length) {\n                            onChange(\n                                dataKey,\n                                selectedOptions.map(({ value }) => value),\n                            );\n                        } else {\n                            onRemove(dataKey);\n                        }\n                    }}\n                    options={options.map(option => ({\n                        displayText: option.key,\n                        value: option.key,\n                    }))}\n                    placeholder={placeholder}\n                    selectedValues={dataValue}\n                />\n            </Label>\n        </div>\n    );\n};\n\nexport { MultiSelectMetadataField as MultiSelectMetadataFieldBase };\nexport default MultiSelectMetadataField;\n"],"file":"MultiSelectMetadataField.js"}