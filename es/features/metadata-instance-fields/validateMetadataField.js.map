{"version":3,"sources":["../../../src/features/metadata-instance-fields/validateMetadataField.js"],"names":["FIELD_TYPE_FLOAT","FIELD_TYPE_INTEGER","floatRegex","integerRegex","floatValidator","value","match","integerValidator","isValidValue","type"],"mappings":"AACA,SAASA,gBAAT,EAA2BC,kBAA3B,QAAqD,aAArD;AAGA,IAAMC,UAAU,GAAG,wBAAnB;AACA,IAAMC,YAAY,GAAG,eAArB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD;AAAA,SAAmB,CAAC,CAACA,KAAK,CAACC,KAAN,CAAYJ,UAAZ,CAArB;AAAA,CAAvB;;AACA,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACF,KAAD;AAAA,SAAmB,CAAC,CAACA,KAAK,CAACC,KAAN,CAAYH,YAAZ,CAArB;AAAA,CAAzB;;AAEA,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAeJ,KAAf,EAA6C;AAC9D,MAAII,IAAI,KAAKT,gBAAT,IAA6B,OAAOK,KAAP,KAAiB,QAAlD,EAA4D;AACxD,WAAOD,cAAc,CAACC,KAAD,CAArB;AACH;;AAED,MAAII,IAAI,KAAKR,kBAAT,IAA+B,OAAOI,KAAP,KAAiB,QAApD,EAA8D;AAC1D,WAAOE,gBAAgB,CAACF,KAAD,CAAvB;AACH;;AAED,SAAO,IAAP;AACH,CAVD,C,CAYA;;;AACA,SAASG,YAAT","sourcesContent":["// @flow\nimport { FIELD_TYPE_FLOAT, FIELD_TYPE_INTEGER } from './constants';\nimport type { MetadataFieldValue } from '../../common/types/metadata';\n\nconst floatRegex = /^[-+]?[0-9]*\\.?[0-9]*$/;\nconst integerRegex = /^[-+]?[0-9]+$/;\n\nconst floatValidator = (value: string) => !!value.match(floatRegex);\nconst integerValidator = (value: string) => !!value.match(integerRegex);\n\nconst isValidValue = (type: string, value: MetadataFieldValue) => {\n    if (type === FIELD_TYPE_FLOAT && typeof value === 'string') {\n        return floatValidator(value);\n    }\n\n    if (type === FIELD_TYPE_INTEGER && typeof value === 'string') {\n        return integerValidator(value);\n    }\n\n    return true;\n};\n\n// eslint-disable-next-line import/prefer-default-export\nexport { isValidValue };\n"],"file":"validateMetadataField.js"}