{"version":3,"sources":["../../../src/api/tasks/TaskLinks.js"],"names":["TasksBase","ERROR_CODE_CREATE_TASK_LINK","TaskLinks","getBaseApiUrl","errorCallback","file","successCallback","task","errorCode","requestData","data","target","id","type","post","url","getUrlForTaskLinkCreate"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAMA,OAAOA,SAAP,MAAsB,aAAtB;AACA,SAASC,2BAAT,QAA4C,iBAA5C;;IAIMC,S;;;;;;;;;;;;;8CACgC;AAC9B,uBAAU,KAAKC,aAAL,EAAV;AACH;;;yCAYQ;AAAA,UATLC,aASK,QATLA,aASK;AAAA,UARLC,IAQK,QARLA,IAQK;AAAA,UAPLC,eAOK,QAPLA,eAOK;AAAA,UANLC,IAMK,QANLA,IAMK;AACL,WAAKC,SAAL,GAAiBP,2BAAjB;AAEA,UAAMQ,WAAW,GAAG;AAChBC,QAAAA,IAAI,EAAE;AACFC,UAAAA,MAAM,EAAE;AACJC,YAAAA,EAAE,EAAEP,IAAI,CAACO,EADL;AAEJC,YAAAA,IAAI,EAAE;AAFF,WADN;AAKFN,UAAAA,IAAI,EAAE;AACFK,YAAAA,EAAE,EAAEL,IAAI,CAACK,EADP;AAEFC,YAAAA,IAAI,EAAE;AAFJ;AALJ;AADU,OAApB;AAaA,WAAKC,IAAL,CAAU;AACNF,QAAAA,EAAE,EAAEP,IAAI,CAACO,EADH;AAENG,QAAAA,GAAG,EAAE,KAAKC,uBAAL,EAFC;AAGNN,QAAAA,IAAI,oBAAOD,WAAP,CAHE;AAINH,QAAAA,eAAe,EAAfA,eAJM;AAKNF,QAAAA,aAAa,EAAbA;AALM,OAAV;AAOH;;;;EAtCmBJ,S;;AAyCxB,eAAeE,SAAf","sourcesContent":["/**\n * @flow\n * @file Helper for the box TaskLinks API\n * @author Box\n */\n\nimport TasksBase from './TasksBase';\nimport { ERROR_CODE_CREATE_TASK_LINK } from '../../constants';\nimport type { ElementsXhrError } from '../../common/types/api';\nimport type { BoxItem } from '../../common/types/core';\n\nclass TaskLinks extends TasksBase {\n    getUrlForTaskLinkCreate(): string {\n        return `${this.getBaseApiUrl()}/undoc/task_links`;\n    }\n\n    createTaskLink({\n        errorCallback,\n        file,\n        successCallback,\n        task,\n    }: {\n        errorCallback: (e: ElementsXhrError, code: string) => void,\n        file: BoxItem,\n        successCallback: Function,\n        task: { id: string },\n    }): void {\n        this.errorCode = ERROR_CODE_CREATE_TASK_LINK;\n\n        const requestData = {\n            data: {\n                target: {\n                    id: file.id,\n                    type: 'file',\n                },\n                task: {\n                    id: task.id,\n                    type: 'task',\n                },\n            },\n        };\n\n        this.post({\n            id: file.id,\n            url: this.getUrlForTaskLinkCreate(),\n            data: { ...requestData },\n            successCallback,\n            errorCallback,\n        });\n    }\n}\n\nexport default TaskLinks;\n"],"file":"TaskLinks.js"}