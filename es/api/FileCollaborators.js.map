{"version":3,"sources":["../../src/api/FileCollaborators.js"],"names":["MarkerBasedAPI","DEFAULT_MAX_COLLABORATORS","FileCollaborators","data","isDestroyed","successCallback","entries","collaborators","map","collab","id","name","login","item","email","Error","getBaseApiUrl","errorCallback","requestData","limit","markerGet"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAMA,OAAOA,cAAP,MAA2B,kBAA3B;AACA,SAASC,yBAAT,QAA0C,cAA1C;;IAEMC,iB;;;;;;;;;;;;;;;;qEAoBe,UAACC,IAAD,EAAqB;AAClC,UAAI,MAAKC,WAAL,MAAsB,OAAO,MAAKC,eAAZ,KAAgC,UAA1D,EAAsE;AAClE;AACH;;AAHiC,UAK1BC,OAL0B,GAKdH,IALc,CAK1BG,OAL0B;AAMlC,UAAMC,aAAa,GAAGD,OAAO,CAACE,GAAR,CAAY,UAAAC,MAAM,EAAI;AAAA,YAChCC,EADgC,GACZD,MADY,CAChCC,EADgC;AAAA,YAC5BC,IAD4B,GACZF,MADY,CAC5BE,IAD4B;AAAA,YACtBC,KADsB,GACZH,MADY,CACtBG,KADsB;AAExC,eAAO;AACHF,UAAAA,EAAE,EAAFA,EADG;AAEHC,UAAAA,IAAI,EAAJA,IAFG;AAGHE,UAAAA,IAAI,EAAE;AAAEH,YAAAA,EAAE,EAAFA,EAAF;AAAMC,YAAAA,IAAI,EAAJA,IAAN;AAAYG,YAAAA,KAAK,EAAEF;AAAnB;AAHH,SAAP;AAKH,OAPqB,CAAtB;;AASA,YAAKP,eAAL,iCAA0BF,IAA1B;AAAgCG,QAAAA,OAAO,EAAEC;AAAzC;AACH,K;;;;;;;;AAnCD;;;;;;2BAMOG,E,EAAoB;AACvB,UAAI,CAACA,EAAL,EAAS;AACL,cAAM,IAAIK,KAAJ,CAAU,kBAAV,CAAN;AACH;;AAED,uBAAU,KAAKC,aAAL,EAAV,oBAAwCN,EAAxC;AACH;AAED;;;;;;;;;AAuBA;;;;;;;;;;yCAWIA,E,EACAL,e,EACAY,a,EAGI;AAAA,UAFJC,WAEI,uEAFkB,EAElB;AAAA,UADJC,KACI,uEADYlB,yBACZ;AACJ,WAAKmB,SAAL,CAAe;AACXV,QAAAA,EAAE,EAAFA,EADW;AAEXS,QAAAA,KAAK,EAALA,KAFW;AAGXd,QAAAA,eAAe,EAAfA,eAHW;AAIXY,QAAAA,aAAa,EAAbA,aAJW;AAKXC,QAAAA,WAAW,EAAXA;AALW,OAAf;AAOH;;;;EA9D2BlB,c;;AAiEhC,eAAeE,iBAAf","sourcesContent":["/**\n * @flow\n * @file Helper for the box collaborators API\n * @author Box\n */\n\nimport MarkerBasedAPI from './MarkerBasedAPI';\nimport { DEFAULT_MAX_COLLABORATORS } from '../constants';\n\nclass FileCollaborators extends MarkerBasedAPI {\n    /**\n     * API URL for comments\n     *\n     * @param {string} [id] - a box file id\n     * @return {string} base url for files\n     */\n    getUrl(id: string): string {\n        if (!id) {\n            throw new Error('Missing file id!');\n        }\n\n        return `${this.getBaseApiUrl()}/files/${id}/collaborators`;\n    }\n\n    /**\n     * Generic success handler\n     *\n     * @param {Object} data the response data\n     */\n    successHandler = (data: any): void => {\n        if (this.isDestroyed() || typeof this.successCallback !== 'function') {\n            return;\n        }\n\n        const { entries } = data;\n        const collaborators = entries.map(collab => {\n            const { id, name, login } = collab;\n            return {\n                id,\n                name,\n                item: { id, name, email: login },\n            };\n        });\n\n        this.successCallback({ ...data, entries: collaborators });\n    };\n\n    /**\n     * API for fetching collaborators on a file\n     *\n     * @param {string} id - the file id\n     * @param {Function} successCallback - the success callback\n     * @param {Function} errorCallback - the error callback\n     * @param {Object} requestData - any additional request data\n     * @param {number} limit - the max number of collaborators to return\n     * @returns {void}\n     */\n    getFileCollaborators(\n        id: string,\n        successCallback: Function,\n        errorCallback: ElementsErrorCallback,\n        requestData: Object = {},\n        limit: number = DEFAULT_MAX_COLLABORATORS,\n    ): void {\n        this.markerGet({\n            id,\n            limit,\n            successCallback,\n            errorCallback,\n            requestData,\n        });\n    }\n}\n\nexport default FileCollaborators;\n"],"file":"FileCollaborators.js"}