{"version":3,"sources":["../../../src/api/box-edit/promise.js"],"names":["promiseOne","promises","errors","errorCount","error","Promise","resolve","reject","pushErrors","idx","err","length","Error","forEach","promise","then","catch"],"mappings":"AACA;;;;;;AAMA,SAASA,UAAT,CAAoBC,QAApB,EAAiE;AAC7D,MAAMC,MAAM,GAAG,EAAf;AACA,MAAIC,UAAU,GAAG,CAAjB;AACA,MAAIC,KAAJ;AAEA,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,QAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,GAAG;AAAA,aAAI,UAAAC,GAAG,EAAI;AAC7BR,QAAAA,MAAM,CAACO,GAAD,CAAN,GAAcC,GAAd;AACAP,QAAAA,UAAU,IAAI,CAAd;;AAEA,YAAIA,UAAU,KAAKF,QAAQ,CAACU,MAA5B,EAAoC;AAChCP,UAAAA,KAAK,GAAG,IAAIQ,KAAJ,CAAU,sBAAV,CAAR;AAEAL,UAAAA,MAAM,CAACH,KAAD,CAAN;AACH;AACJ,OATqB;AAAA,KAAtB;;AAWAH,IAAAA,QAAQ,CAACY,OAAT,CAAiB,UAACC,OAAD,EAAUL,GAAV,EAAkB;AAC/BK,MAAAA,OAAO,CAACC,IAAR,CAAaT,OAAb,EAAsBU,KAAtB,CAA4BR,UAAU,CAACC,GAAD,CAAtC;AACH,KAFD;AAGH,GAfM,CAAP;AAgBH;;AAED,eAAeT,UAAf","sourcesContent":["// @flow\n/**\n * NOTE: we don't use the NPM package directly because it has an unnecessary dependency on es6-promise + its commonjs format.\n * Returns the first promise in `promises` to successfully resolve.\n * If all fail, reject.\n * @see {@link https://github.com/jarofghosts/promise-one}\n */\nfunction promiseOne(promises: Array<Promise<any>>): Promise<any> {\n    const errors = [];\n    let errorCount = 0;\n    let error;\n\n    return new Promise((resolve, reject) => {\n        const pushErrors = idx => err => {\n            errors[idx] = err;\n            errorCount += 1;\n\n            if (errorCount === promises.length) {\n                error = new Error('no promises resolved');\n\n                reject(error);\n            }\n        };\n\n        promises.forEach((promise, idx) => {\n            promise.then(resolve).catch(pushErrors(idx));\n        });\n    });\n}\n\nexport default promiseOne;\n"],"file":"promise.js"}