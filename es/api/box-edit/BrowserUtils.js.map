{"version":3,"sources":["../../../src/api/box-edit/BrowserUtils.js"],"names":["BROWSER_CONSTANTS","CHROME","EDGE","FIREFOX","MAC","SAFARI","IE","MIN_FOLDER_UPLOAD_CHROME","MIN_FOLDER_UPLOAD_EDGE","MIN_FOLDER_UPLOAD_FIREFOX","MIN_FOLDER_UPLOAD_SAFARI","BROWSER_DATA","key","subString","identity","versionSearch","OS_DATA","device","getBrowserData","navigator","data","dataString","versionSearchString","i","len","length","indexOf","getBrowserVersion","index","versionArr","substring","match","isActiveXObjectEnabledForIE","objectID","objectIdentifier","enabled","window","ActiveXObject","exception","BrowserUtils","browserData","osInfo","browser","version","userAgent","appVersion","OS","name","minVersion","toLowerCase","parseFloat","pluginID","isIE","BrowserInstance"],"mappings":"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","sourcesContent":["// @flow\nconst BROWSER_CONSTANTS = {\n    CHROME: 'Chrome',\n    EDGE: 'Edge',\n    FIREFOX: 'Firefox',\n    MAC: 'Mac',\n    SAFARI: 'Safari',\n    IE: 'Explorer',\n};\nconst MIN_FOLDER_UPLOAD_CHROME = '21';\nconst MIN_FOLDER_UPLOAD_EDGE = '14';\nconst MIN_FOLDER_UPLOAD_FIREFOX = '50';\nconst MIN_FOLDER_UPLOAD_SAFARI = '11.1';\n\nconst BROWSER_DATA = [\n    {\n        key: 'userAgent',\n        subString: BROWSER_CONSTANTS.EDGE,\n        identity: BROWSER_CONSTANTS.EDGE,\n    },\n    {\n        key: 'userAgent',\n        subString: BROWSER_CONSTANTS.CHROME,\n        identity: BROWSER_CONSTANTS.CHROME,\n    },\n    {\n        // Chrome on iOS uses criOS to indicate that it is a chrome browser\n        // https://developer.chrome.com/multidevice/user-agent\n        key: 'userAgent',\n        subString: 'criOS',\n        identity: BROWSER_CONSTANTS.CHROME,\n        versionSearch: 'criOS',\n    },\n    {\n        key: 'vendor',\n        subString: 'Apple',\n        identity: BROWSER_CONSTANTS.SAFARI,\n        versionSearch: 'Version',\n    },\n    {\n        key: 'userAgent',\n        subString: BROWSER_CONSTANTS.FIREFOX,\n        identity: BROWSER_CONSTANTS.FIREFOX,\n    },\n    {\n        key: 'userAgent',\n        subString: 'MSIE',\n        identity: 'Explorer',\n        versionSearch: 'MSIE',\n    },\n    {\n        key: 'userAgent',\n        subString: 'Trident',\n        identity: 'Explorer',\n        versionSearch: 'rv',\n    },\n    {\n        key: 'userAgent',\n        subString: 'Gecko',\n        identity: 'Mozilla',\n        versionSearch: 'rv',\n    },\n];\n\nconst OS_DATA = [\n    {\n        key: 'platform',\n        subString: 'Win',\n        identity: 'Windows',\n    },\n    {\n        key: 'userAgent',\n        subString: 'iPod',\n        identity: 'iOS',\n        device: 'iPod',\n    },\n    {\n        key: 'userAgent',\n        subString: 'iPhone',\n        identity: 'iOS',\n        device: 'iPhone',\n    },\n    {\n        key: 'userAgent',\n        subString: 'iPad',\n        identity: 'iOS',\n        device: 'iPad',\n    },\n    {\n        // Make sure Mac is lower than iPhone/iPad/iPod in the array order as iOS user agent also includes 'Mac'\n        key: 'platform',\n        subString: BROWSER_CONSTANTS.MAC,\n        identity: BROWSER_CONSTANTS.MAC,\n    },\n    {\n        // Make sure Android is above Linux, as Android user agent also includes 'Linux'\n        key: 'userAgent',\n        subString: 'Android',\n        identity: 'Android',\n    },\n    {\n        key: 'platform',\n        subString: 'Linux',\n        identity: 'Linux',\n    },\n];\n\n/**\n * Searches for the identity of the browser in the provided array or known browsers.\n * @param {Object} navigator\n * @param {Array} data - list of supported browsers, filled with browser information\n * to determine the current browser identity\n * @returns {Object} - the identity of the browser\n */\nfunction getBrowserData(navigator: Object, data: Array<Object>) {\n    let dataString;\n    let identity = null;\n    let device = null;\n    let versionSearchString = '';\n\n    for (let i = 0, len = data.length; i < len; i += 1) {\n        dataString = navigator[data[i].key];\n        versionSearchString = data[i].versionSearch || data[i].identity;\n\n        if (dataString && dataString.indexOf(data[i].subString) !== -1) {\n            /* eslint-disable prefer-destructuring */\n            identity = data[i].identity;\n            device = data[i].device;\n            /* eslint-enable prefer-destructuring */\n            break;\n        }\n    }\n\n    return {\n        identity,\n        device,\n        versionSearchString,\n    };\n}\n\n/**\n * searches for the version of the browser in the provided array\n *\n * @param {string} dataString - a string that contains the version information,\n *        either navigator.userAgent or navigator.appVersion\n * @param {string} versionSearchString\n * @returns {string} - empty if versionString does not exist in dataString, else the version as a string.\n */\nfunction getBrowserVersion(dataString: string, versionSearchString: string) {\n    const index = dataString.indexOf(versionSearchString);\n    if (index === -1) {\n        return '';\n    }\n\n    // This regex grabs the decimal value of the version\n    const versionArr = dataString.substring(index + versionSearchString.length + 1).match(/[0-9]+(?:\\.[0-9]*)?/);\n    if (versionArr && versionArr.length) {\n        return versionArr[0];\n    }\n    return '';\n}\n\n/**\n * @param {string} [objectID] optional. Defaults to a random string, just to validate\n * the ability of creating the ActiveXObject on the browser\n * @returns {boolean}\n */\nfunction isActiveXObjectEnabledForIE(objectID: string) {\n    const objectIdentifier = objectID || 'htmlfile';\n    let enabled = false;\n\n    try {\n        if ('ActiveXObject' in window) {\n            const { ActiveXObject } = window;\n            enabled = !!new ActiveXObject(objectIdentifier);\n        }\n    } catch (exception) {\n        enabled = false;\n    }\n\n    return enabled;\n}\n\nclass BrowserUtils {\n    browser: string;\n\n    version: string;\n\n    OS: string;\n\n    device: string;\n\n    constructor() {\n        const { navigator } = window;\n        const browserData = getBrowserData(navigator, BROWSER_DATA);\n        const osInfo = getBrowserData(navigator, OS_DATA);\n\n        this.browser = browserData.identity || 'unknown';\n        this.version =\n            getBrowserVersion(navigator.userAgent, browserData.versionSearchString) ||\n            getBrowserVersion(navigator.appVersion, browserData.versionSearchString) ||\n            'unknown';\n        this.OS = osInfo.identity || 'unknown';\n        this.device = osInfo.device || 'unknown';\n    }\n\n    /**\n     * Returns the browser name as a string if recognized, else 'an unknown browser'.\n     * @returns {string} browser name\n     */\n    getName() {\n        return this.browser;\n    }\n\n    /**\n     * Returns the browser version as a string.\n     * @returns {string} version string\n     */\n    getVersion() {\n        return this.version;\n    }\n\n    /**\n     * Returns true if the browser is of type 'type' and the version of browser >= 'min' parameter.\n     *\n     * @param {string} name - The name of the browser\n     * @param {string | number} minVersion - The version number to be equal to or greater than.\n     * @returns {boolean} - true if current browser name is same as passed in and\n     *     browser version greater or equal to minVersion\n     */\n    isMinBrowser(name: string, minVersion: string | number): boolean {\n        return this.browser.toLowerCase() === name.toLowerCase() && parseFloat(this.version) >= parseFloat(minVersion);\n    }\n\n    /**\n     * Returns true if the current browser is Safari.\n     * @returns {boolean} True if browser is Safari\n     */\n    isSafari() {\n        return this.browser === BROWSER_CONSTANTS.SAFARI;\n    }\n\n    /**\n     * Returns true if the current browser is firefox.\n     * @returns {boolean}\n     */\n    isFirefox() {\n        return this.browser === BROWSER_CONSTANTS.FIREFOX;\n    }\n\n    /**\n     * Returns true if the current browser is chrome.\n     * @returns {boolean}\n     */\n    isChrome() {\n        return this.browser === BROWSER_CONSTANTS.CHROME;\n    }\n\n    /**\n     * Returns true if the current browser is internet explorer (ie).\n     * @returns {boolean}\n     */\n    isIE() {\n        return this.browser === BROWSER_CONSTANTS.IE;\n    }\n\n    /**\n     * Returns true if the current browser is microsoft edge.\n     * @returns {boolean}\n     */\n    isEdge() {\n        return this.browser === BROWSER_CONSTANTS.EDGE;\n    }\n\n    /**\n     * Checks if a specific plugin is supported and does not realy on\n     * plugins generally being supported.\n     * @param {string} [pluginID] optional. The specific plugin which should be checked for support\n     * @returns {boolean}\n     */\n    isIEAndSpecificBrowserPluginSupported(pluginID: string) {\n        return this.isIE() && isActiveXObjectEnabledForIE(pluginID);\n    }\n}\n\nconst BrowserInstance = new BrowserUtils();\n\n// for testing only\nexport {\n    BrowserUtils,\n    BROWSER_CONSTANTS,\n    MIN_FOLDER_UPLOAD_CHROME,\n    MIN_FOLDER_UPLOAD_EDGE,\n    MIN_FOLDER_UPLOAD_FIREFOX,\n    MIN_FOLDER_UPLOAD_SAFARI,\n};\n// export as a singleton\nexport default BrowserInstance;\n"],"file":"BrowserUtils.js"}