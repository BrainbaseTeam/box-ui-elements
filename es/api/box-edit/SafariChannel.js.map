{"version":3,"sources":["../../../src/api/box-edit/SafariChannel.js"],"names":["Channel","CONSTANTS","INPUT_EVENT","OUTPUT_EVENT","SafariChannel","appName","operationType","data","browserToComServerTimeoutMS","comServerToApplicationTimeoutSec","Promise","resolve","reject","details","buildDetailsObj","timeoutId","setTimeout","Error","status_code","REQUEST_TIMEOUT_RESPONSE_CODE","reqIdToPromiseMap","set","req_id","rejectTimeout","createAndDispatchAppExtensionEvent","detail","isAppExtensionListenerAttached","document","addEventListener","appExtensionEventResponseHandler","removeEventListener","responseVal","response","JSON","parse","has","resolveObj","get","clearTimeout","delete","responseData","com_server_response","payload","CustomEvent","window","eventInstance","dispatchEvent","executeOperation","OPERATION_STATUS","OPERATION_REQUEST","OPERATION_COMMAND","tearDownSafariExtensionCommunication","Map","channelName","SAFARI_CHANNEL_NAME","setupSafariExtensionCommunication"],"mappings":"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","sourcesContent":["// @flow\nimport Channel from './Channel';\nimport CONSTANTS from './constants';\n\nconst INPUT_EVENT = 'box_extension_input';\nconst OUTPUT_EVENT = 'box_extension_output';\n\nclass SafariChannel extends Channel {\n    isAppExtensionListenerAttached: boolean;\n\n    reqIdToPromiseMap: Map<string, Object>;\n\n    window: any;\n\n    document: Document;\n\n    constructor(appName: string) {\n        super(appName);\n        this.reqIdToPromiseMap = new Map();\n        this.channelName = CONSTANTS.SAFARI_CHANNEL_NAME;\n        this.window = window;\n        this.document = document;\n        this.setupSafariExtensionCommunication();\n    }\n\n    executeOperation = (\n        operationType: string = '',\n        data: ?Object = {},\n        browserToComServerTimeoutMS: number = 0,\n        comServerToApplicationTimeoutSec: number = 0,\n    ): Promise<any> => {\n        return new Promise((resolve, reject) => {\n            const details = this.buildDetailsObj(operationType, data, comServerToApplicationTimeoutSec);\n\n            const timeoutId = setTimeout(() => {\n                reject(\n                    new Error({\n                        status_code: CONSTANTS.REQUEST_TIMEOUT_RESPONSE_CODE,\n                    }),\n                );\n            }, browserToComServerTimeoutMS);\n\n            this.reqIdToPromiseMap.set(details.req_id, {\n                resolve,\n                rejectTimeout: timeoutId,\n            });\n            this.createAndDispatchAppExtensionEvent({ detail: details });\n        });\n    };\n\n    setupSafariExtensionCommunication = () => {\n        if (!this.isAppExtensionListenerAttached) {\n            this.isAppExtensionListenerAttached = true;\n            this.document.addEventListener(OUTPUT_EVENT, this.appExtensionEventResponseHandler);\n        }\n    };\n\n    tearDownSafariExtensionCommunication = () => {\n        if (this.isAppExtensionListenerAttached) {\n            this.isAppExtensionListenerAttached = false;\n            this.document.removeEventListener(OUTPUT_EVENT, this.appExtensionEventResponseHandler);\n        }\n    };\n\n    appExtensionEventResponseHandler = (responseVal: any) => {\n        const response = typeof responseVal.detail === 'string' ? JSON.parse(responseVal.detail) : responseVal.detail;\n\n        if (this.reqIdToPromiseMap.has(response.req_id)) {\n            const resolveObj = this.reqIdToPromiseMap.get(response.req_id);\n            if (resolveObj) {\n                clearTimeout(resolveObj.rejectTimeout);\n                this.reqIdToPromiseMap.delete(response.req_id);\n\n                const responseData =\n                    typeof response.com_server_response.data === 'string'\n                        ? JSON.parse(response.com_server_response.data)\n                        : response.com_server_response.data;\n\n                resolveObj.resolve(responseData);\n            }\n        }\n    };\n\n    createAndDispatchAppExtensionEvent = (payload: Object) => {\n        const { CustomEvent } = this.window;\n\n        const eventInstance = new CustomEvent(INPUT_EVENT, payload);\n        this.document.dispatchEvent(eventInstance);\n    };\n\n    getComServerStatus = (browserToComServerTimeoutMS: number, comServerToApplicationTimeoutSec: number) => {\n        return this.executeOperation(\n            CONSTANTS.OPERATION_STATUS,\n            null,\n            browserToComServerTimeoutMS,\n            comServerToApplicationTimeoutSec,\n        );\n    };\n\n    sendRequest = (data: Object, browserToComServerTimeoutMS: number, comServerToApplicationTimeoutSec: number) => {\n        return this.executeOperation(\n            CONSTANTS.OPERATION_REQUEST,\n            data,\n            browserToComServerTimeoutMS,\n            comServerToApplicationTimeoutSec,\n        );\n    };\n\n    sendCommand = (data: Object, browserToComServerTimeoutMS: number, comServerToApplicationTimeoutSec: number) => {\n        return this.executeOperation(\n            CONSTANTS.OPERATION_COMMAND,\n            data,\n            browserToComServerTimeoutMS,\n            comServerToApplicationTimeoutSec,\n        );\n    };\n\n    destroy = () => {\n        this.tearDownSafariExtensionCommunication();\n    };\n}\n\nexport default SafariChannel;\n"],"file":"SafariChannel.js"}