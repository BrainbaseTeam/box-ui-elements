{"version":3,"sources":["../../src/api/ItemCollaborations.js"],"names":["MarkerBasedAPI","DEFAULT_MAX_COLLABORATORS","ItemCollaborations","id","successCallback","errorCallback","requestData","limit","markerGet","data","isDestroyed"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAMA,OAAOA,cAAP,MAA2B,kBAA3B;AACA,SAASC,yBAAT,QAA0C,cAA1C;;IAIMC,kB;;;;;;;;;;;;;;;;;;wEAsBkB,UAChBC,EADgB,EAEhBC,eAFgB,EAGhBC,aAHgB,EAMT;AAAA,UAFPC,WAEO,uEAFe,EAEf;AAAA,UADPC,KACO,uEADSN,yBACT;;AACP,YAAKO,SAAL,CAAe;AACXL,QAAAA,EAAE,EAAFA,EADW;AAEXI,QAAAA,KAAK,EAALA,KAFW;AAGXH,QAAAA,eAAe,EAAfA,eAHW;AAIXC,QAAAA,aAAa,EAAbA,aAJW;AAKXC,QAAAA,WAAW,EAAXA;AALW,OAAf;AAOH,K;;qEAOgB,UAACG,IAAD,EAAgC;AAC7C,UAAI,MAAKC,WAAL,MAAsB,OAAO,MAAKN,eAAZ,KAAgC,UAA1D,EAAsE;AAClE;AACH;;AAED,YAAKA,eAAL,CAAqBK,IAArB,EAL6C,CAKjB;;AAC/B,K;;;;;;;;AAhDD;;;;;;;2BAOON,E,EAAoB;AACvB,8BAAiBA,EAAjB;AACH;AAED;;;;;;;;;;;;;;EAZ6BH,c;;AAoDjC,eAAeE,kBAAf","sourcesContent":["/**\n * @flow\n * @file Helper for the Box Item (File/Folder) Collaborations API\n * @author Box\n */\n\nimport MarkerBasedAPI from './MarkerBasedAPI';\nimport { DEFAULT_MAX_COLLABORATORS } from '../constants';\nimport type { ElementsErrorCallback } from '../common/types/api';\nimport type { Collaboration, Collaborations } from '../common/types/core';\n\nclass ItemCollaborations extends MarkerBasedAPI {\n    /**\n     * API URL for collaborations\n     *\n     * @param {string} id - Item ID\n     * @protected\n     * @return {string} Base URL for collaborations\n     */\n    getUrl(id: string): string {\n        return `getUrl(${id}) should be overridden`;\n    }\n\n    /**\n     * API for fetching collaborations on a Box item\n     *\n     * @param {string} id - Item ID\n     * @param {Function} successCallback - Success callback\n     * @param {Function} errorCallback - Error callback\n     * @param {Object} [requestData] - Optional additional request data\n     * @param {number} [limit] - Max number of collaborations to return\n     * @returns {void}\n     */\n    getCollaborations = (\n        id: string,\n        successCallback: ({ entries: Array<Collaboration>, next_marker: ?string }) => void,\n        errorCallback: ElementsErrorCallback,\n        requestData: Object = {},\n        limit: number = DEFAULT_MAX_COLLABORATORS,\n    ): void => {\n        this.markerGet({\n            id,\n            limit,\n            successCallback,\n            errorCallback,\n            requestData,\n        });\n    };\n\n    /**\n     * Used by the MarkerBasedAPI after a successful call\n     *\n     * @param {Object} data - Response data\n     */\n    successHandler = (data: Collaborations): void => {\n        if (this.isDestroyed() || typeof this.successCallback !== 'function') {\n            return;\n        }\n\n        this.successCallback(data); // defined in this.markerGet()\n    };\n}\n\nexport default ItemCollaborations;\n"],"file":"ItemCollaborations.js"}