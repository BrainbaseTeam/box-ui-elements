{"version":3,"sources":["../../src/api/FileAccessStats.js"],"names":["Base","ERROR_CODE_FETCH_ACCESS_STATS","FileAccessStats","id","Error","getBaseApiUrl","successCallback","errorCallback","errorCode","get"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;;AAMA,OAAOA,IAAP,MAAiB,QAAjB;AACA,SAASC,6BAAT,QAA8C,cAA9C;;IAGMC,e;;;;;;;;;;;;;;AACF;;;;;;2BAMOC,E,EAAoB;AACvB,UAAI,CAACA,EAAL,EAAS;AACL,cAAM,IAAIC,KAAJ,CAAU,kBAAV,CAAN;AACH;;AAED,uBAAU,KAAKC,aAAL,EAAV,gCAAoDF,EAApD;AACH;AAED;;;;;;;;;;;uCAQmBA,E,EAAYG,e,EAA2BC,a,EAA4C;AAClG,WAAKC,SAAL,GAAiBP,6BAAjB;AACA,WAAKQ,GAAL,CAAS;AACLN,QAAAA,EAAE,EAAFA,EADK;AAELG,QAAAA,eAAe,EAAfA,eAFK;AAGLC,QAAAA,aAAa,EAAbA;AAHK,OAAT;AAKH;;;;EA9ByBP,I;;AAiC9B,eAAeE,eAAf","sourcesContent":["/**\n * @flow\n * @file Helper for the box versions API\n * @author Box\n */\n\nimport Base from './Base';\nimport { ERROR_CODE_FETCH_ACCESS_STATS } from '../constants';\nimport type { ElementsErrorCallback } from '../common/types/api';\n\nclass FileAccessStats extends Base {\n    /**\n     * API URL for access stats\n     *\n     * @param {string} [id] - a box file id\n     * @return {string} base url for files\n     */\n    getUrl(id: string): string {\n        if (!id) {\n            throw new Error('Missing file id!');\n        }\n\n        return `${this.getBaseApiUrl()}/file_access_stats/${id}`;\n    }\n\n    /**\n     * API for fetching access stats on a file\n     *\n     * @param {string} id - a box file id\n     * @param {Function} successCallback - Success callback\n     * @param {Function} errorCallback - Error callback\n     * @return {void>}\n     */\n    getFileAccessStats(id: string, successCallback: Function, errorCallback: ElementsErrorCallback): void {\n        this.errorCode = ERROR_CODE_FETCH_ACCESS_STATS;\n        this.get({\n            id,\n            successCallback,\n            errorCallback,\n        });\n    }\n}\n\nexport default FileAccessStats;\n"],"file":"FileAccessStats.js"}