{"version":3,"sources":["../../src/api/MarkerBasedGroups.js"],"names":["MarkerBasedAPI","DEFAULT_MAX_CONTACTS","ERROR_CODE_FETCH_ENTERPRISE_GROUPS","MarkerBasedGroups","getBaseApiUrl","id","successCallback","errorCallback","requestData","limit","errorCode","markerGet","usemarker","shouldFetchAll"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAKA,OAAOA,cAAP,MAA2B,kBAA3B;AACA,SAASC,oBAAT,EAA+BC,kCAA/B,QAAyE,cAAzE;;IAGMC,iB;;;;;;;;;;;;;;AACF;;;;;6BAKiB;AACb,uBAAU,KAAKC,aAAL,EAAV;AACH;AAED;;;;;;;;;;;;;0CAWIC,E,EACAC,e,EACAC,a,EACAC,W,EAEI;AAAA,UADJC,KACI,uEADYR,oBACZ;AACJ,WAAKS,SAAL,GAAiBR,kCAAjB;AAEA,WAAKS,SAAL,CAAe;AACXN,QAAAA,EAAE,EAAFA,EADW;AAEXI,QAAAA,KAAK,EAALA,KAFW;AAGXH,QAAAA,eAAe,EAAfA,eAHW;AAIXC,QAAAA,aAAa,EAAbA,aAJW;AAKXC,QAAAA,WAAW;AACPI,UAAAA,SAAS,EAAE;AADJ,WAEJJ,WAFI,CALA;AASXK,QAAAA,cAAc,EAAE;AATL,OAAf;AAWH;;;;EAxC2Bb,c;;AA2ChC,eAAeG,iBAAf","sourcesContent":["/**\n * @flow\n * @file Marker-based helper for the Box Groups API\n * @author Box\n */\nimport MarkerBasedAPI from './MarkerBasedAPI';\nimport { DEFAULT_MAX_CONTACTS, ERROR_CODE_FETCH_ENTERPRISE_GROUPS } from '../constants';\nimport type { ElementsErrorCallback } from '../common/types/api';\n\nclass MarkerBasedGroups extends MarkerBasedAPI {\n    /**\n     * API URL for fetching all groups that are visible to the current user\n     *\n     * @returns {string} URL for fetching groups\n     */\n    getUrl(): string {\n        return `${this.getBaseApiUrl()}/groups`;\n    }\n\n    /**\n     * API for fetching all groups in the current user's enterprise\n     *\n     * @param {string} id - Box item ID\n     * @param {Function} successCallback - Success callback\n     * @param {Function} errorCallback - Error callback\n     * @param {Object} [requestData] - Opitional additional request data\n     * @param {Object} [limit] - Max number of groups to return\n     * @returns {void}\n     */\n    getGroupsInEnterprise(\n        id: string,\n        successCallback: Function,\n        errorCallback: ElementsErrorCallback,\n        requestData: ?Object,\n        limit: number = DEFAULT_MAX_CONTACTS,\n    ): void {\n        this.errorCode = ERROR_CODE_FETCH_ENTERPRISE_GROUPS;\n\n        this.markerGet({\n            id,\n            limit,\n            successCallback,\n            errorCallback,\n            requestData: {\n                usemarker: true,\n                ...requestData,\n            },\n            shouldFetchAll: false,\n        });\n    }\n}\n\nexport default MarkerBasedGroups;\n"],"file":"MarkerBasedGroups.js"}