{"version":3,"sources":["../../src/api/Item.js"],"names":["noop","setProp","getBadItemError","getBadPermissionsError","Base","ACCESS_NONE","CACHE_PREFIX_SEARCH","CACHE_PREFIX_FOLDER","TYPE_FOLDER","ERROR_CODE_DELETE_ITEM","ERROR_CODE_RENAME_ITEM","ERROR_CODE_SHARE_ITEM","Item","isDestroyed","parentKey","getParentCacheKey","parentId","folder","getCache","get","postDeleteCleanup","item_collection","entries","total_count","Array","isArray","childKey","getCacheKey","id","oldCount","length","newEntries","filter","entry","newCount","updatedObject","merge","successCallback","data","unsetAll","name","shared_link","cacheKey","key","value","cache","item","errorCallback","Promise","reject","errorCode","permissions","parent","type","can_delete","url","getUrl","xhr","delete","then","deleteSuccessHandler","catch","e","errorHandler","can_rename","put","renameSuccessHandler","access","can_share","can_set_share_access","shareSuccessHandler"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Helper for the box item API\n * @author Box\n */\n\nimport noop from 'lodash/noop';\nimport setProp from 'lodash/set';\nimport { getBadItemError, getBadPermissionsError } from '../utils/error';\nimport Base from './Base';\nimport {\n    ACCESS_NONE,\n    CACHE_PREFIX_SEARCH,\n    CACHE_PREFIX_FOLDER,\n    TYPE_FOLDER,\n    ERROR_CODE_DELETE_ITEM,\n    ERROR_CODE_RENAME_ITEM,\n    ERROR_CODE_SHARE_ITEM,\n} from '../constants';\n\nclass Item extends Base {\n    /**\n     * @property {string}\n     */\n    id: string;\n\n    /**\n     * @property {string}\n     */\n    parentId: string;\n\n    /**\n     * @property {Function}\n     */\n    successCallback: Function;\n\n    /**\n     * @property {Function}\n     */\n    errorCallback: ElementsErrorCallback;\n\n    /**\n     * Creates a key for the item's parent\n     * This is always a folder\n     *\n     * @param {string} Id - folder id\n     * @return {string} Key\n     */\n    getParentCacheKey(id: string): string {\n        return `${CACHE_PREFIX_FOLDER}${id}`;\n    }\n\n    /**\n     * Creates a key for the cache\n     *\n     * @param {string} Id - Folder id\n     * @return {string} Key\n     */\n    getCacheKey(id: string): string {\n        return `getCacheKey(${id}) should be overriden`;\n    }\n\n    /**\n     * API URL for items\n     *\n     * @param {string} id - Item id\n     * @protected\n     * @return {string} Base url for files\n     */\n    getUrl(id: string): string {\n        return `getUrl(${id}) should be overriden`;\n    }\n\n    /**\n     * Merges new data with old data and returns new data\n     *\n     * @param {String} cacheKey - The cache key of item to merge\n     * @param {String} key - The attribute to merge\n     * @param {Object} value - The value to merge\n     * @return {BoxItem} The newly updated object from the cache\n     */\n    merge(cacheKey: string, key: string, value: any): BoxItem {\n        const cache: APICache = this.getCache();\n        cache.merge(cacheKey, setProp({}, key, value));\n        return cache.get(cacheKey);\n    }\n\n    /**\n     * Steps to do after deletion\n     *\n     * @return {void}\n     */\n    postDeleteCleanup(): void {\n        if (this.isDestroyed()) {\n            return;\n        }\n\n        // Get rid of all searches\n        this.getCache().unsetAll(CACHE_PREFIX_SEARCH);\n        this.successCallback();\n    }\n\n    /**\n     * Handles response for deletion\n     *\n     * @return {void}\n     */\n    deleteSuccessHandler = (): void => {\n        if (this.isDestroyed()) {\n            return;\n        }\n\n        // When fetching the parent folder from the cache\n        // we have no guarantees that it will be there since\n        // search results happen across folders and we only\n        // add those folders to cache that have been navigated to.\n        const parentKey: string = this.getParentCacheKey(this.parentId);\n        const folder: ?FlattenedBoxItem = this.getCache().get(parentKey);\n        if (!folder) {\n            this.postDeleteCleanup();\n            return;\n        }\n\n        // Same logic as above but in this case we may have the parent\n        // folders meta data in cache but not its contents.\n        const { item_collection }: FlattenedBoxItem = folder;\n        if (!item_collection) {\n            this.postDeleteCleanup();\n            return;\n        }\n\n        const { entries, total_count }: FlattenedBoxItemCollection = item_collection;\n        if (!Array.isArray(entries) || typeof total_count !== 'number') {\n            throw getBadItemError();\n        }\n\n        const childKey: string = this.getCacheKey(this.id);\n        const oldCount: number = entries.length;\n        const newEntries: string[] = entries.filter((entry: string) => entry !== childKey);\n        const newCount: number = newEntries.length;\n\n        const updatedObject: BoxItem = this.merge(\n            parentKey,\n            'item_collection',\n            Object.assign(item_collection, {\n                entries: newEntries,\n                total_count: total_count - (oldCount - newCount),\n            }),\n        );\n\n        this.successCallback(updatedObject);\n        this.postDeleteCleanup();\n    };\n\n    /**\n     * API to delete an Item\n     *\n     * @param {Object} item - Item to delete\n     * @param {Function} successCallback - Success callback\n     * @param {Function} errorCallback - Error callback\n     * @return {void}\n     */\n    deleteItem(item: BoxItem, successCallback: Function, errorCallback: ElementsErrorCallback = noop): Promise<void> {\n        if (this.isDestroyed()) {\n            return Promise.reject();\n        }\n\n        this.errorCode = ERROR_CODE_DELETE_ITEM;\n        const { id, permissions, parent, type }: BoxItem = item;\n        if (!id || !permissions || !parent || !type) {\n            errorCallback(getBadItemError(), this.errorCode);\n            return Promise.reject();\n        }\n\n        const { id: parentId } = parent;\n        const { can_delete }: BoxItemPermission = permissions;\n        if (!can_delete || !parentId) {\n            errorCallback(getBadPermissionsError(), this.errorCode);\n            return Promise.reject();\n        }\n\n        this.id = id;\n        this.parentId = parentId;\n        this.successCallback = successCallback;\n        this.errorCallback = errorCallback;\n\n        const url = `${this.getUrl(id)}${type === TYPE_FOLDER ? '?recursive=true' : ''}`;\n        return this.xhr\n            .delete({ url })\n            .then(this.deleteSuccessHandler)\n            .catch((e: $AxiosError<any>) => {\n                this.errorHandler(e);\n            });\n    }\n\n    /**\n     * Handles response for rename\n     *\n     * @param {BoxItem} data - The updated item\n     * @return {void}\n     */\n    renameSuccessHandler = ({ data }: { data: BoxItem }): void => {\n        if (!this.isDestroyed()) {\n            // Get rid of all searches\n            this.getCache().unsetAll(CACHE_PREFIX_SEARCH);\n            const updatedObject: BoxItem = this.merge(this.getCacheKey(this.id), 'name', data.name);\n            this.successCallback(updatedObject);\n        }\n    };\n\n    /**\n     * API to rename an Item\n     *\n     * @param {Object} item - Item to rename\n     * @param {string} name - Item new name\n     * @param {Function} successCallback - Success callback\n     * @param {Function} errorCallback - Error callback\n     * @return {void}\n     */\n    rename(\n        item: BoxItem,\n        name: string,\n        successCallback: Function,\n        errorCallback: ElementsErrorCallback = noop,\n    ): Promise<void> {\n        if (this.isDestroyed()) {\n            return Promise.reject();\n        }\n\n        this.errorCode = ERROR_CODE_RENAME_ITEM;\n        const { id, permissions }: BoxItem = item;\n        if (!id || !permissions) {\n            errorCallback(getBadItemError(), this.errorCode);\n            return Promise.reject();\n        }\n\n        const { can_rename }: BoxItemPermission = permissions;\n        if (!can_rename) {\n            errorCallback(getBadPermissionsError(), this.errorCode);\n            return Promise.reject();\n        }\n\n        this.id = id;\n        this.successCallback = successCallback;\n        this.errorCallback = errorCallback;\n\n        return this.xhr\n            .put({ url: `${this.getUrl(id)}`, data: { name } })\n            .then(this.renameSuccessHandler)\n            .catch((e: $AxiosError<any>) => {\n                this.errorHandler(e);\n            });\n    }\n\n    /**\n     * Handles response for shared link\n     *\n     * @param {BoxItem} data - The updated item\n     * @return {void}\n     */\n    shareSuccessHandler = ({ data }: { data: BoxItem }): void => {\n        if (!this.isDestroyed()) {\n            const updatedObject: BoxItem = this.merge(this.getCacheKey(this.id), 'shared_link', data.shared_link);\n            this.successCallback(updatedObject);\n        }\n    };\n\n    /**\n     * API to create or remove a shared link\n     *\n     * @param {Object} item - Item to share\n     * @param {string} access - Shared access level\n     * @param {Function} successCallback - Success callback\n     * @param {Function|void} errorCallback - Error callback\n     * @return {void}\n     */\n    share(\n        item: BoxItem,\n        access: string,\n        successCallback: Function,\n        errorCallback: ElementsErrorCallback = noop,\n    ): Promise<void> {\n        if (this.isDestroyed()) {\n            return Promise.reject();\n        }\n\n        this.errorCode = ERROR_CODE_SHARE_ITEM;\n        const { id, permissions }: BoxItem = item;\n        if (!id || !permissions) {\n            errorCallback(getBadItemError(), this.errorCode);\n            return Promise.reject();\n        }\n\n        const { can_share, can_set_share_access }: BoxItemPermission = permissions;\n        if (!can_share || !can_set_share_access) {\n            errorCallback(getBadPermissionsError(), this.errorCode);\n            return Promise.reject();\n        }\n\n        this.id = id;\n        this.successCallback = successCallback;\n        this.errorCallback = errorCallback;\n\n        // We use the parent folder's auth token since use case involves\n        // only content explorer or picker which works onf folder tokens\n        return this.xhr\n            .put({\n                url: this.getUrl(this.id),\n                data: {\n                    shared_link: access === ACCESS_NONE ? null : { access },\n                },\n            })\n            .then(this.shareSuccessHandler)\n            .catch((e: $AxiosError<any>) => {\n                this.errorHandler(e);\n            });\n    }\n}\n\nexport default Item;\n"],"file":"Item.js"}