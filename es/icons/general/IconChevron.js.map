{"version":3,"sources":["../../../src/icons/general/IconChevron.tsx"],"names":["React","DirectionType","rotations","DOWN","LEFT","RIGHT","UP","IconChevron","className","color","direction","size","thickness","borderColor","borderStyle","borderWidth","display","height","transform","width"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,WAAYC,aAAZ;;WAAYA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;GAAAA,a,KAAAA,a;;AAOZ,IAAMC,SAAS,iDACVD,aAAa,CAACE,IADJ,EACW,GADX,+BAEVF,aAAa,CAACG,IAFJ,EAEW,GAFX,+BAGVH,aAAa,CAACI,KAHJ,EAGY,EAHZ,+BAIVJ,aAAa,CAACK,EAJJ,EAIS,GAJT,cAAf;;AAoBA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,4BAChBC,SADgB;AAAA,MAChBA,SADgB,+BACJ,EADI;AAAA,wBAEhBC,KAFgB;AAAA,MAEhBA,KAFgB,2BAER,MAFQ;AAAA,4BAGhBC,SAHgB;AAAA,MAGhBA,SAHgB,+BAGJT,aAAa,CAACK,EAHV;AAAA,uBAIhBK,IAJgB;AAAA,MAIhBA,IAJgB,0BAIT,KAJS;AAAA,4BAKhBC,SALgB;AAAA,MAKhBA,SALgB,+BAKJ,KALI;AAAA,SAOhB;AACI,IAAA,SAAS,sCAA+BF,SAA/B,cAA4CF,SAA5C,CADb;AAEI,IAAA,KAAK,EAAE;AACHK,MAAAA,WAAW,EAAEJ,KADV;AAEHK,MAAAA,WAAW,EAAE,uBAFV;AAGHC,MAAAA,WAAW,EAAEH,SAHV;AAIHI,MAAAA,OAAO,EAAE,cAJN;AAKHC,MAAAA,MAAM,EAAEN,IALL;AAMHO,MAAAA,SAAS,mBAAYhB,SAAS,CAACQ,SAAD,CAArB,SANN;AAOHS,MAAAA,KAAK,EAAER;AAPJ;AAFX,IAPgB;AAAA,CAApB;;AAqBA,eAAeJ,WAAf","sourcesContent":["import * as React from 'react';\n\nexport enum DirectionType {\n    DOWN = 'down',\n    LEFT = 'left',\n    RIGHT = 'right',\n    UP = 'up',\n}\n\nconst rotations = {\n    [DirectionType.DOWN]: 135,\n    [DirectionType.LEFT]: 225,\n    [DirectionType.RIGHT]: 45,\n    [DirectionType.UP]: 315,\n};\n\ninterface IconChevronProps {\n    /** Class name for the icon */\n    className?: string;\n    /** A string describing the color for the icon */\n    color?: string;\n    /** A string describing the direction of the icon */\n    direction?: DirectionType;\n    /** A string describing the size of the icon */\n    size?: string;\n    /** A string describing the thickness of the icon */\n    thickness?: string;\n}\n\nconst IconChevron = ({\n    className = '',\n    color = '#000',\n    direction = DirectionType.UP,\n    size = '9px',\n    thickness = '2px',\n}: IconChevronProps) => (\n    <span\n        className={`icon-chevron icon-chevron-${direction} ${className}`}\n        style={{\n            borderColor: color,\n            borderStyle: 'solid solid none none',\n            borderWidth: thickness,\n            display: 'inline-block',\n            height: size,\n            transform: `rotate(${rotations[direction]}deg)`,\n            width: size,\n        }}\n    />\n);\n\nexport default IconChevron;\n"],"file":"IconChevron.js"}