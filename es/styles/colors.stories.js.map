{"version":3,"sources":["../../src/styles/colors.stories.tsx"],"names":["React","Color","variables","mdNotes","bdlColors","WCAG_AA","isPaletteColor","hex","key","startsWith","includes","Object","keys","forEach","colorKey","colorHex","Array","isArray","paletteGroup","match","join","color","scssVariableName","contrastRatio","contrast","push","wrapper","display","flexDirection","flexWrap","palette","swatchContainer","alignItems","swatch","borderRadius","height","width","label","margin","LabelCell","props","minWidth","children","Swatch","backgroundColor","toLowerCase","toFixed","allColors","entries","sort","A","B","a","b","hsl","object","h","rgbNumber","map","name","colors","title","parameters","notes"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Color from 'color';\nimport * as variables from './variables';\nimport mdNotes from './colors.md';\n\ntype TSwatch = { scssVariableName: string; colorHex: string; colorKey: string; contrastRatio: number };\n\nconst bdlColors: { [k: string]: Array<TSwatch> } = {};\n\nconst WCAG_AA = 4.5; // minimum contrast ratio for text\n\nconst isPaletteColor = (hex: string, key: string) => {\n    return key.startsWith('bdl') && !key.includes('Neutral') && key !== 'bdlSecondaryBlue' && hex.startsWith('#');\n};\n\nObject.keys(variables).forEach(colorKey => {\n    const colorHex = (variables as { [k: string]: string | Array<string> })[colorKey];\n    if (Array.isArray(colorHex)) return;\n    if (isPaletteColor(colorHex, colorKey)) {\n        const paletteGroup = (colorKey.match(/[A-Z][a-z]+/g) as Array<string>).join(' ');\n\n        if (!bdlColors[paletteGroup]) {\n            bdlColors[paletteGroup] = [];\n        }\n\n        const color = Color(colorHex);\n        const scssVariableName = (colorKey.match(/(bdl)|([A-Z][a-z]+)|(\\d+)/g) as Array<string>).join('-');\n        const contrastRatio = color.contrast(Color('#fff'));\n\n        bdlColors[paletteGroup].push({ scssVariableName, colorHex, colorKey, contrastRatio });\n    }\n});\n\nconst wrapper: React.CSSProperties = {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n};\n\nconst palette: React.CSSProperties = {};\n\nconst swatchContainer: React.CSSProperties = {\n    display: 'flex',\n    alignItems: 'center',\n};\n\nconst swatch: React.CSSProperties = {\n    borderRadius: '4px',\n    height: '40px',\n    width: '200px',\n    display: 'inline-block',\n};\n\nconst label: React.CSSProperties = {\n    margin: '0 8px 0 16px',\n};\n\nconst LabelCell = (props: { children: React.ReactNode }) => <td style={{ minWidth: 240 }}>{props.children}</td>;\n\nconst Swatch = ({ color }: { color: TSwatch }) => (\n    <div style={swatchContainer}>\n        <span style={{ ...swatch, backgroundColor: color.colorHex }} />\n        <table style={label}>\n            <tr>\n                <LabelCell>\n                    <strong>SCSS:</strong> <code>${color.scssVariableName.toLowerCase()}</code>\n                </LabelCell>\n                <LabelCell>\n                    <strong title=\"WCAG contrast ratio against white background\">WCAG:</strong>{' '}\n                    <code>{color.contrastRatio.toFixed(2)}</code>{' '}\n                    {color.contrastRatio > WCAG_AA ? '(AA ✔︎)' : <s>(AA)</s>}\n                </LabelCell>\n            </tr>\n            <tr>\n                <LabelCell>\n                    <strong>JS:</strong> <code>{color.colorKey}</code>\n                </LabelCell>\n                <LabelCell>\n                    <strong>Hex:</strong> <code>{color.colorHex}</code>\n                </LabelCell>\n            </tr>\n        </table>\n    </div>\n);\n\nconst allColors = () => (\n    <div style={wrapper}>\n        <div>\n            <h4>Base</h4>\n            <div style={palette}>\n                <Swatch\n                    key=\"black\"\n                    color={{ scssVariableName: 'black', colorHex: '#000000', colorKey: 'black', contrastRatio: 100 }}\n                />\n                <Swatch\n                    key=\"white\"\n                    color={{ scssVariableName: 'white', colorHex: '#ffffff', colorKey: 'white', contrastRatio: 0 }}\n                />\n            </div>\n        </div>\n        {Object.entries(bdlColors)\n            .sort((A, B) => {\n                // Sort the palette by grayness (hue/saturation = 0) and then by color\n                const a = Color(A[1][0].colorHex);\n                const b = Color(B[1][0].colorHex);\n                if (a.hsl().object().h === 0) return -1;\n                if (b.hsl().object().h === 0) return 1;\n                return a.rgbNumber() - b.rgbNumber();\n            })\n            .map(([name, colors]) => (\n                <div key={name}>\n                    <h4>{name}</h4>\n                    <div style={palette}>\n                        {colors.map(color => (\n                            <Swatch key={color.colorKey} color={color} />\n                        ))}\n                    </div>\n                </div>\n            ))}\n    </div>\n);\n\nexport { allColors };\n\nexport default {\n    title: 'Theming|Colors',\n    parameters: {\n        notes: mdNotes,\n    },\n};\n"],"file":"colors.stories.js"}