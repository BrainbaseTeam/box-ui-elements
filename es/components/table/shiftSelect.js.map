{"version":3,"sources":["../../../src/components/table/shiftSelect.js"],"names":["Range","shiftSelect","prevSelection","prevTarget","target","anchor","subtract","union","Error","Array","prototype","slice","call","arguments"],"mappings":"AAAA,SAASA,KAAT,QAAsB,WAAtB;AAEA;;;;;;;;;;;;;;;;;;;AAkBA,SAASC,WAAT,CAAqBC,aAArB,EAAoCC,UAApC,EAAgDC,MAAhD,EAAwDC,MAAxD,EAAgE;AAC5D,MAAIF,UAAU,IAAIE,MAAd,IAAwBA,MAAM,IAAID,MAAtC,EAA8C;AAC1C;AACA,WAAOF,aAAa,CAACI,QAAd,CAAuB,IAAIN,KAAJ,CAAUG,UAAV,EAAsBE,MAAM,GAAG,CAA/B,CAAvB,EAA0DE,KAA1D,CAAgE,IAAIP,KAAJ,CAAUK,MAAV,EAAkBD,MAAM,GAAG,CAA3B,CAAhE,CAAP;AACH;;AACD,MAAID,UAAU,IAAIC,MAAd,IAAwBA,MAAM,IAAIC,MAAtC,EAA8C;AAC1C;AACA,WAAOH,aAAa,CAACI,QAAd,CAAuB,IAAIN,KAAJ,CAAUG,UAAV,EAAsBC,MAAM,GAAG,CAA/B,CAAvB,EAA0DG,KAA1D,CAAgE,IAAIP,KAAJ,CAAUI,MAAV,EAAkBC,MAAM,GAAG,CAA3B,CAAhE,CAAP;AACH;;AACD,MAAIA,MAAM,IAAIF,UAAV,IAAwBA,UAAU,IAAIC,MAA1C,EAAkD;AAC9C;AACA,WAAOF,aAAa,CAACK,KAAd,CAAoB,IAAIP,KAAJ,CAAUK,MAAV,EAAkBD,MAAM,GAAG,CAA3B,CAApB,CAAP;AACH;;AACD,MAAIC,MAAM,IAAID,MAAV,IAAoBA,MAAM,IAAID,UAAlC,EAA8C;AAC1C;AACA,WAAOD,aAAa,CAACI,QAAd,CAAuB,IAAIN,KAAJ,CAAUI,MAAV,EAAkBD,UAAU,GAAG,CAA/B,CAAvB,EAA0DI,KAA1D,CAAgE,IAAIP,KAAJ,CAAUK,MAAV,EAAkBD,MAAM,GAAG,CAA3B,CAAhE,CAAP;AACH;;AACD,MAAIA,MAAM,IAAIC,MAAV,IAAoBA,MAAM,IAAIF,UAAlC,EAA8C;AAC1C;AACA,WAAOD,aAAa,CAACI,QAAd,CAAuB,IAAIN,KAAJ,CAAUK,MAAV,EAAkBF,UAAU,GAAG,CAA/B,CAAvB,EAA0DI,KAA1D,CAAgE,IAAIP,KAAJ,CAAUI,MAAV,EAAkBC,MAAM,GAAG,CAA3B,CAAhE,CAAP;AACH;;AACD,MAAID,MAAM,IAAID,UAAV,IAAwBC,MAAM,IAAIC,MAAtC,EAA8C;AAC1C;AACA,WAAOH,aAAa,CAACK,KAAd,CAAoB,IAAIP,KAAJ,CAAUI,MAAV,EAAkBC,MAAM,GAAG,CAA3B,CAApB,CAAP;AACH;;AAED,QAAM,IAAIG,KAAJ,wCAC8BC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAC5BC,SAD4B,CACjB;AADiB,GAD9B,OAAN;AAKH;;AAED,eAAeZ,WAAf","sourcesContent":["import { Range } from 'immutable';\n\n/**\n * Computes the selection when shift-selecting rows.\n *\n * When doing ranges, we may unselect items that were selected in a previous range selection\n * There are 6 cases to handle:\n * [PrevTarget, Anchor, Target]\n * [PrevTarget, Target, Anchor]\n * [Anchor, PrevTarget, Target]\n * [Anchor, Target, PrevTarget]\n * [Target, Anchor, PrevTarget]\n * [Target, PrevTarget, Anchor]\n *\n * @param {Set<Number>} prevSelection\n * @param {Number} prevTarget\n * @param {Number} target\n * @param {Number} anchor\n * @return {Set<Number>}\n */\nfunction shiftSelect(prevSelection, prevTarget, target, anchor) {\n    if (prevTarget <= anchor && anchor <= target) {\n        // [PrevTarget, Anchor, Target]\n        return prevSelection.subtract(new Range(prevTarget, anchor + 1)).union(new Range(anchor, target + 1));\n    }\n    if (prevTarget <= target && target <= anchor) {\n        // [PrevTarget, Target, Anchor]\n        return prevSelection.subtract(new Range(prevTarget, target + 1)).union(new Range(target, anchor + 1));\n    }\n    if (anchor <= prevTarget && prevTarget <= target) {\n        // [Anchor, PrevTarget, Target]\n        return prevSelection.union(new Range(anchor, target + 1));\n    }\n    if (anchor <= target && target <= prevTarget) {\n        // [Anchor, Target, PrevTarget]\n        return prevSelection.subtract(new Range(target, prevTarget + 1)).union(new Range(anchor, target + 1));\n    }\n    if (target <= anchor && anchor <= prevTarget) {\n        // [Target, Anchor, PrevTarget]\n        return prevSelection.subtract(new Range(anchor, prevTarget + 1)).union(new Range(target, anchor + 1));\n    }\n    if (target <= prevTarget && target <= anchor) {\n        // [Target, PrevTarget, Anchor]\n        return prevSelection.union(new Range(target, anchor + 1));\n    }\n\n    throw new Error(\n        `Invalid shiftSelect params: [${Array.prototype.slice.call(\n            arguments, // eslint-disable-line prefer-rest-params\n        )}]`,\n    );\n}\n\nexport default shiftSelect;\n"],"file":"shiftSelect.js"}