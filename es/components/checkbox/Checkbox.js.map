{"version":3,"sources":["../../../src/components/checkbox/Checkbox.js"],"names":["React","CheckboxTooltip","Checkbox","className","description","fieldLabel","hideLabel","id","isChecked","isDisabled","label","name","onChange","subsection","tooltip","rest","checkboxLabel"],"mappings":";;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,OAAO,iBAAP;;AAgCA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAcJ;AAAA,4BAbTC,SAaS;AAAA,MAbTA,SAaS,+BAbG,EAaH;AAAA,MAZTC,WAYS,QAZTA,WAYS;AAAA,MAXTC,UAWS,QAXTA,UAWS;AAAA,MAVTC,SAUS,QAVTA,SAUS;AAAA,MATTC,EASS,QATTA,EASS;AAAA,MARTC,SAQS,QARTA,SAQS;AAAA,MAPTC,UAOS,QAPTA,UAOS;AAAA,MANTC,KAMS,QANTA,KAMS;AAAA,MALTC,IAKS,QALTA,IAKS;AAAA,MAJTC,QAIS,QAJTA,QAIS;AAAA,MAHTC,UAGS,QAHTA,UAGS;AAAA,MAFTC,OAES,QAFTA,OAES;AAAA,MADNC,IACM;;AACT,MAAMC,aAAa;AAAA;AACf;AACA;AAAO,IAAA,SAAS,EAAC;AAAjB,kBACI;AACI,IAAA,OAAO,EAAER,SADb;AAEI,IAAA,QAAQ,EAAEC,UAFd;AAGI,IAAA,EAAE,EAAEF,EAHR;AAII,IAAA,IAAI,EAAEI,IAJV;AAKI,IAAA,QAAQ,EAAEC,QALd;AAMI,IAAA,IAAI,EAAC;AANT,KAOQG,IAPR,EADJ,eAWI;AAAM,IAAA,SAAS,EAAC;AAAhB,IAXJ,eAYI;AAAM,IAAA,SAAS,EAAET,SAAS,GAAG,sBAAH,GAA4B;AAAtD,KAA2DI,KAA3D,CAZJ,CAFJ;AAkBA,sBACI;AAAK,IAAA,SAAS,+CAAwCP,SAAxC,cAAqDM,UAAU,GAAG,aAAH,GAAmB,EAAlF;AAAd,KACKJ,UAAU,iBAAI;AAAK,IAAA,SAAS,EAAC;AAAf,KAAwBA,UAAxB,CADnB,EAEKS,OAAO,gBAAG,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAEE,aAAxB;AAAuC,IAAA,OAAO,EAAEF;AAAhD,IAAH,GAAiEE,aAF7E,EAGKZ,WAAW,gBAAG;AAAK,IAAA,SAAS,EAAC;AAAf,KAAuCA,WAAvC,CAAH,GAA+D,IAH/E,EAIKS,UAAU,gBAAG;AAAK,IAAA,SAAS,EAAC;AAAf,KAAsCA,UAAtC,CAAH,GAA6D,IAJ5E,CADJ;AAQH,CAzCD;;AA4CA,eAAeX,QAAf","sourcesContent":["// @flow\nimport * as React from 'react';\n\nimport CheckboxTooltip from './CheckboxTooltip';\n\nimport './Checkbox.scss';\n\ntype Props = {\n    className?: string,\n    /** Description to the checkbox */\n    description?: React.Node,\n    /** Label for the field shown on top of the checkbox */\n    fieldLabel?: React.Node,\n    /** Hides the checkbox label when true */\n    hideLabel?: boolean,\n    /** Unique `id` for the input */\n    id?: string,\n    /** Checkbox checked state */\n    isChecked?: boolean, // @TODO: eventually call this `checked`\n    /** Checkbox disabled state */\n    isDisabled?: boolean, // @TODO: eventually call this `disabled`\n    /** Label displayed for the input */\n    label: React.Node,\n    /** Name of the input */\n    name: string,\n    /** blur callback function called with event as the argument */\n    onBlur?: (e: SyntheticInputEvent<HTMLInputElement>) => any,\n    /** change callback function called with event as the argument */\n    onChange?: (e: SyntheticInputEvent<HTMLInputElement>) => any,\n    /** Subsection below the checkbox */\n    subsection?: React.Node,\n    /** Info tooltip text next to the checkbox label */\n    tooltip?: string,\n    /** optional value for the checkbox */\n    value?: any,\n};\n\nconst Checkbox = ({\n    className = '',\n    description,\n    fieldLabel,\n    hideLabel,\n    id,\n    isChecked,\n    isDisabled,\n    label,\n    name,\n    onChange,\n    subsection,\n    tooltip,\n    ...rest // @TODO: eventually remove `rest` in favor of explicit props\n}: Props) => {\n    const checkboxLabel = (\n        // eslint-disable-next-line jsx-a11y/label-has-for\n        <label className=\"checkbox-label\">\n            <input\n                checked={isChecked}\n                disabled={isDisabled}\n                id={id}\n                name={name}\n                onChange={onChange}\n                type=\"checkbox\"\n                {...rest}\n            />\n            {/* This span is used for the before/after checkbox styles, mouse clicks will target this element */}\n            <span className=\"checkbox-pointer-target\" />\n            <span className={hideLabel ? 'accessibility-hidden' : ''}>{label}</span>\n        </label>\n    );\n\n    return (\n        <div className={`checkbox-container-box-ui-elements ${className} ${isDisabled ? 'is-disabled' : ''}`}>\n            {fieldLabel && <div className=\"label\">{fieldLabel}</div>}\n            {tooltip ? <CheckboxTooltip label={checkboxLabel} tooltip={tooltip} /> : checkboxLabel}\n            {description ? <div className=\"checkbox-description\">{description}</div> : null}\n            {subsection ? <div className=\"checkbox-subsection\">{subsection}</div> : null}\n        </div>\n    );\n};\n\nexport type CheckboxProps = Props;\nexport default Checkbox;\n"],"file":"Checkbox.js"}