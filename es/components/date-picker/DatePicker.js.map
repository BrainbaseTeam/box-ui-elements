{"version":3,"sources":["../../../src/components/date-picker/DatePicker.js"],"names":["React","defineMessages","injectIntl","FormattedMessage","classNames","Pikaday","range","RESIN_TAG_TARGET","IconAlert","IconCalendar","IconClear","Label","PlainButton","Tooltip","convertDateToUnixMidnightTime","messages","previousMonth","nextMonth","iconAlertText","dateClearButton","chooseDate","TOGGLE_DELAY_MS","ISO_STRING_DATE_FORMAT","UTC_TIME_DATE_FORMAT","UNIX_TIME_DATE_FORMAT","UTC_ISO_STRING_DATE_FORMAT","ENTER_KEY","ESCAPE_KEY","TAB_KEY","stub","convertUTCToLocal","date","dateString","toUTCString","dateStringWithoutTimeZone","slice","Date","getFormattedDate","format","utcDate","toISOString","getTime","DatePicker","onChange","props","formattedDate","formatValue","dateInputEl","focus","event","isTextInputAllowed","datePicker","isVisible","stopPropagation","key","preventDefault","hide","onBlur","nextActiveElement","relatedTarget","document","activeElement","datePickerButtonEl","shouldStayClosed","setTimeout","inputDate","value","getDate","onSelectHandler","focusDatePicker","displayFormat","intl","formatDate","dateFormat","setDate","maxDate","minDate","yearRange","formatMessage","defaultValue","year","getFullYear","i18n","months","map","month","weekdays","weekday","weekdaysShort","blurFieldOnSelect","setDefaultDate","defaultDate","field","position","showDaysInNextAndPreviousMonths","onSelect","toString","formatDisplay","updateDateInputValue","nextProps","nextValue","nextMinDate","nextMaxDate","setMinDate","gotoDate","setMaxDate","destroy","className","description","error","errorTooltipPosition","hideLabel","hideOptionalLabel","inputProps","isClearable","isDisabled","isRequired","label","name","onFocus","placeholder","resinTarget","classes","resinTargetAttr","valueAttr","onChangeAttr","ref","handleInputBlur","handleInputKeyDown","clearDate","handleButtonClick","Component","DatePickerBase"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport Pikaday from 'pikaday';\nimport range from 'lodash/range';\n\nimport { RESIN_TAG_TARGET } from '../../common/variables';\nimport IconAlert from '../../icons/general/IconAlert';\nimport IconCalendar from '../../icons/general/IconCalendar';\nimport IconClear from '../../icons/general/IconClear';\n\nimport Label from '../label';\nimport PlainButton from '../plain-button';\nimport Tooltip from '../tooltip';\n\nimport { convertDateToUnixMidnightTime } from '../../utils/datetime';\n\nimport './DatePicker.scss';\n\nconst messages = defineMessages({\n    previousMonth: {\n        defaultMessage: 'Previous Month',\n        description: 'Previous month button for a date picker calendar',\n        id: 'boxui.base.previousMonth',\n    },\n    nextMonth: {\n        defaultMessage: 'Next Month',\n        description: 'Next month button for a date picker calendar',\n        id: 'boxui.base.nextMonth',\n    },\n    iconAlertText: {\n        defaultMessage: 'Invalid Date',\n        description: 'Date entered is invalid',\n        id: 'boxui.datePicker.iconAlertText',\n    },\n    dateClearButton: {\n        defaultMessage: 'Clear Date',\n        description: 'Button for clearing date picker',\n        id: 'boxui.datePicker.dateClearButton',\n    },\n    chooseDate: {\n        defaultMessage: 'Choose Date',\n        description: 'Button for opening date picker',\n        id: 'boxui.datePicker.chooseDate',\n    },\n});\n\nconst TOGGLE_DELAY_MS = 300;\nconst ISO_STRING_DATE_FORMAT = 'isoString';\nconst UTC_TIME_DATE_FORMAT = 'utcTime';\nconst UNIX_TIME_DATE_FORMAT = 'unixTime';\nconst UTC_ISO_STRING_DATE_FORMAT = 'utcISOString';\nconst ENTER_KEY = 'Enter';\nconst ESCAPE_KEY = 'Escape';\nconst TAB_KEY = 'Tab';\n\nconst stub = () => {};\n\n/**\n * Converts date from being relative to GMT, to being relative to browser\n * timezone. E.g., Thu Jun 29 2017 00:00:00 GMT =>\n * Thu Jun 29 2017 00:00:00 GMT-0700 (PDT)\n * @param {Date} date UTC date\n * @returns {Date} date Local date\n */\nfunction convertUTCToLocal(date: Date) {\n    const dateString = date.toUTCString();\n    // Remove ` GMT` from the timestamp string\n    const dateStringWithoutTimeZone = dateString.slice(0, -4);\n    return new Date(dateStringWithoutTimeZone);\n}\n\nfunction getFormattedDate(date, format) {\n    if (!date) {\n        return '';\n    }\n\n    let utcDate;\n\n    switch (format) {\n        case ISO_STRING_DATE_FORMAT:\n            return date.toISOString();\n        case UTC_TIME_DATE_FORMAT:\n            return convertDateToUnixMidnightTime(date);\n        case UTC_ISO_STRING_DATE_FORMAT:\n            utcDate = new Date(convertDateToUnixMidnightTime(date));\n            return utcDate.toISOString();\n        default:\n            return date.getTime();\n    }\n}\n\ntype Props = {\n    /** Add a css class to the component */\n    className?: string,\n    /** The format of the date value for form submit */\n    dateFormat?: string,\n    /** Some optional description */\n    description?: React.Node,\n    /** The format of the date displayed in the input field */\n    displayFormat?: Object,\n    /** Error message */\n    error?: React.Node,\n    /** Position of error message tooltip */\n    errorTooltipPosition?:\n        | 'bottom-left'\n        | 'bottom-center'\n        | 'bottom-right'\n        | 'middle-left'\n        | 'middle-right'\n        | 'top-center'\n        | 'top-left'\n        | 'top-right',\n    /** Whether to show or hide the field's label */\n    hideLabel?: boolean,\n    /** Whether show or hide the 'Optional' label */\n    hideOptionalLabel?: boolean,\n    /** Props that will be applied on the input element */\n    inputProps?: Object,\n    intl: Object,\n    /** Is input clearable */\n    isClearable?: boolean,\n    /** Is input disabled */\n    isDisabled?: boolean,\n    /** Is input required */\n    isRequired?: boolean,\n    /** Is user allowed to manually input a value (WARNING: this doesn't work with internationalization) */\n    isTextInputAllowed?: boolean,\n    /** Label displayed for the text input */\n    label: React.Node,\n    /** The maximum date allowed to be selected */\n    maxDate?: Date,\n    /** The minimum date allowed to be selected */\n    minDate?: Date,\n    /** Name of the text input */\n    name?: string,\n    /** Called when input lose focus */\n    onBlur?: Function,\n    /** Called when input is changed, passed the selected Date */\n    onChange?: Function,\n    /** Called when input receives focus */\n    onFocus?: Function,\n    /** Placeholder for the text input */\n    placeholder?: string,\n    /** Resin tag */\n    resinTarget?: string,\n    /** Date to set the input */\n    value?: Date,\n    yearRange?: number | Array<number>,\n};\n\nclass DatePicker extends React.Component<Props> {\n    static defaultProps = {\n        className: '',\n        dateFormat: UNIX_TIME_DATE_FORMAT,\n        displayFormat: {},\n        error: '',\n        errorTooltipPosition: 'bottom-left',\n        inputProps: {},\n        isClearable: true,\n        isTextInputAllowed: false,\n        yearRange: 10,\n    };\n\n    componentDidMount() {\n        const { dateFormat, intl, maxDate, minDate, value, yearRange, isTextInputAllowed } = this.props;\n        const { formatDate, formatMessage } = intl;\n        const { nextMonth, previousMonth } = messages;\n        let defaultValue = value;\n        // When date format is utcTime, initial date needs to be converted from being relative to GMT to being\n        // relative to browser timezone\n        if (dateFormat === UTC_TIME_DATE_FORMAT && typeof value !== 'undefined') {\n            defaultValue = convertUTCToLocal(value);\n        }\n        // Make sure the DST detection algorithm in browsers is up-to-date\n        const year = new Date().getFullYear();\n\n        const i18n = {\n            previousMonth: formatMessage(previousMonth),\n            nextMonth: formatMessage(nextMonth),\n            months: range(12).map(month => formatDate(new Date(year, month, 15), { month: 'long' })),\n            // weekdays must start with Sunday, so array of dates below is May 1st-8th, 2016\n            weekdays: range(1, 8).map(date => formatDate(new Date(2016, 4, date), { weekday: 'long' })),\n            weekdaysShort: range(1, 8).map(date => formatDate(new Date(2016, 4, date), { weekday: 'narrow' })),\n        };\n\n        this.datePicker = new Pikaday({\n            blurFieldOnSelect: false, // Available in pikaday > 1.5.1\n            setDefaultDate: true,\n            defaultDate: defaultValue,\n            field: this.dateInputEl,\n            maxDate,\n            minDate,\n            position: 'bottom left',\n            i18n,\n            showDaysInNextAndPreviousMonths: true,\n            onSelect: this.onSelectHandler,\n            yearRange,\n            toString: this.formatDisplay,\n        });\n\n        if (isTextInputAllowed) {\n            this.updateDateInputValue(this.formatDisplay(defaultValue));\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps: Props) {\n        const { value: nextValue, minDate: nextMinDate, maxDate: nextMaxDate } = nextProps;\n        const { value, minDate, maxDate, isTextInputAllowed } = this.props;\n\n        // only set date when props change\n        if (\n            (nextValue && !value) ||\n            (!nextValue && value) ||\n            (nextValue && value && nextValue.getTime() !== value.getTime())\n        ) {\n            this.datePicker.setDate(nextValue);\n        }\n        // If text input is allowed the dateInputEl will act as an uncontrolled input and\n        // we need to set formatted value manually.\n        if (isTextInputAllowed) {\n            this.updateDateInputValue(this.formatDisplay(nextValue));\n        }\n        if (\n            (nextMinDate && !minDate) ||\n            (!nextMinDate && minDate) ||\n            (nextMinDate && minDate && nextMinDate.getTime() !== minDate.getTime())\n        ) {\n            this.datePicker.setMinDate(nextMinDate);\n\n            if (this.datePicker.getDate() < nextMinDate) {\n                this.datePicker.gotoDate(nextMinDate);\n            }\n        }\n        if (\n            (nextMaxDate && !maxDate) ||\n            (!nextMaxDate && maxDate) ||\n            (nextMaxDate && maxDate && nextMaxDate.getTime() !== maxDate.getTime())\n        ) {\n            this.datePicker.setMaxDate(nextMaxDate);\n\n            if (this.datePicker.getDate() > nextMaxDate) {\n                this.datePicker.gotoDate(nextMaxDate);\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        this.datePicker.destroy();\n    }\n\n    onSelectHandler = (date: ?Date) => {\n        const { onChange } = this.props;\n        if (onChange) {\n            const formattedDate = this.formatValue(date);\n            onChange(date, formattedDate);\n        }\n    };\n\n    updateDateInputValue(value: string) {\n        if (this.dateInputEl) {\n            this.dateInputEl.value = value;\n        }\n    }\n\n    dateInputEl: ?HTMLInputElement;\n\n    datePicker: Pikaday;\n\n    datePickerButtonEl: ?HTMLButtonElement;\n\n    // Used to prevent bad sequences of hide/show when toggling the datepicker button\n    shouldStayClosed = false;\n\n    focusDatePicker = () => {\n        // By default, this will open the datepicker too\n        if (this.dateInputEl) {\n            this.dateInputEl.focus();\n        }\n    };\n\n    handleInputKeyDown = (event: SyntheticKeyboardEvent<HTMLInputElement>) => {\n        const { isTextInputAllowed } = this.props;\n\n        if (this.datePicker.isVisible()) {\n            event.stopPropagation();\n        }\n\n        // Stops up/down arrow & spacebar from moving page scroll position since pikaday does not preventDefault correctly\n        if (!isTextInputAllowed && event.key !== TAB_KEY) {\n            event.preventDefault();\n        }\n\n        if (isTextInputAllowed && event.key === ENTER_KEY) {\n            event.preventDefault();\n        }\n\n        if (event.key === ENTER_KEY || event.key === ESCAPE_KEY || event.key === ' ') {\n            // Since pikaday auto-selects when you move the select box, enter/space don't do anything but close the date picker\n            if (this.datePicker.isVisible()) {\n                this.datePicker.hide();\n            }\n        }\n    };\n\n    handleInputBlur = (event: SyntheticFocusEvent<HTMLInputElement>) => {\n        const { onBlur, isTextInputAllowed } = this.props;\n\n        const nextActiveElement = event.relatedTarget || document.activeElement;\n\n        // This is mostly here to cancel out the pikaday hide() on blur\n        if (this.datePicker.isVisible() && nextActiveElement && nextActiveElement === this.datePickerButtonEl) {\n            this.shouldStayClosed = true;\n            setTimeout(() => {\n                this.shouldStayClosed = false;\n            }, TOGGLE_DELAY_MS);\n        }\n\n        if (onBlur) {\n            onBlur(event);\n        }\n\n        // Since we Fire parent onChange event if isTextInputAllowed\n        // fire it on blur if the user typed a correct date format\n        let inputDate: ?Date = null;\n\n        if (this.dateInputEl) {\n            inputDate = new Date(this.dateInputEl.value);\n        }\n\n        if (isTextInputAllowed && inputDate && inputDate.getDate()) {\n            this.onSelectHandler(inputDate);\n        }\n    };\n\n    handleButtonClick = (event: SyntheticEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n\n        if (!this.shouldStayClosed) {\n            this.focusDatePicker();\n        }\n    };\n\n    formatDisplay = (date?: Date): string => {\n        const { displayFormat, intl } = this.props;\n        return date ? intl.formatDate(date, displayFormat) : '';\n    };\n\n    formatValue = (date: ?Date) => {\n        const { dateFormat } = this.props;\n        return getFormattedDate(date, dateFormat);\n    };\n\n    clearDate = (event: SyntheticEvent<HTMLButtonElement>) => {\n        event.preventDefault(); // so datepicker doesn't open after clearing\n        this.datePicker.setDate(null);\n        this.onSelectHandler(null);\n    };\n\n    render() {\n        const {\n            className,\n            description,\n            error,\n            errorTooltipPosition,\n            hideLabel,\n            hideOptionalLabel,\n            inputProps,\n            intl,\n            isClearable,\n            isDisabled,\n            isRequired,\n            isTextInputAllowed,\n            label,\n            name,\n            onFocus,\n            placeholder,\n            resinTarget,\n            value,\n        } = this.props;\n\n        const { formatMessage } = intl;\n        const classes = classNames(className, 'date-picker-wrapper', {\n            'show-clear-btn': !!value,\n            'show-error': !!error,\n        });\n\n        const resinTargetAttr = resinTarget ? { [RESIN_TAG_TARGET]: resinTarget } : {};\n\n        const valueAttr = isTextInputAllowed\n            ? { defaultValue: this.formatDisplay(value) }\n            : { value: this.formatDisplay(value) };\n\n        const onChangeAttr = isTextInputAllowed\n            ? {}\n            : {\n                  onChange: stub,\n              }; /* fixes proptype error about readonly field (not adding readonly so constraint validation works) */\n\n        return (\n            <div className={classes}>\n                <span className=\"date-picker-icon-holder\">\n                    <Label hideLabel={hideLabel} showOptionalText={!hideOptionalLabel && !isRequired} text={label}>\n                        {!!description && <i className=\"date-picker-description\">{description}</i>}\n                        <Tooltip\n                            className=\"date-picker-error-tooltip\"\n                            isShown={!!error}\n                            position={errorTooltipPosition}\n                            text={error || ''}\n                            theme=\"error\"\n                        >\n                            <input\n                                ref={ref => {\n                                    this.dateInputEl = ref;\n                                }}\n                                className=\"date-picker-input\"\n                                disabled={isDisabled}\n                                onBlur={this.handleInputBlur}\n                                placeholder={placeholder || formatMessage(messages.chooseDate)}\n                                required={isRequired}\n                                type=\"text\"\n                                {...onChangeAttr}\n                                onFocus={onFocus}\n                                onKeyDown={this.handleInputKeyDown}\n                                {...resinTargetAttr}\n                                {...inputProps}\n                                {...valueAttr}\n                            />\n                        </Tooltip>\n                    </Label>\n                    {isClearable && !!value && !isDisabled ? (\n                        <PlainButton\n                            aria-label={formatMessage(messages.dateClearButton)}\n                            className=\"date-picker-clear-btn\"\n                            onClick={this.clearDate}\n                            type=\"button\"\n                        >\n                            <IconClear height={12} width={12} />\n                        </PlainButton>\n                    ) : null}\n                    {error ? (\n                        <IconAlert\n                            className=\"date-picker-icon-alert\"\n                            height={13}\n                            title={<FormattedMessage {...messages.iconAlertText} />}\n                            width={13}\n                        />\n                    ) : null}\n                    <PlainButton\n                        aria-label={formatMessage(messages.chooseDate)}\n                        className=\"date-picker-open-btn\"\n                        disabled={isDisabled}\n                        getDOMRef={ref => {\n                            this.datePickerButtonEl = ref;\n                        }}\n                        onClick={this.handleButtonClick}\n                        type=\"button\"\n                    >\n                        <IconCalendar height={17} width={16} />\n                    </PlainButton>\n                    <input\n                        className=\"date-picker-unix-time-input\"\n                        name={name}\n                        readOnly\n                        type=\"hidden\"\n                        value={this.formatValue(value)}\n                    />\n                </span>\n            </div>\n        );\n    }\n}\n\nexport { DatePicker as DatePickerBase };\nexport default injectIntl(DatePicker);\n"],"file":"DatePicker.js"}