{"version":3,"sources":["../../../src/components/slide-carousel/SlidePanels.js"],"names":["React","SlidePanels","containerEl","focus","event","props","children","selectedIndex","numOptions","Children","count","nextIndex","key","handleSelection","preventDefault","stopPropagation","index","onSelection","focusOnContainerElement","getPanelIdFromValue","style","handleKeyDown","map","child","i","isSelected","Component","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;IAUMC,W;;;;;;;;;;;;;;;;;;8EAGwB,YAAM;AAC5B,UAAI,MAAKC,WAAT,EAAsB;AAClB,cAAKA,WAAL,CAAiBC,KAAjB;AACH;AACJ,K;;oEAEe,UAACC,KAAD,EAAmD;AAAA,wBAC3B,MAAKC,KADsB;AAAA,UACvDC,QADuD,eACvDA,QADuD;AAAA,UAC7CC,aAD6C,eAC7CA,aAD6C;AAG/D,UAAMC,UAAU,GAAGR,KAAK,CAACS,QAAN,CAAeC,KAAf,CAAqBJ,QAArB,CAAnB;AAEA,UAAIK,SAAS,GAAG,IAAhB;;AACA,cAAQP,KAAK,CAACQ,GAAd;AACI,aAAK,YAAL;AACID,UAAAA,SAAS,GAAG,CAACJ,aAAa,GAAG,CAAjB,IAAsBC,UAAlC;AACA;;AAEJ,aAAK,WAAL;AACIG,UAAAA,SAAS,GAAG,CAACJ,aAAa,GAAG,CAAhB,GAAoBC,UAArB,IAAmCA,UAA/C;AACA;;AAEJ;AACI;AAVR;;AAaA,UAAIG,SAAS,KAAK,IAAlB,EAAwB;AACpB,cAAKE,eAAL,CAAqBF,SAArB;;AACAP,QAAAA,KAAK,CAACU,cAAN;AACAV,QAAAA,KAAK,CAACW,eAAN;AACH;AACJ,K;;sEAEiB,UAACC,KAAD,EAAmB;AAAA,UACzBC,WADyB,GACT,MAAKZ,KADI,CACzBY,WADyB;;AAEjC,YAAKC,uBAAL;;AACA,UAAID,WAAJ,EAAiB;AACbA,QAAAA,WAAW,CAACD,KAAD,CAAX;AACH;AACJ,K;;;;;;;6BAEQ;AAAA;;AAAA,yBAC2D,KAAKX,KADhE;AAAA,UACGc,mBADH,gBACGA,mBADH;AAAA,UACwBb,QADxB,gBACwBA,QADxB;AAAA,UACkCC,aADlC,gBACkCA,aADlC;AAAA,UACiDa,KADjD,gBACiDA,KADjD;AAGL,aACI;AACA;AACI,UAAA,GAAG,EAAE,aAAAlB,WAAW,EAAI;AAChB,YAAA,MAAI,CAACA,WAAL,GAAmBA,WAAnB;AACH,WAHL;AAII,UAAA,SAAS,EAAC,cAJd;AAKI,UAAA,SAAS,EAAE,KAAKmB,aALpB;AAMI,UAAA,KAAK,EAAED,KANX,CAOI;AAPJ;AAQI,UAAA,QAAQ,EAAC;AARb,WAUKpB,KAAK,CAACS,QAAN,CAAea,GAAf,CAAmBhB,QAAnB,EAA6B,UAACiB,KAAD,EAAQC,CAAR,EAAc;AACxC,cAAMC,UAAU,GAAGD,CAAC,KAAKjB,aAAzB;AACA,iBACI;AACI,YAAA,GAAG,EAAEiB,CADT;AAEI,2BAAa,CAACC,UAFlB;AAGI,YAAA,SAAS,EAAC,aAHd;AAII,YAAA,EAAE,EAAEN,mBAAmB,CAACK,CAAD,CAJ3B;AAKI,YAAA,IAAI,EAAC;AALT,aAOKD,KAPL,CADJ;AAWH,SAbA,CAVL;AAFJ;AA4BH;;;;EA1EqBvB,KAAK,CAAC0B,S;;AA6EhCzB,WAAW,CAAC0B,WAAZ,GAA0B,aAA1B;AAEA,eAAe1B,WAAf","sourcesContent":["// @flow\nimport * as React from 'react';\n\ntype Props = {\n    children?: React.Node,\n    getPanelIdFromValue: Function,\n    onSelection?: Function,\n    selectedIndex: number,\n    style?: Object,\n};\n\nclass SlidePanels extends React.Component<Props> {\n    containerEl: ?HTMLDivElement;\n\n    focusOnContainerElement = () => {\n        if (this.containerEl) {\n            this.containerEl.focus();\n        }\n    };\n\n    handleKeyDown = (event: SyntheticKeyboardEvent<HTMLDivElement>) => {\n        const { children, selectedIndex } = this.props;\n\n        const numOptions = React.Children.count(children);\n\n        let nextIndex = null;\n        switch (event.key) {\n            case 'ArrowRight':\n                nextIndex = (selectedIndex + 1) % numOptions;\n                break;\n\n            case 'ArrowLeft':\n                nextIndex = (selectedIndex - 1 + numOptions) % numOptions;\n                break;\n\n            default:\n                break;\n        }\n\n        if (nextIndex !== null) {\n            this.handleSelection(nextIndex);\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleSelection = (index: number) => {\n        const { onSelection } = this.props;\n        this.focusOnContainerElement();\n        if (onSelection) {\n            onSelection(index);\n        }\n    };\n\n    render() {\n        const { getPanelIdFromValue, children, selectedIndex, style } = this.props;\n\n        return (\n            // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n            <div\n                ref={containerEl => {\n                    this.containerEl = containerEl;\n                }}\n                className=\"slide-panels\"\n                onKeyDown={this.handleKeyDown}\n                style={style}\n                // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n                tabIndex=\"0\"\n            >\n                {React.Children.map(children, (child, i) => {\n                    const isSelected = i === selectedIndex;\n                    return (\n                        <div\n                            key={i}\n                            aria-hidden={!isSelected}\n                            className=\"slide-panel\"\n                            id={getPanelIdFromValue(i)}\n                            role=\"tabpanel\"\n                        >\n                            {child}\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nSlidePanels.displayName = 'SlidePanels';\n\nexport default SlidePanels;\n"],"file":"SlidePanels.js"}