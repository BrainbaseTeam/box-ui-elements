{"version":3,"sources":["../../../src/components/menu/MenuItem.tsx"],"names":["React","classNames","omit","RadarAnimation","MenuItem","event","props","isDisabled","onClick","stopPropagation","preventDefault","children","className","isSelectItem","isSelected","showRadar","rest","menuItemProps","role","tabIndex","onClickHandler","menuItem","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAOC,cAAP,MAA2B,UAA3B;;IA2BMC,Q;;;;;;;;;;;;;;;;;;qEACe,UAACC,KAAD,EAAwD;AAAA,wBACrC,MAAKC,KADgC;AAAA,UAC7DC,UAD6D,eAC7DA,UAD6D;AAAA,UACjDC,OADiD,eACjDA,OADiD,EAGrE;;AACA,UAAID,UAAJ,EAAgB;AACZF,QAAAA,KAAK,CAACI,eAAN;AACAJ,QAAAA,KAAK,CAACK,cAAN;AAEA;AACH;;AAED,UAAIF,OAAJ,EAAa;AACTA,QAAAA,OAAO,CAACH,KAAD,CAAP;AACH;AACJ,K;;;;;;;6BAEQ;AAAA,yBACqF,KAAKC,KAD1F;AAAA,UACGK,QADH,gBACGA,QADH;AAAA,UACaC,SADb,gBACaA,SADb;AAAA,UACwBL,UADxB,gBACwBA,UADxB;AAAA,UACoCM,YADpC,gBACoCA,YADpC;AAAA,UACkDC,UADlD,gBACkDA,UADlD;AAAA,UAC8DC,SAD9D,gBAC8DA,SAD9D;AAAA,UAC4EC,IAD5E;;AAEL,UAAMC,aAA4B,GAAGf,IAAI,CAACc,IAAD,EAAO,CAAC,MAAD,EAAS,UAAT,EAAqB,SAArB,CAAP,CAAzC;AAEAC,MAAAA,aAAa,CAACL,SAAd,GAA0BX,UAAU,CAAC,WAAD,EAAcW,SAAd,EAAyB;AACzD,0BAAkBC,YADuC;AAEzD,uBAAeC;AAF0C,OAAzB,CAApC;AAIAG,MAAAA,aAAa,CAACC,IAAd,GAAqBL,YAAY,GAAG,eAAH,GAAqB,UAAtD;AACAI,MAAAA,aAAa,CAACE,QAAd,GAAyB,CAAC,CAA1B;AACAF,MAAAA,aAAa,CAACT,OAAd,GAAwB,KAAKY,cAA7B;;AAEA,UAAIP,YAAJ,EAAkB;AACdI,QAAAA,aAAa,CAAC,cAAD,CAAb,GAAgCH,UAAhC;AACH;;AAED,UAAIP,UAAJ,EAAgB;AACZU,QAAAA,aAAa,CAAC,eAAD,CAAb,GAAiC,MAAjC;AACH;;AAED,UAAII,QAAQ,GAAG,0BAAQJ,aAAR,EAAwBN,QAAxB,CAAf;;AACA,UAAII,SAAJ,EAAe;AACXM,QAAAA,QAAQ,GAAG,oBAAC,cAAD,QAAiBA,QAAjB,CAAX;AACH;;AAED,aAAOA,QAAP;AACH;;;;EA3CkBrB,KAAK,CAACsB,S;;AA8C7B,eAAelB,QAAf","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\n\nimport RadarAnimation from '../radar';\n\nexport interface MenuItemProps {\n    /** 'aria-checked' - ARIA attribute for checkbox elements */\n    'aria-checked'?: boolean;\n    /** 'aria-disabled' - ARIA attribute describing whether the menu item is disabled */\n    'aria-disabled'?: boolean | 'true' | 'false';\n    /** children - menu item content */\n    children?: Array<React.ReactChild> | React.ReactChild;\n    /** className - CSS class name for the menu item */\n    className?: string;\n    /** isDisabled - whether the menu item is disabled */\n    isDisabled?: boolean;\n    /** isSelectItem - whether the menu item is a checkbox element */\n    isSelectItem?: boolean;\n    /** isSelected - whether the menu item is selected */\n    isSelected?: boolean;\n    /** onClick - function called when the menu item is clicked */\n    onClick?: (event: React.MouseEvent<HTMLLIElement, MouseEvent>) => void;\n    /** role - ARIA role for the menu item */\n    role?: string;\n    /** showRadar - whether the radar component is shown */\n    showRadar?: boolean;\n    /** tabIndex - indicator of whether the menu item is focusable */\n    tabIndex?: number;\n}\n\nclass MenuItem extends React.Component<MenuItemProps> {\n    onClickHandler = (event: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\n        const { isDisabled, onClick } = this.props;\n\n        // If aria-disabled is passed as a prop, we should ignore clicks on this menu item\n        if (isDisabled) {\n            event.stopPropagation();\n            event.preventDefault();\n\n            return;\n        }\n\n        if (onClick) {\n            onClick(event);\n        }\n    };\n\n    render() {\n        const { children, className, isDisabled, isSelectItem, isSelected, showRadar, ...rest } = this.props;\n        const menuItemProps: MenuItemProps = omit(rest, ['role', 'tabIndex', 'onClick']);\n\n        menuItemProps.className = classNames('menu-item', className, {\n            'is-select-item': isSelectItem,\n            'is-selected': isSelected,\n        });\n        menuItemProps.role = isSelectItem ? 'menuitemradio' : 'menuitem';\n        menuItemProps.tabIndex = -1;\n        menuItemProps.onClick = this.onClickHandler;\n\n        if (isSelectItem) {\n            menuItemProps['aria-checked'] = isSelected;\n        }\n\n        if (isDisabled) {\n            menuItemProps['aria-disabled'] = 'true';\n        }\n\n        let menuItem = <li {...menuItemProps}>{children}</li>;\n        if (showRadar) {\n            menuItem = <RadarAnimation>{menuItem}</RadarAnimation>;\n        }\n\n        return menuItem;\n    }\n}\n\nexport default MenuItem;\n"],"file":"MenuItem.js"}