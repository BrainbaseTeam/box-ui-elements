{"version":3,"sources":["../../../src/components/menu/Menu.js"],"names":["React","omit","classNames","MENU_ITEM_SELECTOR","TOP_LEVEL_MENU_ITEM_SELECTOR","SUBMENU_ITEM_SELECTOR","stopPropagationAndPreventDefault","event","stopPropagation","preventDefault","Menu","props","initialFocusIndex","isHidden","undefined","setTimeout","setFocus","menuEl","focus","isSubmenu","selector","menuItemEls","slice","call","querySelectorAll","target","menuItemEl","menuIndex","i","length","contains","index","numMenuItems","focusIndex","isKeyboardEvent","onClose","Node","getMenuItemElFromEventTarget","fireOnCloseHandler","key","keyboardPressed","focusFirstItem","focusNextItem","focusPreviousItem","focusLastItem","HTMLElement","click","setMenuItemEls","setInitialFocusIndex","prevIsHidden","prevChildren","children","Children","toArray","focusedMenuItemEl","className","setRef","shouldOutlineFocus","rest","menuProps","ref","role","tabIndex","onClick","handleClick","onKeyDown","handleKeyDown","Component"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport omit from 'lodash/omit';\nimport classNames from 'classnames';\n\nimport './Menu.scss';\n\nconst MENU_ITEM_SELECTOR = '.menu-item:not([aria-disabled])';\nconst TOP_LEVEL_MENU_ITEM_SELECTOR = `ul:not(.submenu) > ${MENU_ITEM_SELECTOR}, ul:not(.submenu) > li > ${MENU_ITEM_SELECTOR}`;\nconst SUBMENU_ITEM_SELECTOR = `ul.submenu > ${MENU_ITEM_SELECTOR}, ul.submenu > li > ${MENU_ITEM_SELECTOR}`;\n\nfunction stopPropagationAndPreventDefault(event) {\n    event.stopPropagation();\n    event.preventDefault();\n}\n\ntype Props = {\n    children: React.Node,\n    className: string,\n    /** Focuses a specific menu item index when menu is mounted */\n    initialFocusIndex?: number,\n    isHidden?: boolean,\n    isSubmenu?: boolean,\n    onClose?: Function,\n    /** Will fire this callback when menu should \"close' */\n    setRef?: Function,\n    shouldOutlineFocus?: boolean,\n};\n\nclass Menu extends React.Component<Props> {\n    static defaultProps = {\n        className: '',\n        isSubmenu: false,\n        isHidden: false,\n    };\n\n    constructor(props: Props) {\n        super(props);\n\n        this.focusIndex = 0;\n        this.menuEl = null;\n        this.menuItemEls = [];\n    }\n\n    componentDidMount() {\n        this.setMenuItemEls();\n        this.setInitialFocusIndex();\n    }\n\n    componentDidUpdate({ isHidden: prevIsHidden, children: prevChildren }: Props) {\n        const { children, isHidden, isSubmenu } = this.props;\n\n        if (isSubmenu && prevIsHidden && !isHidden) {\n            // If updating submenu, use the current props instead of previous props.\n            this.setMenuItemEls();\n            this.setInitialFocusIndex(this.props);\n        }\n\n        // update focus index and menu item elements when the number of children changes\n        if (React.Children.toArray(prevChildren).length !== React.Children.toArray(children).length) {\n            const focusedMenuItemEl = this.menuItemEls[this.focusIndex];\n            this.setMenuItemEls();\n            const { menuIndex } = this.getMenuItemElFromEventTarget(focusedMenuItemEl);\n            this.setFocus(menuIndex);\n        }\n    }\n\n    setInitialFocusIndex = (props: Props = this.props) => {\n        const { initialFocusIndex, isHidden } = props;\n\n        if (isHidden || initialFocusIndex === undefined) {\n            return;\n        }\n\n        // If an initialFocusIndex was specified, attempt to use it to focus\n        if (typeof initialFocusIndex === 'number') {\n            // We do this after a timeout so that the menu is properly mounted before we attempt to focus it\n            setTimeout(() => {\n                this.setFocus(initialFocusIndex);\n            }, 0);\n        } else if (initialFocusIndex === null) {\n            // If no initial focus index is set, focus on the menu itself so that keyboard shortcut still works after a mouse click.\n            setTimeout(() => {\n                if (this.menuEl) {\n                    this.menuEl.focus();\n                }\n            }, 0);\n        }\n    };\n\n    setMenuItemEls = () => {\n        const { isSubmenu } = this.props;\n\n        const selector = isSubmenu ? SUBMENU_ITEM_SELECTOR : TOP_LEVEL_MENU_ITEM_SELECTOR;\n        // Keep track of all the valid menu items that were rendered (querySelector since we don't want to pass ref functions to every single child)\n        this.menuItemEls = this.menuEl ? [].slice.call(this.menuEl.querySelectorAll(selector)) : [];\n    };\n\n    getMenuItemElFromEventTarget = (target: Node) => {\n        let menuItemEl = null;\n        let menuIndex = -1;\n\n        for (let i = 0; i < this.menuItemEls.length; i += 1) {\n            if (this.menuItemEls[i].contains(target)) {\n                menuItemEl = this.menuItemEls[i];\n                menuIndex = i;\n                break;\n            }\n        }\n        return { menuItemEl, menuIndex };\n    };\n\n    setFocus = (index: number) => {\n        if (!this.menuItemEls.length) {\n            return;\n        }\n\n        const numMenuItems = this.menuItemEls.length;\n\n        if (index >= numMenuItems) {\n            this.focusIndex = 0;\n        } else if (index < 0) {\n            this.focusIndex = numMenuItems - 1;\n        } else {\n            this.focusIndex = index;\n        }\n\n        this.menuItemEls[this.focusIndex].focus();\n    };\n\n    focusIndex: number;\n\n    keyboardPressed: ?boolean;\n\n    menuEl: ?HTMLUListElement;\n\n    menuItemEls: Array<HTMLElement>;\n\n    focusFirstItem = () => {\n        this.setFocus(0);\n    };\n\n    focusLastItem = () => {\n        this.setFocus(-1);\n    };\n\n    focusNextItem = () => {\n        this.setFocus(this.focusIndex + 1);\n    };\n\n    focusPreviousItem = () => {\n        this.setFocus(this.focusIndex - 1);\n    };\n\n    fireOnCloseHandler = (isKeyboardEvent: ?boolean, event: SyntheticEvent<>) => {\n        const { onClose } = this.props;\n\n        if (onClose) {\n            // We need to pass the event type so we know which item to focus.\n            onClose(isKeyboardEvent, event);\n        }\n    };\n\n    handleClick = (event: SyntheticEvent<HTMLUListElement>) => {\n        const { menuItemEl } = event.target instanceof Node ? this.getMenuItemElFromEventTarget(event.target) : {};\n\n        if (!menuItemEl) {\n            return;\n        }\n\n        this.fireOnCloseHandler(false, event);\n    };\n\n    handleKeyDown = (event: SyntheticKeyboardEvent<>) => {\n        const { isSubmenu, initialFocusIndex } = this.props;\n\n        switch (event.key) {\n            case 'ArrowDown':\n                stopPropagationAndPreventDefault(event);\n\n                // If it's first keyboard event, focus on first item.\n                if (initialFocusIndex === null && !this.keyboardPressed) {\n                    this.focusFirstItem();\n                } else {\n                    this.focusNextItem();\n                }\n\n                break;\n\n            case 'ArrowUp':\n                stopPropagationAndPreventDefault(event);\n\n                this.focusPreviousItem();\n                break;\n\n            case 'ArrowLeft':\n                // Close submenu when arrow-left is clicked\n                if (!isSubmenu) {\n                    return;\n                }\n                stopPropagationAndPreventDefault(event);\n                this.fireOnCloseHandler(true, event);\n                break;\n\n            case 'Home':\n            case 'PageUp':\n                stopPropagationAndPreventDefault(event);\n\n                this.focusFirstItem();\n                break;\n\n            case 'End':\n            case 'PageDown':\n                stopPropagationAndPreventDefault(event);\n\n                this.focusLastItem();\n                break;\n\n            case 'Escape':\n                stopPropagationAndPreventDefault(event);\n\n                this.fireOnCloseHandler(true, event);\n                break;\n\n            case 'Tab':\n                // DO NOT PREVENT DEFAULT OR STOP PROPAGATION - This should move focus natively\n                this.fireOnCloseHandler(true, event);\n                break;\n\n            case ' ': // Spacebar\n            case 'Enter':\n                stopPropagationAndPreventDefault(event);\n\n                if (event.target instanceof HTMLElement) {\n                    event.target.click();\n                }\n                break;\n\n            default:\n                break;\n        }\n\n        this.keyboardPressed = true;\n    };\n\n    render() {\n        const { children, className, isHidden, setRef, shouldOutlineFocus, ...rest } = this.props;\n\n        const menuProps = omit(rest, ['onClose', 'initialFocusIndex', 'isSubmenu']);\n        menuProps.className = classNames('aria-menu', className, {\n            'is-hidden': isHidden,\n            'should-outline-focus': shouldOutlineFocus,\n        });\n        menuProps.ref = ref => {\n            this.menuEl = ref;\n            if (setRef) {\n                setRef(ref);\n            }\n        };\n        menuProps.role = 'menu';\n        menuProps.tabIndex = -1;\n        menuProps.onClick = this.handleClick;\n        menuProps.onKeyDown = this.handleKeyDown;\n\n        return <ul {...menuProps}>{children}</ul>;\n    }\n}\n\nexport default Menu;\n"],"file":"Menu.js"}