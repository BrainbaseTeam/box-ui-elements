{"version":3,"sources":["../../../src/components/menu/SubmenuItem.js"],"names":["React","classNames","omit","SUBMENU_LEFT_ALIGNED_CLASS","SUBMENU_BOTTOM_ALIGNED_CLASS","SubmenuItem","isSubmenuOpen","submenuFocusIndex","submenuTriggerEl","submenuEl","props","rightBoundaryElement","bottomBoundaryElement","submenuElBounding","getBoundingClientRect","submenuTriggerElBounding","rightBoundaryElementBounding","right","window","innerWidth","bottomBoundaryElementBounding","bottom","innerHeight","isLeftAligned","width","isBottomAligned","top","height","event","isDisabled","onClick","stopPropagation","preventDefault","key","openSubmenuAndFocus","setState","isKeyboardEvent","closeSubmenu","focus","children","className","rest","state","elements","Children","toArray","submenuTriggerContent","submenu","length","Error","menuItemProps","undefined","handleMenuItemClick","onMouseLeave","onMouseEnter","openSubmenu","onKeyDown","handleKeyDown","ref","role","tabIndex","submenuProps","getMenuAlignmentClasses","initialFocusIndex","isHidden","isSubmenu","onClose","closeSubmenuAndFocusTrigger","setRef","cloneElement","Component"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\n\nimport './SubmenuItem.scss';\n\nconst SUBMENU_LEFT_ALIGNED_CLASS = 'is-left-aligned';\nconst SUBMENU_BOTTOM_ALIGNED_CLASS = 'is-bottom-aligned';\n\ntype Props = {\n    /** An HTMLElement defining the bottom boundary for the submenu */\n    bottomBoundaryElement?: HTMLElement,\n    children: React.Node,\n    className?: string,\n    isDisabled?: boolean,\n    onClick?: Function,\n    /** An HTMLElement defining the right boundary for the submenu */\n    rightBoundaryElement?: HTMLElement,\n};\n\ntype State = {\n    isSubmenuOpen: boolean,\n    submenuFocusIndex: ?number,\n};\n\n/**\n * A menu-item component which triggers open a submenu\n *\n * @NOTE: Nested submenus are NOT currently supported, switching\n * focus with arrow keys in the subsubmenu is not working properly.\n */\nclass SubmenuItem extends React.Component<Props, State> {\n    state = {\n        isSubmenuOpen: false,\n        submenuFocusIndex: null,\n    };\n\n    getMenuAlignmentClasses = () => {\n        if (!this.submenuTriggerEl || !this.submenuEl) {\n            return {};\n        }\n\n        const { rightBoundaryElement, bottomBoundaryElement } = this.props;\n        const submenuElBounding = this.submenuEl.getBoundingClientRect();\n        // $FlowFixMe checked this.submenuEl is set above\n        const submenuTriggerElBounding = this.submenuTriggerEl.getBoundingClientRect();\n        const rightBoundaryElementBounding = rightBoundaryElement\n            ? rightBoundaryElement.getBoundingClientRect()\n            : { right: window.innerWidth };\n        const bottomBoundaryElementBounding = bottomBoundaryElement\n            ? bottomBoundaryElement.getBoundingClientRect()\n            : { bottom: window.innerHeight };\n\n        const isLeftAligned =\n            submenuTriggerElBounding.right + submenuElBounding.width > rightBoundaryElementBounding.right;\n        const isBottomAligned =\n            submenuTriggerElBounding.top + submenuElBounding.height > bottomBoundaryElementBounding.bottom;\n\n        return {\n            [SUBMENU_LEFT_ALIGNED_CLASS]: isLeftAligned,\n            [SUBMENU_BOTTOM_ALIGNED_CLASS]: isBottomAligned,\n        };\n    };\n\n    handleMenuItemClick = (event: SyntheticKeyboardEvent<>) => {\n        const { isDisabled, onClick } = this.props;\n\n        // If aria-disabled is passed as a prop, we should ignore clicks on this menu item\n        if (isDisabled) {\n            event.stopPropagation();\n            event.preventDefault();\n\n            return;\n        }\n\n        if (onClick) {\n            onClick(event);\n        }\n    };\n\n    submenuTriggerEl: ?HTMLElement;\n\n    submenuEl: ?HTMLElement;\n\n    handleKeyDown = (event: SyntheticKeyboardEvent<>) => {\n        switch (event.key) {\n            case ' ': // Spacebar\n            case 'Enter':\n            case 'ArrowRight':\n                event.stopPropagation();\n                event.preventDefault();\n\n                this.openSubmenuAndFocus();\n                break;\n            default:\n                break;\n        }\n    };\n\n    closeSubmenu = () => {\n        this.setState({\n            isSubmenuOpen: false,\n        });\n    };\n\n    closeSubmenuAndFocusTrigger = (isKeyboardEvent: ?boolean) => {\n        this.closeSubmenu();\n\n        if (this.submenuTriggerEl && isKeyboardEvent) {\n            this.submenuTriggerEl.focus();\n        }\n    };\n\n    openSubmenu = () => {\n        this.setState({\n            isSubmenuOpen: true,\n            submenuFocusIndex: null,\n        });\n    };\n\n    openSubmenuAndFocus = () => {\n        this.setState({\n            isSubmenuOpen: true,\n            submenuFocusIndex: 0,\n        });\n    };\n\n    render() {\n        const { children, className, isDisabled, ...rest } = this.props;\n        const { isSubmenuOpen, submenuFocusIndex } = this.state;\n\n        const elements = React.Children.toArray(children);\n        const submenuTriggerContent = elements[0];\n        const submenu = elements[1];\n        if (elements.length !== 2 || !submenuTriggerContent || !submenu) {\n            throw new Error('SubmenuItem must have exactly two children, a trigger component and a <Menu>');\n        }\n\n        const menuItemProps = {\n            ...omit(rest, ['bottomBoundaryElement', 'onClick', 'rightBoundaryElement', 'role', 'tabIndex']),\n            'aria-disabled': isDisabled ? 'true' : undefined,\n            'aria-expanded': isSubmenuOpen ? 'true' : 'false',\n            'aria-haspopup': 'true',\n            className: classNames('menu-item', 'submenu-target', className),\n            onClick: this.handleMenuItemClick,\n            onMouseLeave: this.closeSubmenu,\n            onMouseEnter: this.openSubmenu,\n            onKeyDown: this.handleKeyDown,\n            ref: ref => {\n                this.submenuTriggerEl = ref;\n            },\n            role: 'menuitem',\n            tabIndex: -1,\n        };\n\n        const submenuProps: Object = {\n            className: classNames(submenu.props.className, 'submenu', this.getMenuAlignmentClasses()),\n            initialFocusIndex: submenuFocusIndex,\n            // Hide the menu instead of unmounting it. Otherwise onMouseLeave won't work.\n            isHidden: !isSubmenuOpen,\n            isSubmenu: true,\n            onClose: this.closeSubmenuAndFocusTrigger,\n            setRef: ref => {\n                this.submenuEl = ref;\n            },\n        };\n\n        return (\n            <li {...menuItemProps}>\n                {submenuTriggerContent}\n                {React.cloneElement(submenu, submenuProps)}\n            </li>\n        );\n    }\n}\n\nexport default SubmenuItem;\n"],"file":"SubmenuItem.js"}