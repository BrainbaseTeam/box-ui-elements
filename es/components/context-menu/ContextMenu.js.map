{"version":3,"sources":["../../../src/components/context-menu/ContextMenu.js"],"names":["React","TetherComponent","uniqueId","ContextMenu","props","isOpen","targetOffset","onMenuClose","setState","menuTargetEl","document","getElementById","menuTargetID","focus","closeMenu","focusTarget","event","menuEl","menuID","target","Node","contains","isDisabled","targetRect","getBoundingClientRect","left","top","verticalOffset","clientY","horizontalOffset","clientX","onMenuOpen","preventDefault","prevProps","prevState","state","prevIsOpen","prevIsDisabled","addEventListener","handleDocumentClick","removeEventListener","handleMenuClose","children","constraints","elements","Children","toArray","length","Error","menuTarget","menu","menuTargetProps","id","key","onContextMenu","handleContextMenu","menuProps","initialFocusIndex","onClose","cloneElement","Component"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport TetherComponent from 'react-tether';\nimport uniqueId from 'lodash/uniqueId';\n\nimport './ContextMenu.scss';\n\ntype Props = {\n    /** A target component to attach to and a menu */\n    children: React.Node,\n    /**\n     * An array of tether constraints\n     *\n     * @see See [Tether](http://tether.io) for possible constraints\n     */\n    constraints: Array<mixed>,\n    /** When disabled, native context menu behavior is applied, and the menu will close if it was open */\n    isDisabled?: boolean,\n    /** Called when menu is closed */\n    onMenuClose?: Function,\n    /** Called when menu is opened */\n    onMenuOpen?: Function,\n};\n\ntype State = {\n    isOpen: boolean,\n    targetOffset: string,\n};\n\nclass ContextMenu extends React.Component<Props, State> {\n    static defaultProps = {\n        constraints: [],\n    };\n\n    constructor(props: Props) {\n        super(props);\n\n        this.menuID = uniqueId('contextmenu');\n        this.menuTargetID = uniqueId('contextmenutarget');\n    }\n\n    state = {\n        isOpen: false,\n        targetOffset: '',\n    };\n\n    componentDidUpdate(prevProps: Props, prevState: State): void {\n        const { isOpen } = this.state;\n        const { isOpen: prevIsOpen } = prevState;\n        const { isDisabled: prevIsDisabled } = prevProps;\n        const { isDisabled } = this.props;\n\n        if (!prevIsOpen && isOpen) {\n            // When menu is being opened\n            document.addEventListener('click', this.handleDocumentClick, true);\n            document.addEventListener('contextmenu', this.handleDocumentClick, true);\n        } else if (prevIsOpen && !isOpen) {\n            // When menu is being closed\n            document.removeEventListener('contextmenu', this.handleDocumentClick, true);\n            document.removeEventListener('click', this.handleDocumentClick, true);\n        }\n\n        // if the menu becomes disabled while it is open, we should close it\n        if (!isDisabled && prevIsDisabled && isOpen) {\n            this.handleMenuClose();\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.state.isOpen) {\n            // Clean-up global click handlers\n            document.removeEventListener('contextmenu', this.handleDocumentClick, true);\n            document.removeEventListener('click', this.handleDocumentClick, true);\n        }\n    }\n\n    menuID: string;\n\n    menuTargetID: string;\n\n    closeMenu = () => {\n        const { onMenuClose } = this.props;\n\n        this.setState({ isOpen: false });\n        if (onMenuClose) {\n            onMenuClose();\n        }\n    };\n\n    focusTarget = () => {\n        // breaks encapsulation but the only alternative is passing a ref to an unknown child component\n        const menuTargetEl = document.getElementById(this.menuTargetID);\n        if (menuTargetEl) {\n            menuTargetEl.focus();\n        }\n    };\n\n    handleMenuClose = () => {\n        this.closeMenu();\n        this.focusTarget();\n    };\n\n    handleDocumentClick = (event: MouseEvent) => {\n        const menuEl = document.getElementById(this.menuID);\n        if (menuEl && event.target instanceof Node && menuEl.contains(event.target)) {\n            return;\n        }\n        this.closeMenu();\n    };\n\n    handleContextMenu = (event: MouseEvent) => {\n        if (this.props.isDisabled) {\n            return;\n        }\n\n        const menuTargetEl = document.getElementById(this.menuTargetID);\n        const targetRect = menuTargetEl ? menuTargetEl.getBoundingClientRect() : { left: 0, top: 0 };\n        const verticalOffset = event.clientY - targetRect.top;\n        const horizontalOffset = event.clientX - targetRect.left;\n\n        this.setState({\n            isOpen: true,\n            targetOffset: `${verticalOffset}px ${horizontalOffset}px`,\n        });\n\n        const { onMenuOpen } = this.props;\n        if (onMenuOpen) {\n            onMenuOpen();\n        }\n\n        event.preventDefault();\n    };\n\n    render() {\n        const { children, constraints } = this.props;\n        const { isOpen, targetOffset } = this.state;\n\n        const elements = React.Children.toArray(children);\n\n        if (elements.length !== 2) {\n            throw new Error('ContextMenu must have exactly two children: A target component and a <Menu>');\n        }\n\n        const menuTarget = elements[0];\n        const menu = elements[1];\n\n        const menuTargetProps = {\n            id: this.menuTargetID,\n            key: this.menuTargetID,\n            onContextMenu: this.handleContextMenu,\n        };\n\n        const menuProps = {\n            id: this.menuID,\n            key: this.menuID,\n            initialFocusIndex: null,\n            onClose: this.handleMenuClose,\n        };\n\n        return (\n            <TetherComponent\n                attachment=\"top left\"\n                classPrefix=\"context-menu\"\n                constraints={constraints}\n                targetAttachment=\"top left\"\n                targetOffset={targetOffset}\n            >\n                {React.cloneElement(menuTarget, menuTargetProps)}\n                {isOpen && React.cloneElement(menu, menuProps)}\n            </TetherComponent>\n        );\n    }\n}\n\nexport default ContextMenu;\n"],"file":"ContextMenu.js"}