{"version":3,"sources":["../../../src/components/flyout/Flyout.js"],"names":["React","TetherComponent","uniqueId","BOTTOM_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","MIDDLE_LEFT","MIDDLE_RIGHT","TOP_CENTER","TOP_LEFT","TOP_RIGHT","positions","attachment","targetAttachment","hasClickableAncestor","rootNode","targetNode","currentNode","Node","parentNode","nodeName","toUpperCase","hasClassAncestor","targetEl","className","el","HTMLElement","classList","contains","Flyout","props","event","overlayNode","document","getElementById","overlayID","closeOnClick","closeOnClickPredicate","target","handleOverlayClose","isVisible","state","closeOverlay","openOverlay","isButtonClicked","detail","setState","preventDefault","openOnHover","openOnHoverDelayTimeout","clearTimeout","hoverDelay","setTimeout","onOpen","onClose","buttonEl","overlayButtonID","focus","focusButton","portaledClasses","closeOnClickOutside","closeOnWindowBlur","buttonNode","isInsideToggleButton","isInsideOverlay","isInside","some","isVisibleByDefault","prevProps","prevState","addEventListener","handleDocumentClickOrWindowBlur","window","removeEventListener","children","constrainToScrollParent","constrainToWindow","offset","position","shouldDefaultFocus","elements","Children","toArray","tetherPosition","length","Error","overlayButton","overlayContent","overlayButtonProps","id","key","role","onClick","handleButtonClick","onMouseEnter","handleButtonHover","onMouseLeave","handleButtonHoverLeave","overlayProps","handleOverlayClick","constraints","push","to","tetherProps","classPrefix","enabled","classes","element","cloneElement","Component"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport TetherComponent from 'react-tether';\nimport uniqueId from 'lodash/uniqueId';\n\nimport './Flyout.scss';\n\nconst BOTTOM_CENTER = 'bottom-center';\nconst BOTTOM_LEFT = 'bottom-left';\nconst BOTTOM_RIGHT = 'bottom-right';\nconst MIDDLE_LEFT = 'middle-left';\nconst MIDDLE_RIGHT = 'middle-right';\nconst TOP_CENTER = 'top-center';\nconst TOP_LEFT = 'top-left';\nconst TOP_RIGHT = 'top-right';\n\nconst positions = {\n    [BOTTOM_CENTER]: {\n        attachment: 'top center',\n        targetAttachment: 'bottom center',\n    },\n    [BOTTOM_LEFT]: {\n        attachment: 'top right',\n        targetAttachment: 'bottom right',\n    },\n    [BOTTOM_RIGHT]: {\n        attachment: 'top left',\n        targetAttachment: 'bottom left',\n    },\n    [MIDDLE_LEFT]: {\n        attachment: 'middle right',\n        targetAttachment: 'middle left',\n    },\n    [MIDDLE_RIGHT]: {\n        attachment: 'middle left',\n        targetAttachment: 'middle right',\n    },\n    [TOP_CENTER]: {\n        attachment: 'bottom center',\n        targetAttachment: 'top center',\n    },\n    [TOP_LEFT]: {\n        attachment: 'bottom right',\n        targetAttachment: 'top right',\n    },\n    [TOP_RIGHT]: {\n        attachment: 'bottom left',\n        targetAttachment: 'top left',\n    },\n};\n\n/**\n * Checks if there is a clickable ancestor or self\n * @param {Node} rootNode The base node we should stop at\n * @param {Node} targetNode The target node of the event\n * @returns {boolean}\n */\nconst hasClickableAncestor = (rootNode, targetNode) => {\n    // Check if the element or any of the ancestors are click-able (stopping at the component boundary)\n    let currentNode = targetNode;\n    while (currentNode && currentNode instanceof Node && currentNode.parentNode && currentNode !== rootNode) {\n        const nodeName = currentNode.nodeName.toUpperCase();\n        if (nodeName === 'A' || nodeName === 'BUTTON') {\n            return true;\n        }\n        currentNode = currentNode.parentNode;\n    }\n    return false;\n};\n\n/**\n * Checks if the target element is inside an element with the given CSS class.\n * @param {HTMLElement} targetEl The target element\n * @param {string} className A CSS class on the element to check for\n */\nconst hasClassAncestor = (targetEl, className) => {\n    let el = targetEl;\n    while (el && el instanceof HTMLElement) {\n        if (el.classList.contains(className)) {\n            return true;\n        }\n        el = el.parentNode;\n    }\n    return false;\n};\n\nexport type FlyoutProps = {\n    children: React.Node,\n    /**\n     * Set className to the overlay wrapper\n     */\n    className?: string,\n    /**\n     * If set to true, closes the overlay on clicking buttons/links inside\n     * of it\n     */\n    closeOnClick?: boolean,\n    /**\n     * If set to true, closes the overlay on clicking outside of it\n     */\n    closeOnClickOutside?: boolean,\n    /**\n     * Function that will interrogate the click event to determine whether or not to close the overlay if closeOnClick is enabled\n     */\n    closeOnClickPredicate?: Function,\n    /**\n     * If set to true, closes the overlay when window loses focus\n     */\n    closeOnWindowBlur?: boolean,\n    /**\n     * Sets tether constrain to scrollParent\n     */\n    constrainToScrollParent?: boolean,\n    /**\n     * Sets tether constrain to window\n     */\n    constrainToWindow?: boolean,\n    /**\n     * Whether overlay should be visible by default\n     */\n    isVisibleByDefault: boolean,\n    /**\n     * Will fire this callback when the flyout should open\n     */\n    offset?: string,\n    /**\n     * Will fire this callback when the flyout should close\n     */\n    onClose?: Function,\n    /**\n     * Adjusts placement of the overlay (SEE http://tether.io/#options)\n     */\n    onOpen?: Function,\n    /**\n     * Whether overlay should open on hover\n     */\n    openOnHover?: boolean,\n    /**\n     * Time in milliseconds that the button should wait before opening and closing the flyout\n     */\n    openOnHoverDelayTimeout?: number,\n    /** An array of CSS classes for portaled elements in the overlay, used to check whether a click is inside the overlay */\n    portaledClasses: Array<string>,\n    /**\n     * Position of the overlay\n     */\n    position:\n        | 'bottom-center'\n        | 'bottom-left'\n        | 'bottom-right'\n        | 'middle-left'\n        | 'middle-right'\n        | 'top-center'\n        | 'top-left'\n        | 'top-right',\n    /**\n     * Prop whether to focus first focusable element or not\n     */\n    shouldDefaultFocus?: boolean,\n};\n\ntype State = {\n    isButtonClicked: boolean,\n    isVisible: boolean,\n};\n\ntype Props = FlyoutProps;\n\nclass Flyout extends React.Component<Props, State> {\n    static defaultProps = {\n        className: '',\n        closeOnClick: true,\n        closeOnClickOutside: true,\n        closeOnWindowBlur: false,\n        constrainToScrollParent: true,\n        constrainToWindow: false,\n        isVisibleByDefault: false,\n        openOnHover: false,\n        openOnHoverDelayTimeout: 300,\n        portaledClasses: [],\n        position: BOTTOM_RIGHT,\n    };\n\n    constructor(props: Props) {\n        super(props);\n\n        this.overlayID = uniqueId('overlay');\n        this.overlayButtonID = uniqueId('flyoutbutton');\n        this.state = {\n            isVisible: props.isVisibleByDefault,\n            isButtonClicked: false,\n        };\n    }\n\n    componentDidUpdate(prevProps: Props, prevState: State) {\n        if (!prevState.isVisible && this.state.isVisible) {\n            const { closeOnClickOutside, closeOnWindowBlur } = this.props;\n            // When overlay is being opened\n            if (closeOnClickOutside) {\n                document.addEventListener('click', this.handleDocumentClickOrWindowBlur, true);\n                document.addEventListener('contextmenu', this.handleDocumentClickOrWindowBlur, true);\n            }\n            if (closeOnWindowBlur) {\n                window.addEventListener('blur', this.handleDocumentClickOrWindowBlur, true);\n            }\n        } else if (prevState.isVisible && !this.state.isVisible) {\n            // When overlay is being closed\n            document.removeEventListener('contextmenu', this.handleDocumentClickOrWindowBlur, true);\n            document.removeEventListener('click', this.handleDocumentClickOrWindowBlur, true);\n            window.removeEventListener('blur', this.handleDocumentClickOrWindowBlur, true);\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.state.isVisible) {\n            // Clean-up global click handlers\n            document.removeEventListener('contextmenu', this.handleDocumentClickOrWindowBlur, true);\n            document.removeEventListener('click', this.handleDocumentClickOrWindowBlur, true);\n            window.removeEventListener('blur', this.handleDocumentClickOrWindowBlur, true);\n        }\n\n        if (this.props.openOnHover && this.hoverDelay) {\n            clearTimeout(this.hoverDelay);\n        }\n    }\n\n    overlayButtonID: string;\n\n    overlayID: string;\n\n    handleOverlayClick = (event: SyntheticEvent<>) => {\n        const overlayNode = document.getElementById(this.overlayID);\n        const { closeOnClick, closeOnClickPredicate } = this.props;\n        if (!closeOnClick || !hasClickableAncestor(overlayNode, event.target)) {\n            return;\n        }\n        if (closeOnClickPredicate && !closeOnClickPredicate(event)) {\n            return;\n        }\n\n        this.handleOverlayClose();\n    };\n\n    handleButtonClick = (event: SyntheticUIEvent<>) => {\n        const { isVisible } = this.state;\n        if (isVisible) {\n            this.closeOverlay();\n        } else {\n            this.openOverlay();\n        }\n\n        // If button was clicked, the detail field should hold number of clicks.\n        // If number is zero, the event was synthesized.\n        // https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/detail\n        const isButtonClicked = event.detail > 0;\n\n        this.setState({ isButtonClicked });\n\n        event.preventDefault();\n    };\n\n    hoverDelay: TimeoutID | void;\n\n    handleButtonHover = () => {\n        const { openOnHover, openOnHoverDelayTimeout } = this.props;\n        if (openOnHover) {\n            clearTimeout(this.hoverDelay);\n\n            this.hoverDelay = setTimeout(() => {\n                this.openOverlay();\n            }, openOnHoverDelayTimeout);\n        }\n    };\n\n    handleButtonHoverLeave = () => {\n        const { openOnHover, openOnHoverDelayTimeout } = this.props;\n        if (openOnHover) {\n            clearTimeout(this.hoverDelay);\n\n            this.hoverDelay = setTimeout(() => {\n                this.closeOverlay();\n            }, openOnHoverDelayTimeout);\n        }\n    };\n\n    openOverlay = () => {\n        this.setState({\n            isVisible: true,\n        });\n\n        const { onOpen } = this.props;\n        if (onOpen) {\n            onOpen();\n        }\n    };\n\n    closeOverlay = () => {\n        this.setState({\n            isVisible: false,\n        });\n\n        const { onClose } = this.props;\n        if (onClose) {\n            onClose();\n        }\n    };\n\n    focusButton = () => {\n        const buttonEl = document.getElementById(this.overlayButtonID);\n        if (buttonEl) {\n            buttonEl.focus();\n        }\n    };\n\n    handleOverlayClose = () => {\n        this.focusButton();\n        this.closeOverlay();\n    };\n\n    handleDocumentClickOrWindowBlur = (event: MouseEvent | FocusEvent) => {\n        const { portaledClasses, closeOnClickOutside, closeOnWindowBlur } = this.props;\n        const { isVisible } = this.state;\n\n        if (!isVisible || !(closeOnClickOutside || closeOnWindowBlur)) {\n            return;\n        }\n\n        const overlayNode = document.getElementById(this.overlayID);\n        const buttonNode = document.getElementById(this.overlayButtonID);\n\n        const isInsideToggleButton =\n            (buttonNode && event.target instanceof Node && buttonNode.contains(event.target)) ||\n            buttonNode === event.target;\n        const isInsideOverlay =\n            (overlayNode && event.target instanceof Node && overlayNode.contains(event.target)) ||\n            overlayNode === event.target;\n        const isInside = isInsideToggleButton || isInsideOverlay;\n\n        if (isInside || portaledClasses.some(className => hasClassAncestor(event.target, className))) {\n            return;\n        }\n\n        // Only close overlay when the click is outside of the flyout or window loses focus\n        this.closeOverlay();\n    };\n\n    render() {\n        const {\n            children,\n            className = '',\n            constrainToScrollParent,\n            constrainToWindow,\n            offset,\n            openOnHover,\n            position,\n            shouldDefaultFocus,\n        } = this.props;\n        const { isButtonClicked, isVisible } = this.state;\n        const elements = React.Children.toArray(children);\n        const tetherPosition = positions[position];\n\n        if (elements.length !== 2) {\n            throw new Error('Flyout must have exactly two children: A button component and a <Overlay>');\n        }\n\n        const overlayButton = elements[0];\n        const overlayContent = elements[1];\n\n        const overlayButtonProps: Object = {\n            id: this.overlayButtonID,\n            key: this.overlayButtonID,\n            role: 'button',\n            onClick: this.handleButtonClick,\n            onMouseEnter: this.handleButtonHover,\n            onMouseLeave: this.handleButtonHoverLeave,\n            'aria-haspopup': 'true',\n            'aria-expanded': isVisible ? 'true' : 'false',\n        };\n\n        if (isVisible) {\n            overlayButtonProps['aria-controls'] = this.overlayID;\n        }\n\n        const overlayProps = {\n            id: this.overlayID,\n            key: this.overlayID,\n            role: 'dialog',\n            onClick: this.handleOverlayClick,\n            onClose: this.handleOverlayClose,\n            onMouseEnter: this.handleButtonHover,\n            onMouseLeave: this.handleButtonHoverLeave,\n            shouldDefaultFocus: shouldDefaultFocus || (!isButtonClicked && !openOnHover),\n            'aria-labelledby': this.overlayButtonID,\n        };\n\n        const constraints = [];\n\n        if (constrainToScrollParent) {\n            constraints.push({\n                to: 'scrollParent',\n                attachment: 'together',\n            });\n        }\n\n        if (constrainToWindow) {\n            constraints.push({\n                to: 'window',\n                attachment: 'together',\n            });\n        }\n\n        const tetherProps: Object = {\n            classPrefix: 'flyout-overlay',\n            attachment: tetherPosition.attachment,\n            targetAttachment: tetherPosition.targetAttachment,\n            enabled: isVisible,\n            classes: {\n                element: `flyout-overlay ${className}`,\n            },\n            constraints,\n        };\n\n        if (offset) {\n            tetherProps.offset = offset;\n        } else {\n            switch (position) {\n                case BOTTOM_CENTER:\n                case BOTTOM_LEFT:\n                case BOTTOM_RIGHT:\n                    tetherProps.offset = '-10px 0';\n                    break;\n                case TOP_CENTER:\n                case TOP_LEFT:\n                case TOP_RIGHT:\n                    tetherProps.offset = '10px 0';\n                    break;\n                case MIDDLE_LEFT:\n                    tetherProps.offset = '0 10px';\n                    break;\n                case MIDDLE_RIGHT:\n                    tetherProps.offset = '0 -10px';\n                    break;\n                default:\n                // no default\n            }\n        }\n\n        return (\n            <TetherComponent {...tetherProps}>\n                {React.cloneElement(overlayButton, overlayButtonProps)}\n                {isVisible ? React.cloneElement(overlayContent, overlayProps) : null}\n            </TetherComponent>\n        );\n    }\n}\n\nexport default Flyout;\n"],"file":"Flyout.js"}