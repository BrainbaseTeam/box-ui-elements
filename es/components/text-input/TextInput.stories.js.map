{"version":3,"sources":["../../../src/components/text-input/TextInput.stories.js"],"names":["React","State","Store","TextInput","notes","basic","withDescription","withLongBreakableStrings","withLongUnbreakableStrings","error","loading","valid","requiredWithOnChange","componentStore","value","state","e","set","target","title","component","parameters"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { State, Store } from '@sambego/storybook-state';\n\nimport TextInput from './TextInput';\nimport notes from './TextInput.stories.md';\n\nexport const basic = () => <TextInput label=\"Email\" name=\"textinput\" type=\"email\" placeholder=\"Enter email here\" />;\n\nexport const withDescription = () => (\n    <TextInput\n        description=\"Email used for work\"\n        label=\"Email\"\n        name=\"textinput\"\n        type=\"email\"\n        placeholder=\"Enter email here\"\n    />\n);\n\nexport const withLongBreakableStrings = () => (\n    <TextInput\n        description=\"Long Long Long Long long long Long Long Long Long long longLong Long Long Long long longLong Long Long Long long long\"\n        label=\"Long Long Long Long long long Long Long Long Long long longLong Long Long Long long longLong Long Long Long long long\"\n        name=\"textinput\"\n        type=\"email\"\n        placeholder=\"Enter email here\"\n    />\n);\n\nexport const withLongUnbreakableStrings = () => (\n    <TextInput\n        description=\"longlonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglong\"\n        label=\"longlonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglong\"\n        name=\"textinput\"\n        type=\"email\"\n        placeholder=\"Enter email here\"\n    />\n);\n\nexport const error = () => (\n    <TextInput label=\"Email\" name=\"textinput\" type=\"email\" error=\"oops\" placeholder=\"Enter email here\" />\n);\n\nexport const loading = () => (\n    <TextInput label=\"Email\" name=\"textinput\" type=\"email\" isLoading placeholder=\"Enter email here\" />\n);\n\nexport const valid = () => (\n    <TextInput label=\"Email\" name=\"textinput\" type=\"email\" isValid placeholder=\"Enter email here\" />\n);\n\nexport const requiredWithOnChange = () => {\n    const componentStore = new Store({\n        error: 'required',\n        value: '',\n    });\n\n    return (\n        <State store={componentStore}>\n            {state => (\n                <TextInput\n                    label=\"Email\"\n                    name=\"textinput\"\n                    type=\"email\"\n                    placeholder=\"Enter email here\"\n                    value={state.value}\n                    error={state.error}\n                    onChange={e =>\n                        componentStore.set({ error: e.target.value ? '' : 'required', value: e.target.value })\n                    }\n                />\n            )}\n        </State>\n    );\n};\n\nexport default {\n    title: 'Components|TextInput',\n    component: TextInput,\n    parameters: {\n        notes,\n    },\n};\n"],"file":"TextInput.stories.js"}