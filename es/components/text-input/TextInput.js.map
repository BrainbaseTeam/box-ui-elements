{"version":3,"sources":["../../../src/components/text-input/TextInput.js"],"names":["React","classNames","uniqueId","IconVerified","Label","LoadingIndicator","Tooltip","TextInput","className","description","error","errorPosition","hideLabel","hideOptionalLabel","inputRef","isLoading","isRequired","isValid","label","labelTooltip","rest","hasError","classes","errorMessageID","useRef","current","ariaAttrs","displayName"],"mappings":";;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,OAAOC,YAAP,MAAyB,kCAAzB;AAEA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AACA,OAAOC,OAAP,MAAoB,YAApB;AAGA,OAAO,kBAAP;;AAyBA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAcL;AAAA,4BAbTC,SAaS;AAAA,MAbTA,SAaS,+BAbG,EAaH;AAAA,MAZTC,WAYS,QAZTA,WAYS;AAAA,MAXTC,KAWS,QAXTA,KAWS;AAAA,MAVTC,aAUS,QAVTA,aAUS;AAAA,MATTC,SASS,QATTA,SASS;AAAA,MARTC,iBAQS,QARTA,iBAQS;AAAA,MAPTC,QAOS,QAPTA,QAOS;AAAA,MANTC,SAMS,QANTA,SAMS;AAAA,MALTC,UAKS,QALTA,UAKS;AAAA,MAJTC,OAIS,QAJTA,OAIS;AAAA,MAHTC,KAGS,QAHTA,KAGS;AAAA,MAFTC,YAES,QAFTA,YAES;AAAA,MADNC,IACM;;AACT,MAAMC,QAAQ,GAAG,CAAC,CAACX,KAAnB;AACA,MAAMY,OAAO,GAAGrB,UAAU,CAACO,SAAD,EAAY,sBAAZ,EAAoC;AAC1D,kBAAca;AAD4C,GAApC,CAA1B;AAIA,MAAME,cAAc,GAAGvB,KAAK,CAACwB,MAAN,CAAatB,QAAQ,CAAC,cAAD,CAArB,EAAuCuB,OAA9D;AACA,MAAMC,SAAS,GAAG;AACd,oBAAgBL,QADF;AAEd,qBAAiBL,UAFH;AAGd,yBAAqBO;AAHP,GAAlB;AAMA,sBACI;AAAK,IAAA,SAAS,EAAED;AAAhB,kBACI,oBAAC,KAAD;AACI,IAAA,SAAS,EAAEV,SADf;AAEI,IAAA,gBAAgB,EAAE,CAACC,iBAAD,IAAsB,CAACG,UAF7C;AAGI,IAAA,IAAI,EAAEE,KAHV;AAII,IAAA,OAAO,EAAEC;AAJb,KAMK,CAAC,CAACV,WAAF,iBAAiB;AAAG,IAAA,SAAS,EAAC;AAAb,KAAuCA,WAAvC,CANtB,eAOI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEY,QAAlB;AAA4B,IAAA,QAAQ,EAAEV,aAAa,IAAI,cAAvD;AAAuE,IAAA,IAAI,EAAED,KAAK,IAAI,EAAtF;AAA0F,IAAA,KAAK,EAAC;AAAhG,kBACI;AAAO,IAAA,GAAG,EAAEI,QAAZ;AAAsB,IAAA,QAAQ,EAAEE;AAAhC,KAAgDU,SAAhD,EAA+DN,IAA/D,EADJ,CAPJ,EAUKL,SAAS,IAAI,CAACE,OAAd,iBAAyB,oBAAC,gBAAD;AAAkB,IAAA,SAAS,EAAC;AAA5B,IAV9B,EAWKA,OAAO,IAAI,CAACF,SAAZ,iBAAyB,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC;AAAxB,IAX9B,eAYI;AAAM,IAAA,EAAE,EAAEQ,cAAV;AAA0B,IAAA,SAAS,EAAC,sBAApC;AAA2D,IAAA,IAAI,EAAC;AAAhE,KACKb,KADL,CAZJ,CADJ,CADJ;AAoBH,CA/CD;;AAiDAH,SAAS,CAACoB,WAAV,GAAwB,WAAxB;AAGA,eAAepB,SAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport uniqueId from 'lodash/uniqueId';\n\nimport IconVerified from '../../icons/general/IconVerified';\n\nimport Label from '../label';\nimport LoadingIndicator from '../loading-indicator';\nimport Tooltip from '../tooltip';\nimport type { Position } from '../tooltip';\n\nimport './TextInput.scss';\n\ntype Props = {\n    /** Add a class to the component */\n    className?: string,\n    description?: React.Node,\n    error?: React.Node,\n    /** Renders error tooltip at the specified position (positions are those from Tooltip) */\n    errorPosition?: Position,\n    /** Hides the label */\n    hideLabel?: boolean,\n    /** Hides (optional) text from the label */\n    hideOptionalLabel?: boolean,\n    inputRef?: Function, // @TODO: eventually rename to innerRef for consistancy across all form elements\n    /** Renders a loading indicator within the component when true */\n    isLoading?: boolean,\n    /** Makes the input value required */\n    isRequired?: boolean,\n    /** Renders a green verified checkmark within the component when true */\n    isValid?: boolean,\n    /** Label displayed for the text input */\n    label: React.Node,\n    labelTooltip?: React.Node,\n};\n\nconst TextInput = ({\n    className = '',\n    description,\n    error,\n    errorPosition,\n    hideLabel,\n    hideOptionalLabel,\n    inputRef,\n    isLoading,\n    isRequired,\n    isValid,\n    label,\n    labelTooltip,\n    ...rest\n}: Props) => {\n    const hasError = !!error;\n    const classes = classNames(className, 'text-input-container', {\n        'show-error': hasError,\n    });\n\n    const errorMessageID = React.useRef(uniqueId('errorMessage')).current;\n    const ariaAttrs = {\n        'aria-invalid': hasError,\n        'aria-required': isRequired,\n        'aria-errormessage': errorMessageID,\n    };\n\n    return (\n        <div className={classes}>\n            <Label\n                hideLabel={hideLabel}\n                showOptionalText={!hideOptionalLabel && !isRequired}\n                text={label}\n                tooltip={labelTooltip}\n            >\n                {!!description && <i className=\"text-input-description\">{description}</i>}\n                <Tooltip isShown={hasError} position={errorPosition || 'middle-right'} text={error || ''} theme=\"error\">\n                    <input ref={inputRef} required={isRequired} {...ariaAttrs} {...rest} />\n                </Tooltip>\n                {isLoading && !isValid && <LoadingIndicator className=\"text-input-loading\" />}\n                {isValid && !isLoading && <IconVerified className=\"text-input-verified\" />}\n                <span id={errorMessageID} className=\"accessibility-hidden\" role=\"alert\">\n                    {error}\n                </span>\n            </Label>\n        </div>\n    );\n};\n\nTextInput.displayName = 'TextInput';\n\nexport type TextInputProps = Props;\nexport default TextInput;\n"],"file":"TextInput.js"}