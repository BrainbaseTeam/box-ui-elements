{"version":3,"sources":["../../../src/components/avatar/Avatar.js"],"names":["React","classNames","AvatarImage","AvatarInitials","UnknownUserAvatar","SIZES","large","Avatar","avatarUrl","className","name","id","size","useState","hasImageErrored","setHasImageErrored","prevAvatarUrl","setPrevAvatarUrl","classes","avatar"],"mappings":";;;;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AAEA,OAAO,eAAP;AAEA,IAAMC,KAAK,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAd;;AAuBA,SAASC,MAAT,OAAsE;AAAA,MAApDC,SAAoD,QAApDA,SAAoD;AAAA,MAAzCC,SAAyC,QAAzCA,SAAyC;AAAA,MAA9BC,IAA8B,QAA9BA,IAA8B;AAAA,MAAxBC,EAAwB,QAAxBA,EAAwB;AAAA,uBAApBC,IAAoB;AAAA,MAApBA,IAAoB,0BAAb,EAAa;;AAAA,wBACpBZ,KAAK,CAACa,QAAN,CAAwB,KAAxB,CADoB;AAAA;AAAA,MAC3DC,eAD2D;AAAA,MAC1CC,kBAD0C;;AAAA,yBAExBf,KAAK,CAACa,QAAN,CAAkD,IAAlD,CAFwB;AAAA;AAAA,MAE3DG,aAF2D;AAAA,MAE5CC,gBAF4C;;AAIlE,MAAMC,OAAO,GAAGjB,UAAU,CAAC,CAAC,QAAD,EAAWQ,SAAX,wCAAoCG,IAApC,GAA6CP,KAAK,CAACO,IAAD,CAAlD,EAAD,CAA1B,CAJkE,CAMlE;;AACA,MAAIJ,SAAS,KAAKQ,aAAlB,EAAiC;AAC7BD,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAE,IAAAA,gBAAgB,CAACT,SAAD,CAAhB;AACH;;AAED,MAAIW,MAAJ;;AACA,MAAIX,SAAS,IAAI,CAACM,eAAlB,EAAmC;AAC/BK,IAAAA,MAAM,gBACF,oBAAC,WAAD;AACI,MAAA,OAAO,EAAE,mBAAM;AACXJ,QAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,OAHL;AAII,MAAA,GAAG,EAAEP;AAJT,MADJ;AAQH,GATD,MASO,IAAIE,IAAJ,EAAU;AACbS,IAAAA,MAAM,gBAAG,oBAAC,cAAD;AAAgB,MAAA,EAAE,EAAER,EAApB;AAAwB,MAAA,IAAI,EAAED;AAA9B,MAAT;AACH,GAFM,MAEA;AACHS,IAAAA,MAAM,gBAAG,oBAAC,iBAAD;AAAmB,MAAA,SAAS,EAAC;AAA7B,MAAT;AACH;;AAED,sBACI;AAAM,IAAA,SAAS,EAAED,OAAjB;AAA0B,IAAA,IAAI,EAAC;AAA/B,KACKC,MADL,CADJ;AAKH;;AAED,eAAeZ,MAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport AvatarImage from './AvatarImage';\nimport AvatarInitials from './AvatarInitials';\nimport UnknownUserAvatar from '../../icons/avatars/UnknownUserAvatar';\n\nimport './Avatar.scss';\n\nconst SIZES = { large: true };\n\ntype Props = {\n    /**\n     * Url to avatar image.  If passed in, component will render the avatar image instead of the initials\n     *\n     * Required if \"name\" is not specified.\n     */\n    avatarUrl?: ?string,\n    /** classname to add to the container element. */\n    className?: string,\n    /** Users id */\n    id?: ?string | number,\n    /**\n     * Users full name.\n     *\n     * Required if \"avatarUrl\" is not specified.\n     */\n    name?: ?string,\n    /* avatar size (enum) */\n    size?: $Keys<typeof SIZES>,\n};\n\nfunction Avatar({ avatarUrl, className, name, id, size = '' }: Props) {\n    const [hasImageErrored, setHasImageErrored] = React.useState<boolean>(false);\n    const [prevAvatarUrl, setPrevAvatarUrl] = React.useState<$PropertyType<Props, 'avatarUrl'>>(null);\n\n    const classes = classNames(['avatar', className, { [`avatar--${size}`]: SIZES[size] }]);\n\n    // Reset hasImageErrored state when avatarUrl changes\n    if (avatarUrl !== prevAvatarUrl) {\n        setHasImageErrored(false);\n        setPrevAvatarUrl(avatarUrl);\n    }\n\n    let avatar;\n    if (avatarUrl && !hasImageErrored) {\n        avatar = (\n            <AvatarImage\n                onError={() => {\n                    setHasImageErrored(true);\n                }}\n                url={avatarUrl}\n            />\n        );\n    } else if (name) {\n        avatar = <AvatarInitials id={id} name={name} />;\n    } else {\n        avatar = <UnknownUserAvatar className=\"avatar-icon\" />;\n    }\n\n    return (\n        <span className={classes} role=\"presentation\">\n            {avatar}\n        </span>\n    );\n}\n\nexport default Avatar;\n"],"file":"Avatar.js"}