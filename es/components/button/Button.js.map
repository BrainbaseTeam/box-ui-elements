{"version":3,"sources":["../../../src/components/button/Button.js"],"names":["React","classNames","omit","LoadingIndicator","RadarAnimation","Button","event","props","isDisabled","onClick","btnElement","classList","contains","preventDefault","stopPropagation","children","className","isLoading","isSelected","setRef","type","showRadar","rest","buttonProps","styleClassName","button","element","handleClick","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAOC,gBAAP,MAA6B,sBAA7B;AACA,OAAOC,cAAP,MAA2B,UAA3B;;IAgBMC,M;;;;;;;;;;;;;;;;kEAGY,UAACC,KAAD,EAA8C;AAAA,wBACxB,MAAKC,KADmB;AAAA,UAChDC,UADgD,eAChDA,UADgD;AAAA,UACpCC,OADoC,eACpCA,OADoC;;AAExD,UAAID,UAAU,IAAK,MAAKE,UAAL,IAAmB,MAAKA,UAAL,CAAgBC,SAAhB,CAA0BC,QAA1B,CAAmC,aAAnC,CAAtC,EAA0F;AACtFN,QAAAA,KAAK,CAACO,cAAN;AACAP,QAAAA,KAAK,CAACQ,eAAN;AACA;AACH;;AACD,UAAIL,OAAJ,EAAa;AACTA,QAAAA,OAAO,CAACH,KAAD,CAAP;AACH;AACJ,K;;;;;;;6BAEQ;AAAA;;AAAA,yBAWD,KAAKC,KAXJ;AAAA,UAEDQ,QAFC,gBAEDA,QAFC;AAAA,+CAGDC,SAHC;AAAA,UAGDA,SAHC,sCAGW,EAHX;AAAA,UAIDR,UAJC,gBAIDA,UAJC;AAAA,+CAKDS,SALC;AAAA,UAKDA,SALC,sCAKW,KALX;AAAA,UAMDC,UANC,gBAMDA,UANC;AAAA,UAODC,MAPC,gBAODA,MAPC;AAAA,2CAQDC,IARC;AAAA,UAQDA,IARC,kCAQM,QARN;AAAA,+CASDC,SATC;AAAA,UASDA,SATC,sCASW,KATX;AAAA,UAUEC,IAVF;;AAaL,UAAMC,WAAW,GAAGrB,IAAI,CAACoB,IAAD,EAAO,CAAC,SAAD,CAAP,CAAxB;;AACA,UAAId,UAAJ,EAAgB;AACZe,QAAAA,WAAW,CAAC,eAAD,CAAX,GAA+B,IAA/B;AACH;;AAED,UAAMC,cAAc,GAAGvB,UAAU,CAC7B,KAD6B,EAE7B;AACI,uBAAeO,UADnB;AAEI,sBAAcS,SAFlB;AAGI,uBAAeC;AAHnB,OAF6B,EAO7BF,SAP6B,CAAjC;AAUA,UAAIS,MAAM;AAAA;AACN;AACA;AACI,QAAA,GAAG,EAAE,aAAAC,OAAO,EAAI;AACZ,UAAA,MAAI,CAAChB,UAAL,GAAkBgB,OAAlB;;AACA,cAAIP,MAAJ,EAAY;AACRA,YAAAA,MAAM,CAACO,OAAD,CAAN;AACH;AACJ,SANL;AAOI,QAAA,SAAS,EAAEF,cAPf;AAQI,QAAA,OAAO,EAAE,KAAKG,WARlB;AASI,QAAA,IAAI,EAAEP;AATV,SAUQG,WAVR,gBAYI;AAAM,QAAA,SAAS,EAAC;AAAhB,SAA+BR,QAA/B,CAZJ,EAaKE,SAAS,iBAAI,oBAAC,gBAAD;AAAkB,QAAA,SAAS,EAAC;AAA5B,QAblB,CAFJ;;AAkBA,UAAII,SAAJ,EAAe;AACXI,QAAAA,MAAM,gBAAG,oBAAC,cAAD,QAAiBA,MAAjB,CAAT;AACH;;AAED,aAAOA,MAAP;AACH;;;;EAlEgBzB,KAAK,CAAC4B,S;;AAqE3B,eAAevB,MAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\n\nimport LoadingIndicator from '../loading-indicator';\nimport RadarAnimation from '../radar';\n\ntype Props = {\n    /** Child components */\n    children?: React.Node,\n    /** Adds a class to the component */\n    className?: string,\n    isDisabled?: boolean,\n    isLoading?: boolean,\n    isSelected?: boolean,\n    onClick?: Function,\n    setRef?: Function,\n    showRadar?: boolean,\n    type?: 'button' | 'reset' | 'submit',\n};\n\nclass Button extends React.Component<Props> {\n    btnElement: ?HTMLButtonElement;\n\n    handleClick = (event: SyntheticEvent<HTMLButtonElement>) => {\n        const { isDisabled, onClick } = this.props;\n        if (isDisabled || (this.btnElement && this.btnElement.classList.contains('is-disabled'))) {\n            event.preventDefault();\n            event.stopPropagation();\n            return;\n        }\n        if (onClick) {\n            onClick(event);\n        }\n    };\n\n    render() {\n        const {\n            children,\n            className = '',\n            isDisabled,\n            isLoading = false,\n            isSelected,\n            setRef,\n            type = 'submit',\n            showRadar = false,\n            ...rest\n        } = this.props;\n\n        const buttonProps = omit(rest, ['onClick']);\n        if (isDisabled) {\n            buttonProps['aria-disabled'] = true;\n        }\n\n        const styleClassName = classNames(\n            'btn',\n            {\n                'is-disabled': isDisabled,\n                'is-loading': isLoading,\n                'is-selected': isSelected,\n            },\n            className,\n        );\n\n        let button = (\n            // eslint-disable-next-line react/button-has-type\n            <button\n                ref={element => {\n                    this.btnElement = element;\n                    if (setRef) {\n                        setRef(element);\n                    }\n                }}\n                className={styleClassName}\n                onClick={this.handleClick}\n                type={type}\n                {...buttonProps}\n            >\n                <span className=\"btn-content\">{children}</span>\n                {isLoading && <LoadingIndicator className=\"btn-loading-indicator\" />}\n            </button>\n        );\n        if (showRadar) {\n            button = <RadarAnimation>{button}</RadarAnimation>;\n        }\n\n        return button;\n    }\n}\n\nexport default Button;\n"],"file":"Button.js"}