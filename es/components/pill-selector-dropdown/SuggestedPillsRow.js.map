{"version":3,"sources":["../../../src/components/pill-selector-dropdown/SuggestedPillsRow.js"],"names":["React","noop","SuggestedPill","SuggestedPillsRow","onSuggestedPillAdd","selectedPillsValues","suggestedPillsData","suggestedPillsFilter","title","filteredSuggestedPillData","filter","item","includes","length","map","id","email","name"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AAGA,OAAO,0BAAP;;AAUA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAMb;AAAA,mCALTC,kBAKS;AAAA,MALTA,kBAKS,sCALYH,IAKZ;AAAA,mCAJTI,mBAIS;AAAA,MAJTA,mBAIS,sCAJa,EAIb;AAAA,mCAHTC,kBAGS;AAAA,MAHTA,kBAGS,sCAHY,EAGZ;AAAA,mCAFTC,oBAES;AAAA,MAFTA,oBAES,sCAFc,IAEd;AAAA,MADTC,KACS,QADTA,KACS;AACT;AACA,MAAMC,yBAAyB,GAAGH,kBAAkB,CAACI,MAAnB,CAC9B,UAAAC,IAAI;AAAA,WAAI,CAACN,mBAAmB,CAACO,QAApB,CAA6BD,IAAI,CAACJ,oBAAD,CAAjC,CAAL;AAAA,GAD0B,CAAlC;;AAIA,MAAIE,yBAAyB,CAACI,MAA1B,KAAqC,CAAzC,EAA4C;AACxC,WAAO,IAAP;AACH;;AAED,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,kCAAOL,KAAP,CADJ,EAEKC,yBAAyB,CAACK,GAA1B,CAA8B,UAAAH,IAAI;AAAA,WAC/B,oBAAC,aAAD;AACI,MAAA,GAAG,EAAEA,IAAI,CAACI,EADd;AAEI,MAAA,KAAK,EAAEJ,IAAI,CAACK,KAFhB;AAGI,MAAA,EAAE,EAAEL,IAAI,CAACI,EAHb;AAII,MAAA,IAAI,EAAEJ,IAAI,CAACM,IAJf;AAKI,MAAA,KAAK,EAAEb;AALX,MAD+B;AAAA,GAAlC,CAFL,CADJ;AAcH,CA9BD;;AAgCA,eAAeD,iBAAf","sourcesContent":["// @flow\nimport React from 'react';\nimport noop from 'lodash/noop';\n\nimport SuggestedPill from './SuggestedPill';\nimport type { SuggestedPill as SuggestedPillType, SuggestedPills, SuggestedPillsFilter } from './flowTypes';\n\nimport './SuggestedPillsRow.scss';\n\ntype Props = {\n    onSuggestedPillAdd?: SuggestedPillType => void,\n    selectedPillsValues?: Array<number>,\n    suggestedPillsData?: SuggestedPills,\n    suggestedPillsFilter?: SuggestedPillsFilter,\n    title?: string,\n};\n\nconst SuggestedPillsRow = ({\n    onSuggestedPillAdd = noop,\n    selectedPillsValues = [],\n    suggestedPillsData = [],\n    suggestedPillsFilter = 'id',\n    title,\n}: Props) => {\n    // Prevents pills from being rendered that are in the form by checking for value (id or custom value)\n    const filteredSuggestedPillData = suggestedPillsData.filter(\n        item => !selectedPillsValues.includes(item[suggestedPillsFilter]),\n    );\n\n    if (filteredSuggestedPillData.length === 0) {\n        return null;\n    }\n\n    return (\n        <div className=\"pill-selector-suggested\">\n            <span>{title}</span>\n            {filteredSuggestedPillData.map(item => (\n                <SuggestedPill\n                    key={item.id}\n                    email={item.email}\n                    id={item.id}\n                    name={item.name}\n                    onAdd={onSuggestedPillAdd}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default SuggestedPillsRow;\n"],"file":"SuggestedPillsRow.js"}