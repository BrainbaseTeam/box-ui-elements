{"version":3,"sources":["../../../src/components/pill-selector-dropdown/RoundPill.js"],"names":["React","noop","classNames","X","LabelPill","Avatar","RemoveButton","onClick","rest","RoundPill","avatarUrl","undefined","props","className","isSelected","isDisabled","hasWarning","isValid","onRemove","isMounted","setState","getPillImageUrl","id","Promise","resolve","then","getAvatarUrlHandler","catch","getAvatarUrl","isExternal","showAvatar","text","state","getStyles","handleClickRemove","PureComponent"],"mappings":"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","sourcesContent":["// @flow\nimport React from 'react';\nimport noop from 'lodash/noop';\nimport classNames from 'classnames';\nimport X from '../../icon/fill/X16';\n// $FlowFixMe this imports from a typescript file\nimport LabelPill from '../label-pill';\nimport Avatar from '../avatar';\n\nimport './RoundPill.scss';\n\ntype Props = {\n    className?: string,\n    /** Function to retrieve the image URL associated with a pill */\n    getPillImageUrl?: (data: { id: string | number, [key: string]: any }) => string | Promise<?string>,\n    hasWarning?: boolean,\n    id?: string | number,\n    isDisabled?: boolean,\n    isExternal?: boolean,\n    isSelected?: boolean,\n    isValid?: boolean,\n    onRemove: () => any,\n    showAvatar?: boolean,\n    text: string,\n};\n\ntype State = {\n    avatarUrl: ?string,\n};\n\nconst RemoveButton = ({ onClick, ...rest }: { onClick: () => any }) => (\n    <X {...rest} aria-hidden=\"true\" onClick={onClick} />\n);\n\nclass RoundPill extends React.PureComponent<Props, State> {\n    static defaultProps = {\n        isDisabled: false,\n        isSelected: false,\n        isValid: true,\n        hasWarning: false,\n        showAvatar: false,\n    };\n\n    state = {\n        avatarUrl: undefined,\n    };\n\n    isMounted: boolean = false;\n\n    getStyles = (): string => {\n        const { className, isSelected, isDisabled, hasWarning, isValid } = this.props;\n\n        return classNames('bdl-RoundPill', className, {\n            'bdl-RoundPill--selected': isSelected && !isDisabled,\n            'bdl-RoundPill--disabled': isDisabled,\n            'bdl-RoundPill--warning': hasWarning,\n            'bdl-RoundPill--error': !isValid,\n        });\n    };\n\n    handleClickRemove = () => {\n        const { isDisabled, onRemove } = this.props;\n        return isDisabled ? noop : onRemove();\n    };\n\n    /**\n     * Success handler for getting avatar url\n     *\n     * @param {string} [avatarUrl] the user avatar url\n     */\n    getAvatarUrlHandler = (avatarUrl: ?string) => {\n        if (this.isMounted) {\n            this.setState({\n                avatarUrl,\n            });\n        }\n    };\n\n    /**\n     * Gets the avatar URL for the user from the getPillImageUrl prop\n     *\n     * @return {void}\n     */\n    getAvatarUrl() {\n        const { getPillImageUrl, id } = this.props;\n        Promise.resolve(getPillImageUrl && id ? getPillImageUrl({ id }) : undefined)\n            .then(this.getAvatarUrlHandler)\n            .catch(() => {\n                // noop\n            });\n    }\n\n    componentDidMount() {\n        this.isMounted = true;\n        this.getAvatarUrl();\n    }\n\n    componentWillUnmount() {\n        this.isMounted = false;\n    }\n\n    render() {\n        const { id, isExternal, showAvatar, text } = this.props;\n        const { avatarUrl } = this.state;\n\n        return (\n            <LabelPill.Pill size=\"large\" className={this.getStyles()}>\n                {showAvatar ? (\n                    <LabelPill.Icon\n                        Component={Avatar}\n                        className=\"bdl-RoundPill-avatar\"\n                        avatarUrl={avatarUrl}\n                        id={id}\n                        isExternal={isExternal}\n                        name={text}\n                        size=\"small\"\n                        shouldShowExternal\n                    />\n                ) : null}\n                <LabelPill.Text className=\"bdl-RoundPill-text\">{text}</LabelPill.Text>\n                <LabelPill.Icon\n                    className=\"bdl-RoundPill-closeBtn\"\n                    Component={RemoveButton}\n                    onClick={this.handleClickRemove}\n                />\n            </LabelPill.Pill>\n        );\n    }\n}\n\nexport default RoundPill;\n"],"file":"RoundPill.js"}