{"version":3,"sources":["../../../src/components/nudge/Nudge.tsx"],"names":["React","classNames","Button","PrimaryButton","X16","Nudge","buttonText","className","content","dataResinTarget","illustration","isShown","header","onButtonClick","onCloseButtonClick","classes","closeButton"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AAEA,OAAO,cAAP;;AAuBA,SAASC,KAAT,OAUe;AAAA,MATXC,UASW,QATXA,UASW;AAAA,MARXC,SAQW,QARXA,SAQW;AAAA,MAPXC,OAOW,QAPXA,OAOW;AAAA,kCANXC,eAMW;AAAA,MANXA,eAMW,qCANO,aAMP;AAAA,MALXC,YAKW,QALXA,YAKW;AAAA,MAJXC,OAIW,QAJXA,OAIW;AAAA,MAHXC,MAGW,QAHXA,MAGW;AAAA,MAFXC,aAEW,QAFXA,aAEW;AAAA,MADXC,kBACW,QADXA,kBACW;AACX,MAAMC,OAAO,GAAGd,UAAU,CAAC,CAAC,WAAD,EAAcM,SAAd,CAAD,EAA2B;AAAE,qBAAiB,CAACI;AAApB,GAA3B,CAA1B;AAEA,MAAMK,WAAW,GACb,oBAAC,MAAD;AAAQ,kBAAW,aAAnB;AAAiC,IAAA,SAAS,EAAC,uBAA3C;AAAmE,IAAA,OAAO,EAAEF;AAA5E,KACI,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,EAAb;AAAiB,IAAA,KAAK,EAAE;AAAxB,IADJ,CADJ;AAMA,SACI;AAAS,IAAA,SAAS,EAAEC,OAApB;AAA6B,4BAAqB;AAAlD,KACKC,WADL,EAEI;AAAK,IAAA,SAAS,EAAC;AAAf,KAAyCN,YAAzC,CAFJ,EAGI;AAAI,IAAA,SAAS,EAAC;AAAd,KAAkCE,MAAlC,CAHJ,EAII;AAAG,IAAA,SAAS,EAAC;AAAb,KAAkCJ,OAAlC,CAJJ,EAKI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,oBAAC,aAAD;AAAe,yBAAmBC,eAAlC;AAAmD,IAAA,OAAO,EAAEI;AAA5D,KACKP,UADL,CADJ,CALJ,CADJ;AAaH;;AAED,eAAeD,KAAf","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\n\nimport Button from '../button';\nimport PrimaryButton from '../primary-button';\nimport X16 from '../../icon/fill/X16';\n\nimport './Nudge.scss';\n\nexport interface NudgeProps {\n    /** button text used for the primary call to action */\n    buttonText: React.ReactNode;\n    /** classname to add to the container element. */\n    className?: string;\n    /** DOM element for the content of the nudge. */\n    content: React.ReactNode;\n    /** String for the Resin target value */\n    dataResinTarget?: string;\n    /** DOM element for the illustration image */\n    illustration: React.ReactNode;\n    /** Boolean value from the parent to determine if the nudge is shown */\n    isShown: boolean;\n    /** DOM element for the header of the nudge */\n    header: React.ReactNode;\n    /** onClick callback for the nudge button */\n    onButtonClick: (event: React.SyntheticEvent<HTMLButtonElement>) => void;\n    /** onClick callback for the nudge closure button */\n    onCloseButtonClick: (event: React.SyntheticEvent<HTMLButtonElement>) => void;\n}\n\nfunction Nudge({\n    buttonText,\n    className,\n    content,\n    dataResinTarget = 'nudgeButton',\n    illustration,\n    isShown,\n    header,\n    onButtonClick,\n    onCloseButtonClick,\n}: NudgeProps) {\n    const classes = classNames(['bdl-Nudge', className], { 'bdl-is-closed': !isShown });\n\n    const closeButton = (\n        <Button aria-label=\"close-nudge\" className=\"bdl-Nudge-closeButton\" onClick={onCloseButtonClick}>\n            <X16 height={18} width={18} />\n        </Button>\n    );\n\n    return (\n        <article className={classes} data-resin-component=\"nudge\">\n            {closeButton}\n            <div className=\"bdl-Nudge-illustration\">{illustration}</div>\n            <h2 className=\"bdl-Nudge-header\">{header}</h2>\n            <p className=\"bdl-Nudge-content\">{content}</p>\n            <div className=\"bdl-Nudge-button\">\n                <PrimaryButton data-resin-target={dataResinTarget} onClick={onButtonClick}>\n                    {buttonText}\n                </PrimaryButton>\n            </div>\n        </article>\n    );\n}\n\nexport default Nudge;\n"],"file":"Nudge.js"}