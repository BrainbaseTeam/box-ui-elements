{"version":3,"sources":["../../../src/components/media/MediaMenu.tsx"],"names":["React","classnames","injectIntl","messages","IconEllipsis","ButtonType","PlainButton","DropdownMenu","Menu","bdlGray50","MediaMenu","className","children","isDisabled","dropdownProps","menuProps","intl","rest","formatMessage","menuButtonArialLabel","BUTTON"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,UAAT,QAAkD,YAAlD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAOC,WAAP,MAA8C,iBAA9C,C,CACA;;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,OAAO,cAAP;;AAmBA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,MACdC,SADc,QACdA,SADc;AAAA,MAEdC,QAFc,QAEdA,QAFc;AAAA,6BAGdC,UAHc;AAAA,MAGdA,UAHc,gCAGD,KAHC;AAAA,gCAIdC,aAJc;AAAA,MAIdA,aAJc,mCAIE,EAJF;AAAA,4BAKdC,SALc;AAAA,MAKdA,SALc,+BAKF,EALE;AAAA,MAMdC,IANc,QAMdA,IANc;AAAA,MAOXC,IAPW;;AAAA,SASd,oBAAC,YAAD;AAAc,IAAA,uBAAuB,MAArC;AAAsC,IAAA,cAAc;AAApD,KAAyDH,aAAzD,GACI,oBAAC,WAAD;AACI,kBAAYE,IAAI,CAACE,aAAL,CAAmBf,QAAQ,CAACgB,oBAA5B,CADhB;AAEI,IAAA,SAAS,EAAElB,UAAU,CAAC,gBAAD,EAAmBU,SAAnB,CAFzB;AAGI,IAAA,UAAU,EAAEE,UAHhB;AAII,IAAA,IAAI,EAAER,UAAU,CAACe;AAJrB,KAKQH,IALR,GAOI,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAER,SAArB;AAAgC,IAAA,MAAM,EAAE,EAAxC;AAA4C,IAAA,KAAK,EAAE;AAAnD,IAPJ,CADJ,EAUI,oBAAC,IAAD,EAAUM,SAAV,EAAsBH,QAAtB,CAVJ,CATc;AAAA,CAAlB;;AAuBA,eAAeV,UAAU,CAACQ,SAAD,CAAzB","sourcesContent":["import * as React from 'react';\nimport classnames from 'classnames';\n\nimport { injectIntl, WrappedComponentProps } from 'react-intl';\nimport messages from './messages';\nimport IconEllipsis from '../../icons/general/IconEllipsis';\nimport { ButtonType } from '../button';\nimport PlainButton, { PlainButtonProps } from '../plain-button';\n// @ts-ignore TODO: migrate DropdownMenu to typescript\nimport DropdownMenu from '../dropdown-menu';\nimport { Menu } from '../menu';\nimport { bdlGray50 } from '../../styles/variables';\nimport './Media.scss';\n\nexport interface MediaMenuProps extends PlainButtonProps, WrappedComponentProps {\n    /** Child elements */\n    children: Array<React.ReactNode> | React.ReactChild;\n\n    /** Additional class names for the menu button */\n    className?: string;\n\n    /** Additional props for the DropdownMenu */\n    dropdownProps?: {};\n\n    /** is the dropdown menu button disabled */\n    isDisabled?: boolean;\n\n    /** Additional props for the Menu */\n    menuProps?: {};\n}\n\nconst MediaMenu = ({\n    className,\n    children,\n    isDisabled = false,\n    dropdownProps = {},\n    menuProps = {},\n    intl,\n    ...rest\n}: MediaMenuProps) => (\n    <DropdownMenu constrainToScrollParent isRightAligned {...dropdownProps}>\n        <PlainButton\n            aria-label={intl.formatMessage(messages.menuButtonArialLabel)}\n            className={classnames('bdl-Media-menu', className)}\n            isDisabled={isDisabled}\n            type={ButtonType.BUTTON}\n            {...rest}\n        >\n            <IconEllipsis color={bdlGray50} height={16} width={16} />\n        </PlainButton>\n        <Menu {...menuProps}>{children}</Menu>\n    </DropdownMenu>\n);\n\nexport default injectIntl(MediaMenu);\n"],"file":"MediaMenu.js"}