{"version":3,"sources":["../../../src/components/label-pill/LabelPill.tsx"],"names":["React","classNames","startCase","LabelPillIcon","LabelPillText","LabelPillStatus","LabelPillSize","LabelPillContainer","forwardRef","props","ref","children","type","DEFAULT","size","REGULAR","className","rest","labelPillClasses","displayName","LabelPill","Pill","Text","Icon"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAO,kBAAP;AAEA,WAAYC,eAAZ;;WAAYA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;GAAAA,e,KAAAA,e;;AAWZ,WAAYC,aAAZ;;WAAYA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;GAAAA,a,KAAAA,a;;AAgBZ,IAAMC,kBAAkB,GAAGP,KAAK,CAACQ,UAAN,CAAiB,UAACC,KAAD,EAAwBC,GAAxB,EAA4D;AAAA,MAC5FC,QAD4F,GACGF,KADH,CAC5FE,QAD4F;AAAA,oBACGF,KADH,CAClFG,IADkF;AAAA,MAClFA,IADkF,4BAC3EP,eAAe,CAACQ,OAD2D;AAAA,oBACGJ,KADH,CAClDK,IADkD;AAAA,MAClDA,IADkD,4BAC3CR,aAAa,CAACS,OAD6B;AAAA,MACpBC,SADoB,GACGP,KADH,CACpBO,SADoB;AAAA,MACNC,IADM,4BACGR,KADH;;AAEpG,MAAMS,gBAAgB,GAAGjB,UAAU,CAC/B,eAD+B,2BAEbW,IAFa,gCAGTV,SAAS,CAACY,IAAD,CAHA,GAI/BE,SAJ+B,CAAnC;AAMA,SACI;AAAM,IAAA,GAAG,EAAEN,GAAX;AAAgB,IAAA,SAAS,EAAEQ;AAA3B,KAAiDD,IAAjD,GACKN,QADL,CADJ;AAKH,CAb0B,CAA3B;AAeAJ,kBAAkB,CAACY,WAAnB,GAAiC,WAAjC;AAEA,IAAMC,SAAS,GAAG;AACdC,EAAAA,IAAI,EAAEd,kBADQ;AAEde,EAAAA,IAAI,EAAElB,aAFQ;AAGdmB,EAAAA,IAAI,EAAEpB;AAHQ,CAAlB;AAMA,eAAeiB,SAAf","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport startCase from 'lodash/startCase';\nimport LabelPillIcon from './LabelPillIcon';\nimport LabelPillText from './LabelPillText';\n\nimport './LabelPill.scss';\n\nexport enum LabelPillStatus {\n    DEFAULT = 'default',\n    INFO = 'info',\n    FTUX = 'ftux',\n    HIGHLIGHT = 'highlight',\n    SUCCESS = 'success',\n    WARNING = 'warning',\n    ALERT = 'alert',\n    ERROR = 'error',\n}\n\nexport enum LabelPillSize {\n    REGULAR = 'regular',\n    LARGE = 'large',\n}\n\nexport interface LabelPillProps {\n    /** Content, wrapped in either LabelPill.Text or LabelPill.Icon */\n    children: Array<React.ReactChild> | React.ReactChild;\n    /** Type of pill */\n    type?: LabelPillStatus;\n    /** Size of pill */\n    size?: LabelPillSize;\n    /** Additional CSS classname(s) */\n    className?: string;\n}\n\nconst LabelPillContainer = React.forwardRef((props: LabelPillProps, ref: React.Ref<HTMLSpanElement>) => {\n    const { children, type = LabelPillStatus.DEFAULT, size = LabelPillSize.REGULAR, className, ...rest } = props;\n    const labelPillClasses = classNames(\n        'bdl-LabelPill',\n        `bdl-LabelPill--${type}`,\n        `bdl-LabelPill--size${startCase(size)}`,\n        className,\n    );\n    return (\n        <span ref={ref} className={labelPillClasses} {...rest}>\n            {children}\n        </span>\n    );\n});\n\nLabelPillContainer.displayName = 'LabelPill';\n\nconst LabelPill = {\n    Pill: LabelPillContainer,\n    Text: LabelPillText,\n    Icon: LabelPillIcon,\n};\n\nexport default LabelPill;\n"],"file":"LabelPill.js"}