{"version":3,"sources":["../../../src/components/tooltip/Tooltip.tsx"],"names":["React","classNames","uniqueId","getProp","TetherComponent","TetherPosition","IconClose","PlainButton","TooltipTheme","TooltipPosition","positions","BOTTOM_CENTER","attachment","TOP_CENTER","targetAttachment","BOTTOM_LEFT","TOP_RIGHT","BOTTOM_RIGHT","TOP_LEFT","MIDDLE_LEFT","MIDDLE_RIGHT","Tooltip","props","createRef","tetherRef","current","isShown","position","onDismiss","setState","wasClosedByUser","type","event","children","handler","stopPropagation","nativeEvent","stopImmediatePropagation","fireChildEvent","isShownProp","key","isControlled","state","showTooltip","hasRendered","prevProps","bodyElement","className","constrainToScrollParent","constrainToWindow","isDisabled","isTabbable","offset","showCloseButton","stopBubble","tetherElementClassName","text","theme","childAriaLabel","isLabelMatchingTooltipText","Children","only","withCloseButton","tetherPosition","constraints","componentProps","push","to","undefined","tooltipID","ERROR","onBlur","handleBlur","onFocus","handleFocus","onKeyDown","handleKeyDown","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","tabIndex","bodyEl","HTMLElement","document","body","classes","CALLOUT","tetherProps","classPrefix","enabled","tooltipInner","closeTooltip","tooltip","handleTooltipEvent","cloneElement","Component","DEFAULT"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport uniqueId from 'lodash/uniqueId';\nimport getProp from 'lodash/get';\nimport TetherComponent from 'react-tether';\n\nimport TetherPosition from '../../common/tether-positions';\nimport IconClose from '../../icon/fill/X16';\nimport PlainButton from '../plain-button';\n\nimport './Tooltip.scss';\n\nexport enum TooltipTheme {\n    CALLOUT = 'callout',\n    DEFAULT = 'default',\n    ERROR = 'error',\n}\n\nexport enum TooltipPosition {\n    BOTTOM_CENTER = 'bottom-center',\n    BOTTOM_LEFT = 'bottom-left',\n    BOTTOM_RIGHT = 'bottom-right',\n    MIDDLE_LEFT = 'middle-left',\n    MIDDLE_RIGHT = 'middle-right',\n    TOP_CENTER = 'top-center',\n    TOP_LEFT = 'top-left',\n    TOP_RIGHT = 'top-right',\n}\n\nexport type TooltipCustomPosition = {\n    attachment: TetherPosition;\n    targetAttachment: TetherPosition;\n};\n\nconst positions = {\n    [TooltipPosition.BOTTOM_CENTER]: {\n        attachment: TetherPosition.TOP_CENTER,\n        targetAttachment: TetherPosition.BOTTOM_CENTER,\n    },\n    [TooltipPosition.BOTTOM_LEFT]: {\n        attachment: TetherPosition.TOP_RIGHT,\n        targetAttachment: TetherPosition.BOTTOM_RIGHT,\n    },\n    [TooltipPosition.BOTTOM_RIGHT]: {\n        attachment: TetherPosition.TOP_LEFT,\n        targetAttachment: TetherPosition.BOTTOM_LEFT,\n    },\n    [TooltipPosition.MIDDLE_LEFT]: {\n        attachment: TetherPosition.MIDDLE_RIGHT,\n        targetAttachment: TetherPosition.MIDDLE_LEFT,\n    },\n    [TooltipPosition.MIDDLE_RIGHT]: {\n        attachment: TetherPosition.MIDDLE_LEFT,\n        targetAttachment: TetherPosition.MIDDLE_RIGHT,\n    },\n    [TooltipPosition.TOP_CENTER]: {\n        attachment: TetherPosition.BOTTOM_CENTER,\n        targetAttachment: TetherPosition.TOP_CENTER,\n    },\n    [TooltipPosition.TOP_LEFT]: {\n        attachment: TetherPosition.BOTTOM_RIGHT,\n        targetAttachment: TetherPosition.TOP_RIGHT,\n    },\n    [TooltipPosition.TOP_RIGHT]: {\n        attachment: TetherPosition.BOTTOM_LEFT,\n        targetAttachment: TetherPosition.TOP_LEFT,\n    },\n};\n\nexport type DefaultTooltipProps = {\n    /** Whether to constrain the tooltip to the element's scroll parent. Defaults to `false` */\n    constrainToScrollParent: boolean;\n    /** Whether to constrain the tooltip to window. Defaults to `true` */\n    constrainToWindow: boolean;\n    /** Forces the tooltip to be disabled irrespecitve of it's shown state. Defaults to `false` */\n    isDisabled: boolean;\n    /** Where to position the tooltip relative to the wrapped component */\n    position: TooltipPosition | TooltipCustomPosition;\n    /** Tooltip theme */\n    theme: TooltipTheme;\n};\n\nexport type TooltipProps = {\n    /** An HTML element to append the tooltip container into (otherwise appends to body) */\n    bodyElement?: HTMLElement;\n    /** A React element to put the tooltip on */\n    children: React.ReactChild;\n    /** A CSS class for the tooltip */\n    className?: string;\n    /** Forces the tooltip to be shown or hidden (useful for errors) */\n    isShown?: boolean;\n    /** Whether to add tabindex=0.  Defaults to `true` */\n    isTabbable?: boolean;\n    /** A string of the form 'vert-offset horiz-offset' which controls positioning */\n    offset?: string;\n    /** Function called if the user manually dismisses the tooltip - only applies if showCloseButton is true */\n    onDismiss?: () => void;\n    /** Shows an X button to close the tooltip. Useful when tooltips are force shown with the isShown prop. */\n    showCloseButton?: boolean;\n    /** stop click|keypress event bubbling */\n    stopBubble?: boolean;\n    /** A CSS class for the tether element component */\n    tetherElementClassName?: string;\n    /** Text to show in the tooltip */\n    text?: React.ReactNode;\n} & Partial<DefaultTooltipProps>;\n\ntype State = {\n    isShown: boolean;\n    hasRendered: boolean;\n    wasClosedByUser: boolean;\n};\n\nclass Tooltip extends React.Component<TooltipProps, State> {\n    static defaultProps: DefaultTooltipProps = {\n        constrainToScrollParent: false,\n        constrainToWindow: true,\n        isDisabled: false,\n        position: TooltipPosition.TOP_CENTER,\n        theme: TooltipTheme.DEFAULT,\n    };\n\n    constructor(props: TooltipProps) {\n        super(props);\n\n        this.state = { isShown: !!props.isShown, hasRendered: false, wasClosedByUser: false };\n    }\n\n    componentDidMount() {\n        this.setState({ hasRendered: true });\n    }\n\n    componentDidUpdate(prevProps: TooltipProps) {\n        // Reset wasClosedByUser state when isShown transitions from false to true\n        if (this.isControlled()) {\n            if (!prevProps.isShown && this.props.isShown) {\n                this.setState({ wasClosedByUser: false });\n            }\n        }\n    }\n\n    tooltipID = uniqueId('tooltip');\n\n    tetherRef = React.createRef<TetherComponent>();\n\n    // Instance API: Forces the radar to be repositioned\n    position = () => {\n        if (this.tetherRef.current && this.isShown()) {\n            this.tetherRef.current.position();\n        }\n    };\n\n    closeTooltip = () => {\n        const { onDismiss } = this.props;\n        this.setState({ wasClosedByUser: true });\n        if (onDismiss) {\n            onDismiss();\n        }\n    };\n\n    fireChildEvent = (type: string, event: React.SyntheticEvent<HTMLElement>) => {\n        const { children } = this.props;\n        const handler = (children as React.ReactElement).props[type];\n        if (handler) {\n            handler(event);\n        }\n    };\n\n    handleTooltipEvent = (event: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => {\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n    };\n\n    handleMouseEnter = (event: React.SyntheticEvent<HTMLElement>) => {\n        this.setState({ isShown: true });\n        this.fireChildEvent('onMouseEnter', event);\n    };\n\n    handleMouseLeave = (event: React.SyntheticEvent<HTMLElement>) => {\n        this.setState({ isShown: false });\n        this.fireChildEvent('onMouseLeave', event);\n    };\n\n    handleFocus = (event: React.SyntheticEvent<HTMLElement>) => {\n        this.setState({ isShown: true });\n        this.fireChildEvent('onFocus', event);\n    };\n\n    handleBlur = (event: React.SyntheticEvent<HTMLElement>) => {\n        this.setState({ isShown: false });\n        this.fireChildEvent('onBlur', event);\n    };\n\n    isControlled = () => {\n        const { isShown: isShownProp } = this.props;\n        return typeof isShownProp !== 'undefined';\n    };\n\n    handleKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\n        if (event.key === 'Escape') {\n            this.setState({ isShown: false });\n        }\n        this.fireChildEvent('onKeyDown', event);\n    };\n\n    isShown = () => {\n        const { isShown: isShownProp } = this.props;\n        const isControlled = this.isControlled();\n\n        const isShown = isControlled ? isShownProp : this.state.isShown;\n\n        const showTooltip = isShown && !this.state.wasClosedByUser && this.state.hasRendered;\n\n        return showTooltip;\n    };\n\n    render() {\n        const {\n            bodyElement,\n            children,\n            className,\n            constrainToScrollParent,\n            constrainToWindow,\n            isDisabled,\n            isTabbable = true,\n            offset,\n            position = TooltipPosition.TOP_CENTER,\n            showCloseButton,\n            stopBubble,\n            tetherElementClassName,\n            text,\n            theme,\n        } = this.props;\n\n        const childAriaLabel = getProp(children, 'props.aria-label');\n        const isLabelMatchingTooltipText = !!childAriaLabel && childAriaLabel === text;\n\n        // If the tooltip is disabled just render the children\n        if (isDisabled) {\n            return React.Children.only(children);\n        }\n\n        const isControlled = this.isControlled();\n        const showTooltip = this.isShown();\n\n        const withCloseButton = showCloseButton && isControlled;\n        const tetherPosition = typeof position === 'string' ? positions[position] : position;\n        const constraints = [];\n        const componentProps: {\n            [key: string]:\n                | string\n                | ((event: React.SyntheticEvent<HTMLElement>) => void)\n                | ((event: React.KeyboardEvent<HTMLElement>) => void);\n        } = {};\n\n        if (constrainToScrollParent) {\n            constraints.push({\n                to: 'scrollParent',\n                attachment: 'together',\n            });\n        }\n        if (constrainToWindow) {\n            constraints.push({\n                to: 'window',\n                attachment: 'together',\n            });\n        }\n\n        if (showTooltip) {\n            if (!isLabelMatchingTooltipText || childAriaLabel === undefined) {\n                componentProps['aria-describedby'] = this.tooltipID;\n            }\n\n            if (theme === TooltipTheme.ERROR) {\n                componentProps['aria-errormessage'] = this.tooltipID;\n            }\n        }\n        if (!isControlled) {\n            componentProps.onBlur = this.handleBlur;\n            componentProps.onFocus = this.handleFocus;\n            componentProps.onKeyDown = this.handleKeyDown;\n            componentProps.onMouseEnter = this.handleMouseEnter;\n            componentProps.onMouseLeave = this.handleMouseLeave;\n\n            if (isTabbable) {\n                componentProps.tabIndex = '0';\n            }\n        }\n\n        const bodyEl = bodyElement instanceof HTMLElement ? bodyElement : document.body;\n\n        const classes = classNames('tooltip', 'bdl-Tooltip', className, {\n            'is-callout': theme === TooltipTheme.CALLOUT,\n            'is-error': theme === TooltipTheme.ERROR,\n            'with-close-button': withCloseButton,\n        });\n\n        const tetherProps: {\n            attachment: TetherPosition;\n            bodyElement: HTMLElement;\n            classPrefix: string;\n            constraints: {};\n            enabled: boolean | undefined;\n            targetAttachment: TetherPosition;\n            offset?: string;\n            className?: string;\n        } = {\n            attachment: tetherPosition.attachment,\n            bodyElement: bodyEl,\n            classPrefix: 'tooltip',\n            constraints,\n            enabled: showTooltip,\n            targetAttachment: tetherPosition.targetAttachment,\n        };\n\n        if (tetherElementClassName) {\n            tetherProps.className = tetherElementClassName;\n        }\n\n        if (offset) {\n            tetherProps.offset = offset;\n        }\n\n        const tooltipInner = (\n            <>\n                {text}\n                {withCloseButton && (\n                    <PlainButton className=\"tooltip-close-button\" onClick={this.closeTooltip}>\n                        <IconClose className=\"bdl-Tooltip-iconClose\" width={14} height={14} />\n                    </PlainButton>\n                )}\n            </>\n        );\n\n        const tooltip = stopBubble ? (\n            <div\n                className={classes}\n                id={this.tooltipID}\n                role=\"presentation\"\n                onClick={this.handleTooltipEvent}\n                onContextMenu={this.handleTooltipEvent}\n                onKeyPress={this.handleTooltipEvent}\n            >\n                <div\n                    role={theme === TooltipTheme.ERROR ? undefined : 'tooltip'}\n                    aria-live=\"polite\"\n                    aria-hidden={isLabelMatchingTooltipText}\n                    data-testid=\"bdl-Tooltip\"\n                >\n                    {tooltipInner}\n                </div>\n            </div>\n        ) : (\n            <div\n                className={classes}\n                data-testid=\"bdl-Tooltip\"\n                id={this.tooltipID}\n                aria-live=\"polite\"\n                aria-hidden={isLabelMatchingTooltipText}\n                role={theme === TooltipTheme.ERROR ? undefined : 'tooltip'}\n            >\n                {tooltipInner}\n            </div>\n        );\n\n        return (\n            <TetherComponent ref={this.tetherRef} {...tetherProps}>\n                {React.cloneElement(React.Children.only(children) as React.ReactElement, componentProps)}\n                {showTooltip && tooltip}\n            </TetherComponent>\n        );\n    }\n}\n\nexport default Tooltip;\n"],"file":"Tooltip.js"}