{"version":3,"sources":["../../../src/components/tooltip/Tooltip.js"],"names":["React","classNames","uniqueId","TetherComponent","IconClose","PlainButton","BOTTOM_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","MIDDLE_LEFT","MIDDLE_RIGHT","TOP_CENTER","TOP_LEFT","TOP_RIGHT","CALLOUT_THEME","DEFAULT_THEME","ERROR_THEME","positions","attachment","targetAttachment","Tooltip","props","createRef","tetherRef","current","isShown","position","onDismiss","setState","wasClosedByUser","type","event","handler","children","fireChildEvent","key","isShownProp","isControlled","state","showTooltip","bodyElement","className","constrainToScrollParent","constrainToWindow","isDisabled","isTabbable","showCloseButton","text","theme","Children","only","withCloseButton","tetherPosition","constraints","componentProps","push","to","tooltipID","onBlur","handleBlur","onFocus","handleFocus","onKeyDown","handleKeyDown","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","tabIndex","bodyEl","HTMLElement","document","body","classes","cloneElement","closeTooltip","Component"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport uniqueId from 'lodash/uniqueId';\nimport TetherComponent from 'react-tether';\n\nimport IconClose from '../../icons/general/IconClose';\nimport PlainButton from '../plain-button';\n\nimport './Tooltip.scss';\n\nconst BOTTOM_CENTER = 'bottom-center';\nconst BOTTOM_LEFT = 'bottom-left';\nconst BOTTOM_RIGHT = 'bottom-right';\nconst MIDDLE_LEFT = 'middle-left';\nconst MIDDLE_RIGHT = 'middle-right';\nconst TOP_CENTER = 'top-center';\nconst TOP_LEFT = 'top-left';\nconst TOP_RIGHT = 'top-right';\n\nconst CALLOUT_THEME = 'callout';\nconst DEFAULT_THEME = 'default';\nconst ERROR_THEME = 'error';\n\nconst positions = {\n    [BOTTOM_CENTER]: {\n        attachment: 'top center',\n        targetAttachment: 'bottom center',\n    },\n    [BOTTOM_LEFT]: {\n        attachment: 'top right',\n        targetAttachment: 'bottom right',\n    },\n    [BOTTOM_RIGHT]: {\n        attachment: 'top left',\n        targetAttachment: 'bottom left',\n    },\n    [MIDDLE_LEFT]: {\n        attachment: 'middle right',\n        targetAttachment: 'middle left',\n    },\n    [MIDDLE_RIGHT]: {\n        attachment: 'middle left',\n        targetAttachment: 'middle right',\n    },\n    [TOP_CENTER]: {\n        attachment: 'bottom center',\n        targetAttachment: 'top center',\n    },\n    [TOP_LEFT]: {\n        attachment: 'bottom right',\n        targetAttachment: 'top right',\n    },\n    [TOP_RIGHT]: {\n        attachment: 'bottom left',\n        targetAttachment: 'top left',\n    },\n};\n\nexport type Position =\n    | 'bottom-center'\n    | 'bottom-left'\n    | 'bottom-right'\n    | 'middle-left'\n    | 'middle-right'\n    | 'top-center'\n    | 'top-left'\n    | 'top-right';\n\ntype Props = {\n    bodyElement?: HTMLElement,\n    /** A React element to put the tooltip on */\n    children: React.Node,\n    /** A CSS class for the tooltip */\n    className?: string,\n    /** Whether to constrain the tooltip to the element's scroll parent. Defaults to `false` */\n    constrainToScrollParent: boolean,\n    /** Whether to constrain the tooltip to window. Defaults to `true` */\n    constrainToWindow: boolean,\n    /** Forces the tooltip to be disabled irrespecitve of it's shown state. Defaults to `false` */\n    isDisabled: boolean,\n    /** Forces the tooltip to be shown or hidden (useful for errors) */\n    isShown?: boolean,\n    /** Whether to add tabindex=0.  Defaults to `true` */\n    isTabbable?: boolean,\n    /** Function called if the user manually dismisses the tooltip - only applies if showCloseButton is true */\n    onDismiss?: () => void,\n    /** Where to position the tooltip relative to the wrapped component */\n    position: Position,\n    /** Shows an X button to close the tooltip. Useful when tooltips are force shown with the isShown prop. */\n    showCloseButton?: boolean,\n    /** Text to show in the tooltip */\n    text?: React.Node,\n    /** Tooltip theme */\n    theme: 'callout' | 'default' | 'error',\n};\n\ntype State = {\n    isShown: boolean,\n    wasClosedByUser: boolean,\n};\n\nclass Tooltip extends React.Component<Props, State> {\n    static defaultProps = {\n        constrainToScrollParent: false,\n        constrainToWindow: true,\n        isDisabled: false,\n        position: TOP_CENTER,\n        theme: DEFAULT_THEME,\n    };\n\n    constructor(props: Props) {\n        super(props);\n\n        this.state = { isShown: !!props.isShown, wasClosedByUser: false };\n    }\n\n    tooltipID = uniqueId('tooltip');\n\n    tetherRef = React.createRef<{ position: () => {} }>();\n\n    // Instance API: Forces the radar to be repositioned\n    position = () => {\n        if (this.tetherRef.current && this.isShown()) {\n            this.tetherRef.current.position();\n        }\n    };\n\n    closeTooltip = () => {\n        const { onDismiss } = this.props;\n        this.setState({ wasClosedByUser: true });\n        if (onDismiss) {\n            onDismiss();\n        }\n    };\n\n    fireChildEvent = (type: string, event: SyntheticEvent<>) => {\n        // $FlowFixMe\n        const handler = this.props.children.props[type];\n        if (handler) {\n            handler(event);\n        }\n    };\n\n    handleMouseEnter = (event: SyntheticEvent<>) => {\n        this.setState({ isShown: true });\n        this.fireChildEvent('onMouseEnter', event);\n    };\n\n    handleMouseLeave = (event: SyntheticEvent<>) => {\n        this.setState({ isShown: false });\n        this.fireChildEvent('onMouseLeave', event);\n    };\n\n    handleFocus = (event: SyntheticEvent<>) => {\n        this.setState({ isShown: true });\n        this.fireChildEvent('onFocus', event);\n    };\n\n    handleBlur = (event: SyntheticEvent<>) => {\n        this.setState({ isShown: false });\n        this.fireChildEvent('onBlur', event);\n    };\n\n    handleKeyDown = (event: SyntheticKeyboardEvent<>) => {\n        if (event.key === 'Escape') {\n            this.setState({ isShown: false });\n        }\n        this.fireChildEvent('onKeyDown', event);\n    };\n\n    isControlled = () => {\n        const { isShown: isShownProp } = this.props;\n        return typeof isShownProp !== 'undefined';\n    };\n\n    isShown = () => {\n        const { isShown: isShownProp } = this.props;\n        const isControlled = this.isControlled();\n\n        const isShown = isControlled ? isShownProp : this.state.isShown;\n\n        const showTooltip = isShown && !this.state.wasClosedByUser;\n\n        return showTooltip;\n    };\n\n    render() {\n        const {\n            bodyElement,\n            children,\n            className,\n            constrainToScrollParent,\n            constrainToWindow,\n            isDisabled,\n            isTabbable = true,\n            position,\n            showCloseButton,\n            text,\n            theme,\n        } = this.props;\n\n        // If the tooltip is disabled just render the children\n        if (isDisabled) {\n            return React.Children.only(children);\n        }\n\n        const isControlled = this.isControlled();\n        const showTooltip = this.isShown();\n\n        const withCloseButton = showCloseButton && isControlled;\n        const tetherPosition = positions[position];\n        const constraints = [];\n        const componentProps = {};\n\n        if (constrainToScrollParent) {\n            constraints.push({\n                to: 'scrollParent',\n                attachment: 'together',\n            });\n        }\n        if (constrainToWindow) {\n            constraints.push({\n                to: 'window',\n                attachment: 'together',\n            });\n        }\n\n        if (showTooltip) {\n            componentProps['aria-describedby'] = this.tooltipID;\n        }\n        if (!isControlled) {\n            componentProps.onBlur = this.handleBlur;\n            componentProps.onFocus = this.handleFocus;\n            componentProps.onKeyDown = this.handleKeyDown;\n            componentProps.onMouseEnter = this.handleMouseEnter;\n            componentProps.onMouseLeave = this.handleMouseLeave;\n\n            if (isTabbable) {\n                componentProps.tabIndex = '0';\n            }\n        }\n\n        const bodyEl = bodyElement instanceof HTMLElement ? bodyElement : document.body;\n\n        const classes = classNames('tooltip', className, {\n            'is-callout': theme === CALLOUT_THEME,\n            'is-error': theme === ERROR_THEME,\n            'with-close-button': withCloseButton,\n        });\n\n        return (\n            <TetherComponent\n                attachment={tetherPosition.attachment}\n                bodyElement={bodyEl}\n                classPrefix=\"tooltip\"\n                constraints={constraints}\n                enabled={showTooltip}\n                targetAttachment={tetherPosition.targetAttachment}\n                ref={this.tetherRef}\n            >\n                {React.cloneElement(React.Children.only(children), componentProps)}\n                {showTooltip && (\n                    <div className={classes} id={this.tooltipID} role=\"tooltip\">\n                        {text}\n                        {withCloseButton && (\n                            <PlainButton className=\"tooltip-close-button\" onClick={this.closeTooltip}>\n                                <IconClose />\n                            </PlainButton>\n                        )}\n                    </div>\n                )}\n            </TetherComponent>\n        );\n    }\n}\n\nexport default Tooltip;\n"],"file":"Tooltip.js"}