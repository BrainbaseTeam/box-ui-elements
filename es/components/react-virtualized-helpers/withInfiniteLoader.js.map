{"version":3,"sources":["../../../src/components/react-virtualized-helpers/withInfiniteLoader.js"],"names":["React","InfiniteLoader","getDisplayName","WrappedComponent","displayName","name","withInfiniteLoader","InfiniteLoaderComponent","infiniteLoaderProps","isRowLoaded","loadMoreRows","minimumBatchSize","rowCount","threshold","rest","onRowsRendered","registerChild"],"mappings":";;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,cAAP,MAA2B,gDAA3B;;AAEA,SAASC,cAAT,CAAwBC,gBAAxB,EAA0C;AACtC,SAAOA,gBAAgB,CAACC,WAAjB,IAAgCD,gBAAgB,CAACE,IAAjD,IAAyD,WAAhE;AACH;;AAYD,SAASC,kBAAT,CAA4BH,gBAA5B,EAA0G;AACtG,MAAMI,uBAAuB,GAAG,SAA1BA,uBAA0B;AAAA,qCAC5BC,mBAD4B;AAAA,QACLC,WADK,yBACLA,WADK;AAAA,QACQC,YADR,yBACQA,YADR;AAAA,QACsBC,gBADtB,yBACsBA,gBADtB;AAAA,QACwCC,QADxC,yBACwCA,QADxC;AAAA,QACkDC,SADlD,yBACkDA,SADlD;AAAA,QAEzBC,IAFyB;;AAAA,WAI5B,oBAAC,cAAD;AACI,MAAA,WAAW,EAAEL,WADjB;AAEI,MAAA,YAAY,EAAEC,YAFlB;AAGI,MAAA,gBAAgB,EAAEC,gBAHtB;AAII,MAAA,QAAQ,EAAEC,QAJd;AAKI,MAAA,SAAS,EAAEC;AALf,OAOK;AAAA,UAAGE,cAAH,SAAGA,cAAH;AAAA,UAAmBC,aAAnB,SAAmBA,aAAnB;AAAA,aACG,oBAAC,gBAAD,eAAsBF,IAAtB;AAA4B,QAAA,GAAG,EAAEE,aAAjC;AAAgD,QAAA,cAAc,EAAED;AAAhE,SADH;AAAA,KAPL,CAJ4B;AAAA,GAAhC;;AAiBAR,EAAAA,uBAAuB,CAACH,WAAxB,gCAA4DF,cAAc,CAACC,gBAAD,CAA1E;AAEA,SAAOI,uBAAP;AACH;;AAED,eAAeD,kBAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport InfiniteLoader from 'react-virtualized/dist/commonjs/InfiniteLoader';\n\nfunction getDisplayName(WrappedComponent) {\n    return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n\ntype Props = {\n    infiniteLoaderProps: {\n        isRowLoaded: Function,\n        loadMoreRows: Function,\n        minimumBatchSize?: number,\n        rowCount: number,\n        threshold?: number,\n    },\n};\n\nfunction withInfiniteLoader(WrappedComponent: Class<React.Component<{ onRowsRendered?: Function }, any>>) {\n    const InfiniteLoaderComponent = ({\n        infiniteLoaderProps: { isRowLoaded, loadMoreRows, minimumBatchSize, rowCount, threshold },\n        ...rest\n    }: Props) => (\n        <InfiniteLoader\n            isRowLoaded={isRowLoaded}\n            loadMoreRows={loadMoreRows}\n            minimumBatchSize={minimumBatchSize}\n            rowCount={rowCount}\n            threshold={threshold}\n        >\n            {({ onRowsRendered, registerChild }) => (\n                <WrappedComponent {...rest} ref={registerChild} onRowsRendered={onRowsRendered} />\n            )}\n        </InfiniteLoader>\n    );\n\n    InfiniteLoaderComponent.displayName = `WithInfiniteLoader(${getDisplayName(WrappedComponent)})`;\n\n    return InfiniteLoaderComponent;\n}\n\nexport default withInfiniteLoader;\n"],"file":"withInfiniteLoader.js"}