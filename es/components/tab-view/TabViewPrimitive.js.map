{"version":3,"sources":["../../../src/components/tab-view/TabViewPrimitive.js"],"names":["React","classNames","omit","uniqueId","IconPageBack","IconPageForward","LinkButton","TAB_KEY","TAB_PANEL_ROLE","TabViewPrimitive","props","tabIndex","onTabFocus","onTabSelect","tabsElements","length","lastTabElement","offsetLeft","offsetWidth","tabsContainer","tabsContainerOffsetLeft","state","viewportOffset","parseInt","isDynamic","tabElementOfInterest","lastElementsAnchorPoint","getLastElementsAnchorPoint","tabsContainerWidth","getTabsContainerWidth","setState","newOffset","Math","min","newViewportOffset","getTabsContainerOffsetLeft","focusedIndex","selectedIndex","focus","event","children","resetFocusedTab","resetActiveTab","childrenCount","Children","count","key","calculateNextIndex","preventDefault","stopPropagation","calculatePrevIndex","currentIndex","tabviewID","scrollToTab","prevProps","prevFocusedIndex","prevSelectedIndex","focusOnTabElement","style","left","ref","handleKeyDown","map","tab","i","buttonProps","classes","ariaControls","ariaSelected","id","href","component","refProp","title","onClickTab","hidden","isLeftArrowVisible","renderTabs","isRightArrowVisible","className","onKeyUp","renderDynamicTabs","toArray","child","Component"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\nimport uniqueId from 'lodash/uniqueId';\n\nimport IconPageBack from '../../icons/general/IconPageBack';\nimport IconPageForward from '../../icons/general/IconPageForward';\nimport LinkButton from '../link/LinkButton';\n\nimport './Tabs.scss';\n\nexport const TAB_KEY = 'Tab';\nexport const TAB_PANEL_ROLE = 'tabpanel';\n\ntype Props = {\n    children: React.Node,\n    className?: string,\n    focusedIndex: number,\n    isDynamic?: boolean,\n    onKeyUp?: Function,\n    onTabFocus: Function,\n    onTabSelect?: Function,\n    resetActiveTab: Function,\n    resetFocusedTab: Function,\n    selectedIndex: number,\n};\n\ntype State = {\n    tabsContainerOffsetLeft: number,\n};\n\nclass TabViewPrimitive extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.tabviewID = uniqueId('tabview');\n\n        this.state = {\n            tabsContainerOffsetLeft: 0,\n        };\n    }\n\n    componentDidMount() {\n        const { isDynamic, focusedIndex } = this.props;\n        if (isDynamic) {\n            // set initial tabsContainerOffsetLeft state after first mounting\n            this.scrollToTab(focusedIndex);\n        }\n    }\n\n    componentDidUpdate(prevProps: Props) {\n        const { focusedIndex: prevFocusedIndex, selectedIndex: prevSelectedIndex } = prevProps;\n        const { focusedIndex, selectedIndex } = this.props;\n\n        if (this.props.isDynamic) {\n            if (prevFocusedIndex !== focusedIndex) {\n                this.scrollToTab(focusedIndex);\n            }\n\n            // update tabsContainerOffsetLeft state when receiving a new prop\n            if (prevSelectedIndex !== selectedIndex) {\n                this.scrollToTab(selectedIndex);\n            }\n        }\n\n        if (prevFocusedIndex !== focusedIndex) {\n            // have to focus after render otherwise, the focus will be lost\n            this.focusOnTabElement(focusedIndex);\n        }\n    }\n\n    onClickTab = (tabIndex: number) => {\n        const { onTabFocus, onTabSelect } = this.props;\n        if (onTabSelect) {\n            onTabSelect(tabIndex);\n        }\n        onTabFocus(tabIndex);\n    };\n\n    getLastElementsAnchorPoint = () => {\n        if (this.tabsElements.length === 0) {\n            return 0;\n        }\n\n        const lastTabElement = this.tabsElements[this.tabsElements.length - 1];\n        return lastTabElement.offsetLeft + lastTabElement.offsetWidth;\n    };\n\n    getTabsContainerOffsetLeft = () => {\n        if (!this.tabsContainer) {\n            return 0;\n        }\n\n        const { tabsContainerOffsetLeft } = this.state;\n        let viewportOffset = parseInt(tabsContainerOffsetLeft, 10) * -1;\n        viewportOffset = viewportOffset || 0;\n        return viewportOffset;\n    };\n\n    getTabsContainerWidth = () => (this.tabsContainer ? parseInt(this.tabsContainer.offsetWidth, 10) : 0);\n\n    tabviewID: string;\n\n    scrollToTab = (tabIndex: number) => {\n        if (\n            !this.props.isDynamic ||\n            this.tabsContainer === null ||\n            this.tabsElements.length === 0 ||\n            tabIndex < 0 ||\n            tabIndex > this.tabsElements.length - 1\n        ) {\n            return;\n        }\n\n        const tabElementOfInterest = this.tabsElements[tabIndex];\n        const lastElementsAnchorPoint = this.getLastElementsAnchorPoint();\n\n        // if tabs don't overflow at all, no need to scroll\n        const tabsContainerWidth = this.getTabsContainerWidth();\n        if (lastElementsAnchorPoint <= tabsContainerWidth) {\n            this.setState({ tabsContainerOffsetLeft: 0 });\n            return;\n        }\n\n        // do not scroll any more if we will go past the rightmost anchor\n        const newOffset = Math.min(lastElementsAnchorPoint - tabsContainerWidth, tabElementOfInterest.offsetLeft);\n\n        // move the viewport\n        const newViewportOffset = -1 * newOffset;\n        this.setState({ tabsContainerOffsetLeft: newViewportOffset });\n    };\n\n    isRightArrowVisible = () => {\n        if (!this.tabsContainer) {\n            return false;\n        }\n\n        const tabsContainerOffsetLeft = this.getTabsContainerOffsetLeft();\n        const lastElementsAnchorPoint = this.getLastElementsAnchorPoint();\n        const tabsContainerWidth = this.getTabsContainerWidth();\n\n        return tabsContainerOffsetLeft + tabsContainerWidth < lastElementsAnchorPoint;\n    };\n\n    isLeftArrowVisible = () => {\n        const { focusedIndex, selectedIndex } = this.props;\n        const tabsContainerOffsetLeft = this.getTabsContainerOffsetLeft();\n\n        return tabsContainerOffsetLeft !== 0 && (selectedIndex !== 0 || focusedIndex !== 0);\n    };\n\n    focusOnTabElement = (focusedIndex: number) => {\n        if (focusedIndex + 1 > this.tabsElements.length || focusedIndex < 0) {\n            return;\n        }\n\n        this.tabsElements[focusedIndex].focus();\n    };\n\n    tabsElements = [];\n\n    tabsContainer = null;\n\n    handleKeyDown = (event: SyntheticKeyboardEvent<>) => {\n        const { children, focusedIndex, onTabFocus, resetFocusedTab, resetActiveTab } = this.props;\n        const childrenCount = React.Children.count(children);\n\n        switch (event.key) {\n            case 'ArrowRight':\n                onTabFocus(this.calculateNextIndex(focusedIndex, childrenCount));\n                event.preventDefault();\n                event.stopPropagation();\n                break;\n\n            case 'ArrowLeft':\n                onTabFocus(this.calculatePrevIndex(focusedIndex, childrenCount));\n                event.preventDefault();\n                event.stopPropagation();\n                break;\n\n            case 'Escape':\n                resetActiveTab();\n                break;\n\n            case TAB_KEY:\n                resetFocusedTab();\n                break;\n\n            default:\n                break;\n        }\n    };\n\n    calculateNextIndex = (currentIndex: number, childrenCount: number) => (currentIndex + 1) % childrenCount;\n\n    calculatePrevIndex = (currentIndex: number, childrenCount: number) =>\n        (currentIndex - 1 + childrenCount) % childrenCount;\n\n    /* eslint-disable jsx-a11y/no-noninteractive-element-to-interactive-role */\n    renderTabs() {\n        const { children, selectedIndex, isDynamic } = this.props;\n        const { tabsContainerOffsetLeft } = this.state;\n\n        const style = isDynamic ? { left: `${tabsContainerOffsetLeft}px` } : {};\n\n        return (\n            <div\n                className=\"tabs\"\n                role=\"tablist\"\n                tabIndex=\"0\"\n                ref={ref => {\n                    this.tabsContainer = ref;\n                }}\n                style={style}\n                onKeyDown={!isDynamic ? this.handleKeyDown : null}\n            >\n                {React.Children.map(children, (tab, i) => {\n                    const buttonProps = omit(tab.props, ['className', 'children', 'title']);\n\n                    const classes = classNames('btn-plain', 'tab', i === selectedIndex ? 'is-selected' : '');\n\n                    const ariaControls = `${this.tabviewID}-panel-${i + 1}`;\n                    const ariaSelected = i === selectedIndex;\n                    const id = `${this.tabviewID}-tab-${i + 1}`;\n                    const { href, component, refProp } = tab.props;\n\n                    const tabIndex = i === selectedIndex ? '0' : '-1';\n\n                    if (href) {\n                        return (\n                            <LinkButton\n                                className={classes}\n                                aria-controls={ariaControls}\n                                aria-selected={ariaSelected}\n                                id={id}\n                                role=\"tab\"\n                                href={href}\n                                linkRef={ref => {\n                                    this.tabsElements[i] = ref;\n                                }}\n                                refProp={refProp}\n                                tabIndex={tabIndex}\n                                to={href}\n                                component={component}\n                            >\n                                <div className=\"tab-title\">{tab.props.title}</div>\n                                <div className=\"tab-underline\" />\n                            </LinkButton>\n                        );\n                    }\n                    return (\n                        <button\n                            className={classes}\n                            aria-controls={ariaControls}\n                            aria-selected={ariaSelected}\n                            onClick={() => this.onClickTab(i)}\n                            role=\"tab\"\n                            type=\"button\"\n                            id={id}\n                            ref={ref => {\n                                this.tabsElements[i] = ref;\n                            }}\n                            tabIndex={tabIndex}\n                            {...buttonProps}\n                        >\n                            <div className=\"tab-title\">{tab.props.title}</div>\n                            <div className=\"tab-underline\" />\n                        </button>\n                    );\n                })}\n            </div>\n        );\n    }\n\n    /* eslint-enable jsx-a11y/no-noninteractive-element-to-interactive-role */\n    renderDynamicTabs() {\n        const { onTabFocus, focusedIndex } = this.props;\n        return (\n            // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n            <div className=\"dynamic-tabs-bar\" onKeyDown={this.handleKeyDown}>\n                <button\n                    className={classNames('btn-plain svg-container left-arrow', {\n                        hidden: !this.isLeftArrowVisible(),\n                    })}\n                    onClick={() => onTabFocus(focusedIndex - 1)}\n                    type=\"button\"\n                    tabIndex=\"-1\"\n                >\n                    <IconPageBack />\n                </button>\n                <div className=\"dynamic-tabs-wrapper\">{this.renderTabs()}</div>\n                <button\n                    className={classNames('btn-plain svg-container right-arrow', {\n                        hidden: !this.isRightArrowVisible(),\n                    })}\n                    onClick={() => onTabFocus(focusedIndex + 1)}\n                    type=\"button\"\n                    tabIndex=\"-1\"\n                >\n                    <IconPageForward />\n                </button>\n            </div>\n        );\n    }\n\n    render() {\n        const { children, className = '', isDynamic = false, onKeyUp, selectedIndex } = this.props;\n        return (\n            // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n            <div\n                className={`tab-view ${classNames(className, {\n                    'dynamic-tabs': isDynamic,\n                })}`}\n                onKeyUp={onKeyUp}\n            >\n                {!isDynamic ? this.renderTabs() : this.renderDynamicTabs()}\n                <div className=\"tab-panels\">\n                    {React.Children.toArray(children).map((child, i) => (\n                        <div\n                            key={i}\n                            id={`${this.tabviewID}-panel-${i}`}\n                            aria-labelledby={`${this.tabviewID}-tab-${i + 1}`}\n                            aria-hidden={selectedIndex !== i}\n                            className={`tab-panel ${i === selectedIndex ? 'is-selected' : ''}`}\n                            role={TAB_PANEL_ROLE}\n                        >\n                            {child.props.children}\n                        </div>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TabViewPrimitive;\n"],"file":"TabViewPrimitive.js"}