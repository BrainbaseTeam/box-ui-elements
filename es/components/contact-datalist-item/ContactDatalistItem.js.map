{"version":3,"sources":["../../../src/components/contact-datalist-item/ContactDatalistItem.js"],"names":["React","Avatar","DatalistItem","ContactDatalistItem","avatarUrl","undefined","isMounted","setState","props","getContactAvatarUrl","id","Promise","resolve","then","getAvatarUrlHandler","catch","getAvatarUrl","isExternal","name","showAvatar","subtitle","rest","state","PureComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AAEA,OAAO,4BAAP;;IAeMC,mB;;;;;;;;;;;;;;;;;;4DACM;AACJC,MAAAA,SAAS,EAAEC;AADP,K;;gEAIa,K;;0EAOC,UAACD,SAAD,EAAwB;AAC1C,UAAI,MAAKE,SAAT,EAAoB;AAChB,cAAKC,QAAL,CAAc;AACVH,UAAAA,SAAS,EAATA;AADU,SAAd;AAGH;AACJ,K;;;;;;;;AAED;;;;;mCAKe;AAAA,wBACyB,KAAKI,KAD9B;AAAA,UACHC,mBADG,eACHA,mBADG;AAAA,UACkBC,EADlB,eACkBA,EADlB;AAEXC,MAAAA,OAAO,CAACC,OAAR,CAAgBH,mBAAmB,IAAIC,EAAvB,GAA4BD,mBAAmB,CAAC;AAAEC,QAAAA,EAAE,EAAFA;AAAF,OAAD,CAA/C,GAA0DL,SAA1E,EACKQ,IADL,CACU,KAAKC,mBADf,EAEKC,KAFL,CAEW,YAAM,CACT;AACH,OAJL;AAKH;;;wCAEmB;AAChB,WAAKT,SAAL,GAAiB,IAAjB;AACA,WAAKU,YAAL;AACH;;;2CAEsB;AACnB,WAAKV,SAAL,GAAiB,KAAjB;AACH;;;6BAEQ;AAAA,yBACgF,KAAKE,KADrF;AAAA,UACGC,mBADH,gBACGA,mBADH;AAAA,UACwBC,EADxB,gBACwBA,EADxB;AAAA,UAC4BO,UAD5B,gBAC4BA,UAD5B;AAAA,UACwCC,IADxC,gBACwCA,IADxC;AAAA,UAC8CC,UAD9C,gBAC8CA,UAD9C;AAAA,UAC0DC,QAD1D,gBAC0DA,QAD1D;AAAA,UACuEC,IADvE;;AAAA,UAEGjB,SAFH,GAEiB,KAAKkB,KAFtB,CAEGlB,SAFH;AAIL,aACI,oBAAC,YAAD;AAAc,QAAA,SAAS,EAAC;AAAxB,SAAqDiB,IAArD,GACKF,UAAU,IACP,oBAAC,MAAD;AACI,QAAA,SAAS,EAAC,gBADd;AAEI,QAAA,EAAE,EAAET,EAFR;AAGI,QAAA,IAAI,EAAEQ,IAHV;AAII,QAAA,UAAU,EAAED,UAJhB;AAKI,QAAA,kBAAkB,MALtB;AAMI,QAAA,SAAS,EAAEb;AANf,QAFR,EAWI;AAAK,QAAA,SAAS,EAAC;AAAf,SACI;AAAK,QAAA,SAAS,EAAC;AAAf,SAA4Cc,IAA5C,CADJ,EAEKE,QAAQ,IAAI;AAAK,QAAA,SAAS,EAAC;AAAf,SAAgDA,QAAhD,CAFjB,CAXJ,CADJ;AAkBH;;;;EAjE6BpB,KAAK,CAACuB,a;;AAoExC,eAAepB,mBAAf","sourcesContent":["// @flow\nimport * as React from 'react';\n\nimport Avatar from '../avatar';\nimport DatalistItem from '../datalist-item';\n\nimport './ContactDatalistItem.scss';\n\ntype Props = {\n    getContactAvatarUrl?: (contact: { id: string, [key: string]: any }) => string | Promise<?string>,\n    id?: string,\n    isExternal?: boolean,\n    name: ?string,\n    showAvatar?: boolean,\n    subtitle?: React.Node,\n};\n\ntype State = {\n    avatarUrl: ?string,\n};\n\nclass ContactDatalistItem extends React.PureComponent<Props, State> {\n    state = {\n        avatarUrl: undefined,\n    };\n\n    isMounted: boolean = false;\n\n    /**\n     * Success handler for getting avatar url\n     *\n     * @param {string} [avatarUrl] the user avatar url\n     */\n    getAvatarUrlHandler = (avatarUrl: ?string) => {\n        if (this.isMounted) {\n            this.setState({\n                avatarUrl,\n            });\n        }\n    };\n\n    /**\n     * Gets the avatar URL for the user from the getContactAvatarUrl prop\n     *\n     * @return {void}\n     */\n    getAvatarUrl() {\n        const { getContactAvatarUrl, id } = this.props;\n        Promise.resolve(getContactAvatarUrl && id ? getContactAvatarUrl({ id }) : undefined)\n            .then(this.getAvatarUrlHandler)\n            .catch(() => {\n                // noop\n            });\n    }\n\n    componentDidMount() {\n        this.isMounted = true;\n        this.getAvatarUrl();\n    }\n\n    componentWillUnmount() {\n        this.isMounted = false;\n    }\n\n    render() {\n        const { getContactAvatarUrl, id, isExternal, name, showAvatar, subtitle, ...rest } = this.props;\n        const { avatarUrl } = this.state;\n\n        return (\n            <DatalistItem className=\"contact-data-list-item\" {...rest}>\n                {showAvatar && (\n                    <Avatar\n                        className=\"contact-avatar\"\n                        id={id}\n                        name={name}\n                        isExternal={isExternal}\n                        shouldShowExternal\n                        avatarUrl={avatarUrl}\n                    />\n                )}\n                <div className=\"contact-name-container\">\n                    <div className=\"contact-text contact-name\">{name}</div>\n                    {subtitle && <div className=\"contact-text contact-sub-name\">{subtitle}</div>}\n                </div>\n            </DatalistItem>\n        );\n    }\n}\n\nexport default ContactDatalistItem;\n"],"file":"ContactDatalistItem.js"}