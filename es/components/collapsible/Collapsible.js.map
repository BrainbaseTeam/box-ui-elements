{"version":3,"sources":["../../../src/components/collapsible/Collapsible.js"],"names":["React","classNames","omit","AnimateHeight","RESIN_TAG_TARGET","IconCaretDown","PlainButton","bdlGray50","Collapsible","props","onOpen","onClose","setState","prevState","isOpen","state","animationDuration","buttonProps","children","className","isBordered","hasStickyHeader","headerActionItems","title","sectionClassName","interactionTarget","modifiedButtonProps","buttonClassName","toggleVisibility","PureComponent"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\nimport AnimateHeight from 'react-animate-height';\n\nimport { RESIN_TAG_TARGET } from '../../common/variables';\nimport IconCaretDown from '../../icons/general/IconCaretDown';\nimport PlainButton from '../plain-button';\nimport { bdlGray50 } from '../../styles/variables';\n\nimport './Collapsible.scss';\n\ntype Props = {\n    /** Duration of animation (milliseconds) */\n    animationDuration?: number,\n    /** Other props (e.g. resin target names) to be included in the button */\n    buttonProps?: Object,\n    /** Content to be displayed in the card if it's expanded */\n    children: React.Node,\n    /** CSS class for the wrapper div */\n    className?: string,\n    /** Determines look of component */\n    hasStickyHeader?: boolean,\n    /** Determines stickiness of the header */\n    headerActionItems?: React.Node,\n    /** Determines optional header action items */\n    isBordered?: boolean,\n    /** Initial state of the collapsible card */\n    isOpen: boolean,\n    /** callback called when collapsible is opened */\n    onClose?: Function,\n    /** callback called when collapsible is collapsed */\n    onOpen?: Function,\n    /** Title string or component */\n    title: string | React.Node,\n};\n\ntype State = {\n    isOpen: boolean,\n};\n\nclass Collapsible extends React.PureComponent<Props, State> {\n    static defaultProps = {\n        buttonProps: {},\n        className: '',\n        isOpen: true,\n        animationDuration: 100,\n    };\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            isOpen: props.isOpen,\n        };\n    }\n\n    toggleVisibility = () => {\n        const { onOpen, onClose } = this.props;\n        this.setState(\n            prevState => ({\n                isOpen: !prevState.isOpen,\n            }),\n            () => {\n                const { isOpen } = this.state;\n                if (isOpen && onOpen) {\n                    onOpen(this);\n                } else if (!isOpen && onClose) {\n                    onClose(this);\n                }\n            },\n        );\n    };\n\n    render() {\n        const { isOpen }: State = this.state;\n        const {\n            animationDuration,\n            buttonProps = {},\n            children,\n            className,\n            isBordered,\n            hasStickyHeader,\n            headerActionItems,\n            title,\n        }: Props = this.props;\n\n        const sectionClassName = classNames(\n            'collapsible-card',\n            {\n                'is-open': isOpen,\n            },\n            {\n                'is-bordered': isBordered,\n            },\n            className,\n        );\n        const interactionTarget = buttonProps[RESIN_TAG_TARGET];\n        const modifiedButtonProps = omit(buttonProps, [RESIN_TAG_TARGET]);\n        const buttonClassName = hasStickyHeader\n            ? 'collapsible-card-header has-sticky-header'\n            : 'collapsible-card-header';\n\n        if (interactionTarget) {\n            modifiedButtonProps[RESIN_TAG_TARGET] = `${interactionTarget}${isOpen ? 'collapse' : 'expand'}`;\n        }\n\n        return (\n            <div className={sectionClassName}>\n                <div className={buttonClassName}>\n                    <PlainButton\n                        {...modifiedButtonProps}\n                        className=\"collapsible-card-title\"\n                        onClick={this.toggleVisibility}\n                        type=\"button\"\n                    >\n                        {title}\n                        <IconCaretDown className=\"collapsible-card-header-caret\" color={bdlGray50} width={8} />\n                    </PlainButton>\n                    {isOpen && headerActionItems}\n                </div>\n                <AnimateHeight duration={animationDuration} height={isOpen ? 'auto' : 0}>\n                    <div className=\"collapsible-card-content\">{children}</div>\n                </AnimateHeight>\n            </div>\n        );\n    }\n}\n\nexport default Collapsible;\n"],"file":"Collapsible.js"}