{"version":3,"sources":["../../../../src/components/notification/stories/NotificationsWrapper.stories.js"],"names":["React","IntlProvider","State","Store","Button","PrimaryButton","Notification","NotificationsWrapper","notes","example","DATE","Date","toTimeString","componentStore","id","notifications","Map","closeNotification","get","delete","set","addNotification","duration","type","notification","state","values","undefined","title","component","parameters"],"mappings":";;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,0BAA7B;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AAEA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,OAAOC,KAAP,MAAkB,mCAAlB;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACzB,MAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,uBAAT,EAAkCC,YAAlC,EAAb;AACA,MAAMC,cAAc,GAAG,IAAIV,KAAJ,CAAU;AAC7BW,IAAAA,EAAE,EAAE,CADyB;AAE7BC,IAAAA,aAAa,EAAE,IAAIC,GAAJ;AAFc,GAAV,CAAvB;;AAKA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAH,EAAE,EAAI;AAC5B,QAAMC,aAAa,GAAGF,cAAc,CAACK,GAAf,CAAmB,eAAnB,CAAtB;AACAH,IAAAA,aAAa,CAACI,MAAd,CAAqBL,EAArB;AACAD,IAAAA,cAAc,CAACO,GAAf,CAAmB;AAAEL,MAAAA,aAAa,EAAbA;AAAF,KAAnB;AACH,GAJD;;AAMA,MAAMM,eAAe,GAAG,SAAlBA,eAAkB,CAACC,QAAD,EAAWC,IAAX,EAAoB;AACxC,QAAMT,EAAE,GAAGD,cAAc,CAACK,GAAf,CAAmB,IAAnB,CAAX;AACA,QAAMH,aAAa,GAAGF,cAAc,CAACK,GAAf,CAAmB,eAAnB,CAAtB;AACA,QAAMM,YAAY,GACd,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEV,EAAnB;AAAuB,MAAA,QAAQ,EAAEQ,QAAjC;AAA2C,MAAA,OAAO,EAAE;AAAA,eAAML,iBAAiB,CAACH,EAAD,CAAvB;AAAA,OAApD;AAAiF,MAAA,IAAI,EAAES;AAAvF,OACI,iEAAkCb,IAAlC,CADJ,EAEI,oBAAC,MAAD,eAFJ,CADJ;AAOAG,IAAAA,cAAc,CAACO,GAAf,CAAmB;AACfL,MAAAA,aAAa,EAAEA,aAAa,CAACK,GAAd,CAAkBN,EAAlB,EAAsBU,YAAtB,CADA;AAEfV,MAAAA,EAAE,EAAEA,EAAE,GAAG;AAFM,KAAnB;AAIH,GAdD;;AAgBA,SACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAED;AAAd,KACK,UAAAY,KAAK;AAAA,WACF,oBAAC,YAAD;AAAc,MAAA,MAAM,EAAC;AAArB,OACI,iCACI,oBAAC,oBAAD,2BAA2BA,KAAK,CAACV,aAAN,CAAoBW,MAApB,EAA3B,EADJ,EAEI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAML,eAAe,CAAC,OAAD,EAAU,MAAV,CAArB;AAAA;AAAjB,oCAFJ,EAGI,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAE;AAAA,eAAMA,eAAe,CAACM,SAAD,EAAY,MAAZ,CAArB;AAAA;AAAxB,yCAHJ,CADJ,CADE;AAAA,GADV,CADJ;AAeH,CA5CM;AA8CP,eAAe;AACXC,EAAAA,KAAK,EAAE,+CADI;AAEXC,EAAAA,SAAS,EAAEtB,oBAFA;AAGXuB,EAAAA,UAAU,EAAE;AACRtB,IAAAA,KAAK,EAALA;AADQ;AAHD,CAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { IntlProvider } from 'react-intl';\nimport { State, Store } from '@sambego/storybook-state';\n\nimport Button from '../../button/Button';\nimport PrimaryButton from '../../primary-button/PrimaryButton';\nimport Notification from '../Notification';\n\nimport NotificationsWrapper from '../NotificationsWrapper';\nimport notes from './NotificationsWrapper.stories.md';\n\nexport const example = () => {\n    const DATE = new Date('May 13, 2002 23:15:30').toTimeString();\n    const componentStore = new Store({\n        id: 0,\n        notifications: new Map(),\n    });\n\n    const closeNotification = id => {\n        const notifications = componentStore.get('notifications');\n        notifications.delete(id);\n        componentStore.set({ notifications });\n    };\n\n    const addNotification = (duration, type) => {\n        const id = componentStore.get('id');\n        const notifications = componentStore.get('notifications');\n        const notification = (\n            <Notification key={id} duration={duration} onClose={() => closeNotification(id)} type={type}>\n                <span>Hello world! I was made at {DATE}</span>\n                <Button>Okay</Button>\n            </Notification>\n        );\n\n        componentStore.set({\n            notifications: notifications.set(id, notification),\n            id: id + 1,\n        });\n    };\n\n    return (\n        <State store={componentStore}>\n            {state => (\n                <IntlProvider locale=\"en\">\n                    <div>\n                        <NotificationsWrapper>{[...state.notifications.values()]}</NotificationsWrapper>\n                        <Button onClick={() => addNotification('short', 'info')}>Display timed notification</Button>\n                        <PrimaryButton onClick={() => addNotification(undefined, 'warn')}>\n                            Display persistent notification\n                        </PrimaryButton>\n                    </div>\n                </IntlProvider>\n            )}\n        </State>\n    );\n};\n\nexport default {\n    title: 'Components|Notifications/NotificationsWrapper',\n    component: NotificationsWrapper,\n    parameters: {\n        notes,\n    },\n};\n"],"file":"NotificationsWrapper.stories.js"}