{"version":3,"sources":["../../../src/components/text-area/TextArea.js"],"names":["React","classNames","uniqueId","Label","Tooltip","TextArea","className","description","error","errorTooltipPosition","hideLabel","hideOptionalLabel","isRequired","isResizable","label","textareaRef","rest","hasError","classes","errorMessageID","useRef","current","descriptionID","ariaAttrs","undefined","resize","displayName"],"mappings":";;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAGA,OAAO,iBAAP;;AAqBA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAYJ;AAAA,4BAXTC,SAWS;AAAA,MAXTA,SAWS,+BAXG,EAWH;AAAA,MAVTC,WAUS,QAVTA,WAUS;AAAA,MATTC,KASS,QATTA,KASS;AAAA,MARTC,oBAQS,QARTA,oBAQS;AAAA,MAPTC,SAOS,QAPTA,SAOS;AAAA,MANTC,iBAMS,QANTA,iBAMS;AAAA,MALTC,UAKS,QALTA,UAKS;AAAA,MAJTC,WAIS,QAJTA,WAIS;AAAA,MAHTC,KAGS,QAHTA,KAGS;AAAA,MAFTC,WAES,QAFTA,WAES;AAAA,MADNC,IACM;;AACT,MAAMC,QAAQ,GAAG,CAAC,CAACT,KAAnB;AACA,MAAMU,OAAO,GAAGjB,UAAU,CAACK,SAAD,EAAY,qBAAZ,EAAmC;AACzD,kBAAcW;AAD2C,GAAnC,CAA1B;AAIA,MAAME,cAAc,GAAGnB,KAAK,CAACoB,MAAN,CAAalB,QAAQ,CAAC,cAAD,CAArB,EAAuCmB,OAA9D;AACA,MAAMC,aAAa,GAAGtB,KAAK,CAACoB,MAAN,CAAalB,QAAQ,CAAC,aAAD,CAArB,EAAsCmB,OAA5D;AAEA,MAAME,SAAS,GAAG;AACd,oBAAgBN,QADF;AAEd,qBAAiBL,UAFH;AAGd,yBAAqBO,cAHP;AAId,wBAAoBZ,WAAW,GAAGe,aAAH,GAAmBE;AAJpC,GAAlB;AAOA,SACI;AAAK,IAAA,SAAS,EAAEN;AAAhB,KACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAER,SAAlB;AAA6B,IAAA,gBAAgB,EAAE,CAACC,iBAAD,IAAsB,CAACC,UAAtE;AAAkF,IAAA,IAAI,EAAEE;AAAxF,KACK,CAAC,CAACP,WAAF,IACG;AAAK,IAAA,EAAE,EAAEe,aAAT;AAAwB,IAAA,SAAS,EAAC;AAAlC,KACKf,WADL,CAFR,EAMI,oBAAC,OAAD;AACI,IAAA,OAAO,EAAEU,QADb;AAEI,IAAA,QAAQ,EAAER,oBAAoB,IAAI,aAFtC;AAGI,IAAA,IAAI,EAAED,KAAK,IAAI,EAHnB;AAII,IAAA,KAAK,EAAC;AAJV,KAMI;AACI,IAAA,GAAG,EAAEO,WADT;AAEI,IAAA,QAAQ,EAAEH,UAFd;AAGI,IAAA,KAAK,EAAE;AAAEa,MAAAA,MAAM,EAAEZ,WAAW,GAAG,EAAH,GAAQ;AAA7B;AAHX,KAIQU,SAJR,EAKQP,IALR,EANJ,CANJ,EAoBI;AAAM,IAAA,EAAE,EAAEG,cAAV;AAA0B,IAAA,SAAS,EAAC,sBAApC;AAA2D,IAAA,IAAI,EAAC;AAAhE,KACKX,KADL,CApBJ,CADJ,CADJ;AA4BH,CAxDD;;AA0DAH,QAAQ,CAACqB,WAAT,GAAuB,UAAvB;AAGA,eAAerB,QAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport uniqueId from 'lodash/uniqueId';\n\nimport Label from '../label';\nimport Tooltip from '../tooltip';\nimport type { Position } from '../tooltip';\n\nimport './TextArea.scss';\n\ntype Props = {\n    className?: string,\n    description?: React.Node,\n    error?: React.Node,\n    /** Renders error tooltip at the specified position (positions are those from Tooltip) */\n    errorTooltipPosition?: Position,\n    /** Hides the label */\n    hideLabel?: boolean,\n    /** Hides (optional) text from the label */\n    hideOptionalLabel?: boolean,\n    /** Makes the text area value required */\n    isRequired?: boolean,\n    /** Is text area resizable */\n    isResizable?: boolean,\n    /** Label displayed for the text area */\n    label: React.Node,\n    textareaRef?: Function, // @TODO: eventually rename to innerRef for consistancy across all form elements\n};\n\nconst TextArea = ({\n    className = '',\n    description,\n    error,\n    errorTooltipPosition,\n    hideLabel,\n    hideOptionalLabel,\n    isRequired,\n    isResizable,\n    label,\n    textareaRef,\n    ...rest\n}: Props) => {\n    const hasError = !!error;\n    const classes = classNames(className, 'text-area-container', {\n        'show-error': hasError,\n    });\n\n    const errorMessageID = React.useRef(uniqueId('errorMessage')).current;\n    const descriptionID = React.useRef(uniqueId('description')).current;\n\n    const ariaAttrs = {\n        'aria-invalid': hasError,\n        'aria-required': isRequired,\n        'aria-errormessage': errorMessageID,\n        'aria-describedby': description ? descriptionID : undefined,\n    };\n\n    return (\n        <div className={classes}>\n            <Label hideLabel={hideLabel} showOptionalText={!hideOptionalLabel && !isRequired} text={label}>\n                {!!description && (\n                    <div id={descriptionID} className=\"text-area-description\">\n                        {description}\n                    </div>\n                )}\n                <Tooltip\n                    isShown={hasError}\n                    position={errorTooltipPosition || 'bottom-left'}\n                    text={error || ''}\n                    theme=\"error\"\n                >\n                    <textarea\n                        ref={textareaRef}\n                        required={isRequired}\n                        style={{ resize: isResizable ? '' : 'none' }}\n                        {...ariaAttrs}\n                        {...rest}\n                    />\n                </Tooltip>\n                <span id={errorMessageID} className=\"accessibility-hidden\" role=\"alert\">\n                    {error}\n                </span>\n            </Label>\n        </div>\n    );\n};\n\nTextArea.displayName = 'TextArea';\n\nexport type TextAreaProps = Props;\nexport default TextArea;\n"],"file":"TextArea.js"}