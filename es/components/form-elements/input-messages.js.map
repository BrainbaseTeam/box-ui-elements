{"version":3,"sources":["../../../src/components/form-elements/input-messages.js"],"names":["React","FormattedMessage","commonMessages","badInput","code","message","invalidInputError","patternMismatch","tooShort","minLength","minLengthError","min","tooLong","maxLength","maxLengthError","max","typeMismatchEmail","invalidEmailError","typeMismatchUrl","invalidURLError","valueMissing","requiredFieldError"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,OAAOC,cAAP,MAA2B,uBAA3B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAO;AACpBC,IAAAA,IAAI,EAAE,UADc;AAEpBC,IAAAA,OAAO,EAAE,oBAAC,gBAAD,EAAsBH,cAAc,CAACI,iBAArC;AAFW,GAAP;AAAA,CAAjB;;AAKA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAO;AAC3BH,IAAAA,IAAI,EAAE,iBADqB;AAE3BC,IAAAA,OAAO,EAAE,oBAAC,gBAAD,EAAsBH,cAAc,CAACI,iBAArC;AAFkB,GAAP;AAAA,CAAxB;;AAKA,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACC,SAAD;AAAA,SAAwB;AACrCL,IAAAA,IAAI,EAAE,UAD+B;AAErCC,IAAAA,OAAO,EAAE,oBAAC,gBAAD,eAAsBH,cAAc,CAACQ,cAArC;AAAqD,MAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAEF;AAAP;AAA7D;AAF4B,GAAxB;AAAA,CAAjB;;AAKA,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAACC,SAAD;AAAA,SAAwB;AACpCT,IAAAA,IAAI,EAAE,SAD8B;AAEpCC,IAAAA,OAAO,EAAE,oBAAC,gBAAD,eAAsBH,cAAc,CAACY,cAArC;AAAqD,MAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAEF;AAAP;AAA7D;AAF2B,GAAxB;AAAA,CAAhB;;AAKA,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,SAAO;AAC7BZ,IAAAA,IAAI,EAAE,cADuB;AAE7BC,IAAAA,OAAO,EAAE,oBAAC,gBAAD,EAAsBH,cAAc,CAACe,iBAArC;AAFoB,GAAP;AAAA,CAA1B;;AAKA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAO;AAC3Bd,IAAAA,IAAI,EAAE,cADqB;AAE3BC,IAAAA,OAAO,EAAE,oBAAC,gBAAD,EAAsBH,cAAc,CAACiB,eAArC;AAFkB,GAAP;AAAA,CAAxB;;AAKA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAO;AACxBhB,IAAAA,IAAI,EAAE,cADkB;AAExBC,IAAAA,OAAO,EAAE,oBAAC,gBAAD,EAAsBH,cAAc,CAACmB,kBAArC;AAFe,GAAP;AAAA,CAArB;;AAKA,SAASlB,QAAT,EAAmBI,eAAnB,EAAoCC,QAApC,EAA8CI,OAA9C,EAAuDI,iBAAvD,EAA0EE,eAA1E,EAA2FE,YAA3F","sourcesContent":["// @flow\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport commonMessages from '../../common/messages';\n\nconst badInput = () => ({\n    code: 'badInput',\n    message: <FormattedMessage {...commonMessages.invalidInputError} />,\n});\n\nconst patternMismatch = () => ({\n    code: 'patternMismatch',\n    message: <FormattedMessage {...commonMessages.invalidInputError} />,\n});\n\nconst tooShort = (minLength: number) => ({\n    code: 'tooShort',\n    message: <FormattedMessage {...commonMessages.minLengthError} values={{ min: minLength }} />,\n});\n\nconst tooLong = (maxLength: number) => ({\n    code: 'tooLong',\n    message: <FormattedMessage {...commonMessages.maxLengthError} values={{ max: maxLength }} />,\n});\n\nconst typeMismatchEmail = () => ({\n    code: 'typeMismatch',\n    message: <FormattedMessage {...commonMessages.invalidEmailError} />,\n});\n\nconst typeMismatchUrl = () => ({\n    code: 'typeMismatch',\n    message: <FormattedMessage {...commonMessages.invalidURLError} />,\n});\n\nconst valueMissing = () => ({\n    code: 'valueMissing',\n    message: <FormattedMessage {...commonMessages.requiredFieldError} />,\n});\n\nexport { badInput, patternMismatch, tooShort, tooLong, typeMismatchEmail, typeMismatchUrl, valueMissing };\n"],"file":"input-messages.js"}