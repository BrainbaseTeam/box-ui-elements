{"version":3,"sources":["../../../../src/components/form-elements/formik/Formik.stories.js"],"names":["React","Field","Form","Formik","boolean","TextInput","TextArea","Toggle","Checkbox","SelectField","PillSelectorDropdownField","DatalistItem","RadioButton","RadioButtonField","RadioGroup","notes","basic","pillSelectorValidator","option","value","includes","checkbox","pillselector","radiogroup","textarea","textinput","toggle","values","errors","Array","isArray","every","pill","props","display","displayText","options","map","color","background","fontSize","padding","float","JSON","stringify","title","parameters"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { Field, Form, Formik } from 'formik';\nimport { boolean } from '@storybook/addon-knobs';\n\nimport TextInput from '../../text-input/TextInput';\nimport TextArea from '../../text-area/TextAreaField';\nimport Toggle from '../../toggle/ToggleField';\nimport Checkbox from '../../checkbox/CheckboxField';\nimport SelectField from '../../select-field/SelectField';\nimport PillSelectorDropdownField from '../../pill-selector-dropdown/PillSelectorDropdownField';\nimport DatalistItem from '../../datalist-item/DatalistItem';\n\nimport { RadioButton, RadioButtonField, RadioGroup } from '../../radio';\n\nimport notes from './Formik.stories.md';\n\nexport const basic = () => {\n    const pillSelectorValidator = option => {\n        const value = typeof option === 'string' ? option : option.value;\n        return ['red', 'green', 'blue', 'yellow', 'white', 'black'].includes(value);\n    };\n\n    return (\n        <Formik\n            initialValues={{\n                checkbox: true,\n                pillselector: [],\n                radiogroup: 'red',\n                textarea: 'textarea',\n                textinput: 'textinput',\n                toggle: true,\n            }}\n            onSubmit={() => null}\n            validate={values => {\n                const errors = {};\n                const { textinput, textarea, pillselector } = values;\n\n                if (!textinput) {\n                    errors.textinput = 'Required';\n                }\n\n                if (!textarea) {\n                    errors.textarea = 'Required';\n                }\n\n                if (Array.isArray(pillselector) && !pillselector.every(pill => pillSelectorValidator(pill))) {\n                    errors.pillselector = 'Bad colors';\n                }\n\n                return errors;\n            }}\n        >\n            {props => (\n                <>\n                    <Form\n                        style={{\n                            display: 'inline-block',\n                        }}\n                    >\n                        <Field name=\"checkbox\" label=\"Checkbox Field\" component={Checkbox} />\n                        <Field name=\"toggle\" label=\"Toggle Field\" component={Toggle} />\n                        <Field\n                            isRequired={boolean('isRequired', true)}\n                            label=\"Text Input Field\"\n                            name=\"textinput\"\n                            type=\"text\"\n                            placeholder=\"Text Input Field\"\n                            component={TextInput}\n                        />\n                        <Field\n                            isRequired={boolean('isRequired', true)}\n                            label=\"Text Area Field\"\n                            name=\"textarea\"\n                            placeholder=\"Text Area Field\"\n                            component={TextArea}\n                        />\n                        <b>Non-RadioGroup RadioButtons sharing the same name</b>\n                        <br />\n                        <br />\n                        <Field\n                            isSelected={false}\n                            label=\"Radio Button Field 1\"\n                            name=\"radiobutton\"\n                            component={RadioButtonField}\n                            value=\"radio1\"\n                        />\n                        <Field\n                            isSelected={false}\n                            label=\"Radio Button Field 2\"\n                            name=\"radiobutton\"\n                            component={RadioButtonField}\n                            value=\"radio2\"\n                        />\n                        <br />\n                        <Field\n                            label=\"Single Select Field\"\n                            name=\"singleselect\"\n                            placeholder=\"Single Select Field\"\n                            options={[\n                                { displayText: 'Red', value: 'red' },\n                                { displayText: 'Green', value: 'green' },\n                                { displayText: 'Blue', value: 'blue' },\n                            ]}\n                            component={SelectField}\n                        />\n                        <br />\n                        <br />\n                        <Field\n                            label=\"Multi Select Field\"\n                            name=\"multiselect\"\n                            placeholder=\"Multi Select Field\"\n                            multiple\n                            options={[\n                                { displayText: 'Red', value: 'red' },\n                                { displayText: 'Green', value: 'green' },\n                                { displayText: 'Blue', value: 'blue' },\n                            ]}\n                            component={SelectField}\n                        />\n                        <br />\n                        <br />\n                        <b>RadioGroup-ed RadioButtons</b>\n                        <br />\n                        <br />\n                        <Field name=\"radiogroup\" component={RadioGroup}>\n                            <RadioButton label=\"Red\" value=\"red\" description=\"Red color\" />\n                            <RadioButton label=\"Blue\" value=\"blue\" description=\"Blue color\" />\n                        </Field>\n                        <br />\n                        <br />\n                        <Field\n                            label=\"Pill Selector Field\"\n                            name=\"pillselector\"\n                            placeholder=\"Colors\"\n                            component={PillSelectorDropdownField}\n                            validator={pillSelectorValidator}\n                        />\n                        <br />\n                        <br />\n                        <Field\n                            label=\"Pill Selector Field With Dropdown\"\n                            name=\"pillselectordropdown\"\n                            placeholder=\"Colors\"\n                            options={[\n                                { displayText: 'Red', value: 'red' },\n                                { displayText: 'Green', value: 'green' },\n                                { displayText: 'Blue', value: 'blue' },\n                            ]}\n                            component={PillSelectorDropdownField}\n                            validator={pillSelectorValidator}\n                            dropdownRenderer={options =>\n                                options.map(option => (\n                                    <DatalistItem key={option.value} style={{ color: option.value }}>\n                                        {option.displayText}\n                                    </DatalistItem>\n                                ))\n                            }\n                        />\n                    </Form>\n                    <pre\n                        style={{\n                            color: '#fff',\n                            background: '#0061D5',\n                            fontSize: '14px',\n                            padding: '.5rem',\n                            float: 'right',\n                            display: 'inline-block',\n                        }}\n                    >\n                        <strong>Formik State</strong> = {JSON.stringify(props, null, 2)}\n                    </pre>\n                </>\n            )}\n        </Formik>\n    );\n};\n\nexport default {\n    title: 'Components|Formik Elements',\n    parameters: {\n        notes,\n    },\n};\n"],"file":"Formik.stories.js"}