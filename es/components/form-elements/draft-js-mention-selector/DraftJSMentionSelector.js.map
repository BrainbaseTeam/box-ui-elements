{"version":3,"sources":["../../../../src/components/form-elements/draft-js-mention-selector/DraftJSMentionSelector.js"],"names":["React","CompositeDecorator","EditorState","noop","DraftJSMentionSelectorCore","DraftMentionItem","FormInput","messages","mentionStrategy","contentBlock","callback","contentState","findEntityRanges","character","entityKey","getEntity","ret","getType","DraftJSMentionSelector","props","event","validateOnBlur","containerEl","relatedTarget","Node","contains","checkValidity","onFocus","nextEditorState","internalEditorState","state","onChange","setState","isTouched","error","getErrorFromValidityState","handleValidityStateUpdateHandler","mentionDecorator","strategy","component","contacts","editorState","createEmpty","prevProps","prevState","prevInternalEditorState","prevEditorStateFromProps","prevEditorState","currentEditorState","newState","getDerivedStateFromEditorState","checkValidityIfAllowed","previousEditorState","isPreviousEditorStateEmpty","isEditorStateEmpty","isCurrentEditorStateEmpty","isNewEditorState","isEditorStateDirty","text","getCurrentContent","getPlainText","trim","lastChangeType","getLastChangeType","length","externalEditorState","isRequired","maxLength","minLength","valueMissing","tooShort","tooLong","className","contactsLoaded","hideLabel","isDisabled","label","description","mentionTriggers","name","onMention","placeholder","selectorRow","startMentionMessage","onReturn","handleBlur","handleChange","handleFocus","nextProps","Component"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { CompositeDecorator, EditorState } from 'draft-js';\nimport noop from 'lodash/noop';\n\nimport DraftJSMentionSelectorCore from './DraftJSMentionSelectorCore';\nimport DraftMentionItem from './DraftMentionItem';\nimport FormInput from '../form/FormInput';\nimport * as messages from '../input-messages';\nimport type { SelectorItems } from '../../../common/types/core';\n\n/**\n * Scans a Draft ContentBlock for entity ranges, so they can be annotated\n * @see docs at {@link https://draftjs.org/docs/advanced-topics-decorators.html#compositedecorator}\n * @param {ContentBlock} contentBlock\n * @param {function} callback\n * @param {ContentState} contentState\n */\nconst mentionStrategy = (contentBlock, callback, contentState) => {\n    contentBlock.findEntityRanges(character => {\n        const entityKey = character.getEntity();\n\n        const ret = entityKey !== null && contentState.getEntity(entityKey).getType() === 'MENTION';\n        return ret;\n    }, callback);\n};\n\ntype Props = {\n    className?: string,\n    contacts: SelectorItems<>,\n    contactsLoaded?: boolean,\n    description?: React.Node,\n    editorState?: EditorState,\n    hideLabel?: boolean,\n    isDisabled?: boolean,\n    isRequired?: boolean,\n    label: React.Node,\n    maxLength?: number,\n    mentionTriggers?: Array<string>,\n    minLength?: number,\n    name: string,\n    onChange: Function,\n    onFocus?: Function,\n    onMention?: Function,\n    onReturn?: Function,\n    placeholder?: string,\n    selectorRow?: React.Element<any>,\n    startMentionMessage?: React.Node,\n    validateOnBlur?: boolean,\n};\n\ntype State = {\n    contacts: SelectorItems<>,\n    error: ?Object,\n    internalEditorState: ?EditorState,\n    isTouched: boolean,\n};\n\nclass DraftJSMentionSelector extends React.Component<Props, State> {\n    static defaultProps = {\n        isRequired: false,\n        onChange: noop,\n        validateOnBlur: true,\n    };\n\n    constructor(props: Props) {\n        super(props);\n\n        const mentionDecorator = new CompositeDecorator([\n            {\n                strategy: mentionStrategy,\n                component: DraftMentionItem,\n            },\n        ]);\n\n        // @NOTE (smotraghi 2017-05-30):\n        // This component might be either own its EditorState (in which case it lives in `this.state.internalEditorState`)\n        // or be a controlled component whose EditorState is passed in via the `editorState` prop.\n        // If `props.editorState` is set, `internalEditorState` is `null`,\n        // otherwise we initialize it here\n        this.state = {\n            contacts: [],\n            isTouched: false,\n            internalEditorState: props.editorState ? null : EditorState.createEmpty(mentionDecorator),\n            error: null,\n        };\n    }\n\n    static getDerivedStateFromProps(nextProps: Props) {\n        const { contacts } = nextProps;\n        return contacts ? { contacts } : null;\n    }\n\n    componentDidUpdate(prevProps: Props, prevState: State) {\n        const { internalEditorState: prevInternalEditorState } = prevState;\n        const { internalEditorState } = this.state;\n\n        const { editorState: prevEditorStateFromProps } = prevProps;\n        const { editorState } = this.props;\n\n        // Determine whether we're working with the internal editor state or\n        // external editor state passed in from props\n        const prevEditorState = prevInternalEditorState || prevEditorStateFromProps;\n        const currentEditorState = internalEditorState || editorState;\n\n        // Only handle isTouched state transitions and check validity if the\n        // editorState references are different. This is to avoid getting stuck\n        // in an infinite loop of checking validity because checkValidity always\n        // calls setState({ error })\n        if (prevEditorState && currentEditorState && prevEditorState !== currentEditorState) {\n            const newState = this.getDerivedStateFromEditorState(currentEditorState, prevEditorState);\n            if (newState) {\n                this.setState(newState, this.checkValidityIfAllowed);\n            } else {\n                this.checkValidityIfAllowed();\n            }\n        }\n    }\n\n    getDerivedStateFromEditorState(currentEditorState: EditorState, previousEditorState: EditorState) {\n        const isPreviousEditorStateEmpty = this.isEditorStateEmpty(previousEditorState);\n        const isCurrentEditorStateEmpty = this.isEditorStateEmpty(currentEditorState);\n        const isNewEditorState = isCurrentEditorStateEmpty && !isPreviousEditorStateEmpty;\n        const isEditorStateDirty = isPreviousEditorStateEmpty && !isCurrentEditorStateEmpty;\n\n        let newState = null;\n        // Detect case where controlled EditorState is created anew and empty.\n        // If next editorState is empty and the current editorState is not empty\n        // that means it is a new empty state and this component should not be marked dirty\n        if (isNewEditorState) {\n            newState = { isTouched: false, error: null };\n        } else if (isEditorStateDirty) {\n            // Detect case where controlled EditorState has been made dirty\n            // If the current editorState is empty and the next editorState is not\n            // empty then this is the first interaction so mark this component dirty\n            newState = { isTouched: true };\n        }\n\n        return newState;\n    }\n\n    checkValidityIfAllowed() {\n        const { validateOnBlur }: Props = this.props;\n\n        if (!validateOnBlur) {\n            this.checkValidity();\n        }\n    }\n\n    isEditorStateEmpty(editorState: EditorState): boolean {\n        const text = editorState\n            .getCurrentContent()\n            .getPlainText()\n            .trim();\n        const lastChangeType = editorState.getLastChangeType();\n\n        return text.length === 0 && lastChangeType === null;\n    }\n\n    /**\n     * @returns {string}\n     */\n    getErrorFromValidityState() {\n        const { editorState: externalEditorState, isRequired, maxLength, minLength } = this.props;\n        const { internalEditorState } = this.state;\n\n        // manually check for content length if isRequired is true\n        const editorState: EditorState = internalEditorState || externalEditorState;\n        const { length } = editorState\n            .getCurrentContent()\n            .getPlainText()\n            .trim();\n\n        if (isRequired && !length) {\n            return messages.valueMissing();\n        }\n\n        if (typeof minLength !== 'undefined' && length < minLength) {\n            return messages.tooShort(minLength);\n        }\n\n        if (typeof maxLength !== 'undefined' && length > maxLength) {\n            return messages.tooLong(maxLength);\n        }\n\n        return null;\n    }\n\n    containerEl: ?HTMLDivElement;\n\n    /**\n     * Event handler called on blur. Triggers validation\n     * @param {SyntheticFocusEvent} event The event object\n     * @returns {void}\n     */\n    handleBlur = (event: SyntheticFocusEvent<>) => {\n        if (\n            this.props.validateOnBlur &&\n            this.containerEl &&\n            event.relatedTarget instanceof Node &&\n            !this.containerEl.contains(event.relatedTarget)\n        ) {\n            this.checkValidity();\n        }\n    };\n\n    handleFocus = (event: SyntheticEvent<>) => {\n        const { onFocus } = this.props;\n\n        if (onFocus) {\n            onFocus(event);\n        }\n    };\n\n    /**\n     * Updates editorState, rechecks validity\n     * @param {EditorState} nextEditorState The new editor state to set in the state\n     * @returns {void}\n     */\n    handleChange = (nextEditorState: EditorState) => {\n        const { internalEditorState }: State = this.state;\n        const { onChange }: Props = this.props;\n\n        onChange(nextEditorState);\n\n        if (internalEditorState) {\n            this.setState({ internalEditorState: nextEditorState });\n        }\n    };\n\n    handleValidityStateUpdateHandler = () => {\n        const { isTouched } = this.state;\n\n        if (!isTouched) {\n            return;\n        }\n\n        const error = this.getErrorFromValidityState();\n\n        this.setState({ error });\n    };\n\n    checkValidity = () => {\n        this.handleValidityStateUpdateHandler();\n    };\n\n    render() {\n        const {\n            className = '',\n            contactsLoaded,\n            editorState: externalEditorState,\n            hideLabel,\n            isDisabled,\n            isRequired,\n            label,\n            description,\n            mentionTriggers,\n            name,\n            onMention,\n            placeholder,\n            selectorRow,\n            startMentionMessage,\n            onReturn,\n        } = this.props;\n        const { contacts, internalEditorState, error } = this.state;\n        const { handleBlur, handleChange, handleFocus } = this;\n        const editorState: EditorState = internalEditorState || externalEditorState;\n\n        return (\n            <div\n                ref={containerEl => {\n                    this.containerEl = containerEl;\n                }}\n                className={className}\n            >\n                <FormInput name={name} onValidityStateUpdate={this.handleValidityStateUpdateHandler}>\n                    <DraftJSMentionSelectorCore\n                        contacts={contacts}\n                        contactsLoaded={contactsLoaded}\n                        editorState={editorState}\n                        error={error}\n                        hideLabel={hideLabel}\n                        isDisabled={isDisabled}\n                        isRequired={isRequired}\n                        label={label}\n                        description={description}\n                        mentionTriggers={mentionTriggers}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        onFocus={handleFocus}\n                        onMention={onMention}\n                        onReturn={onReturn}\n                        placeholder={placeholder}\n                        selectorRow={selectorRow}\n                        startMentionMessage={startMentionMessage}\n                    />\n                </FormInput>\n            </div>\n        );\n    }\n}\n\nexport default DraftJSMentionSelector;\n"],"file":"DraftJSMentionSelector.js"}