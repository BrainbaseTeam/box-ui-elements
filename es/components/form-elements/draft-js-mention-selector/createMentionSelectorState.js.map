{"version":3,"sources":["../../../../src/components/form-elements/draft-js-mention-selector/createMentionSelectorState.js"],"names":["ContentState","EditorState","Modifier","SelectionState","DraftMentionDecorator","getMentionFromText","text","mentionRegex","matchArray","exec","fullMatch","triggerSymbol","id","name","start","index","end","length","data","content","createMentionSelectorState","message","contentState","createFromText","contentBlock","getFirstBlock","getText","mention","getBlockAfter","getKey","createEntity","mentionEntityKey","getLastCreatedEntityKey","mentionRange","createEmpty","merge","anchorOffset","focusOffset","replaceText","getBlockForKey","createWithContent"],"mappings":";;;;;;;;AACA,SAASA,YAAT,EAAuBC,WAAvB,EAAoCC,QAApC,EAA8CC,cAA9C,QAAoE,UAApE;AACA,OAAOC,qBAAP,MAAkC,yBAAlC,C,CAEA;;AACA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD,EAAkB;AACzC;AACA,MAAMC,YAAY,GAAG,+BAArB;AACA,MAAMC,UAAU,GAAGD,YAAY,CAACE,IAAb,CAAkBH,IAAlB,CAAnB;;AACA,MAAI,CAACE,UAAL,EAAiB;AACb,WAAO,IAAP;AACH;;AANwC,mCAOIA,UAPJ;AAAA,MAOlCE,SAPkC;AAAA,MAOvBC,aAPuB;AAAA,MAORC,EAPQ;AAAA,MAOJC,IAPI;;AAQzC,MAAMC,KAAK,GAAGN,UAAU,CAACO,KAAzB;AACA,MAAMC,GAAG,GAAGF,KAAK,GAAGJ,SAAS,CAACO,MAA9B;AACA,MAAMC,IAAI,GAAG;AAAEN,IAAAA,EAAE,EAAFA,EAAF;AAAMC,IAAAA,IAAI,EAAJA,IAAN;AAAYM,IAAAA,OAAO,YAAKR,aAAL,SAAqBE,IAArB;AAAnB,GAAb;AACA,SAAO;AAAEC,IAAAA,KAAK,EAALA,KAAF;AAASE,IAAAA,GAAG,EAAHA,GAAT;AAAcE,IAAAA,IAAI,EAAJA;AAAd,GAAP;AACH,CAZD,C,CAcA;;;AACA,IAAME,0BAA0B,GAAG,SAA7BA,0BAA6B,GAA0B;AAAA,MAAzBC,OAAyB,uEAAP,EAAO;AACzD,MAAIC,YAAY,GAAGtB,YAAY,CAACuB,cAAb,CAA4BF,OAA5B,CAAnB;AACA,MAAIG,YAAY,GAAGF,YAAY,CAACG,aAAb,EAAnB;;AAEA,SAAOD,YAAY,IAAI,IAAvB,EAA6B;AACzB,QAAMlB,IAAI,GAAGkB,YAAY,CAACE,OAAb,EAAb;AACA,QAAMC,OAAO,GAAGrB,IAAI,GAAGD,kBAAkB,CAACC,IAAD,CAArB,GAA8B,IAAlD;;AACA,QAAIqB,OAAO,IAAI,IAAf,EAAqB;AACjBH,MAAAA,YAAY,GAAGF,YAAY,CAACM,aAAb,CAA2BJ,YAAY,CAACK,MAAb,EAA3B,CAAf;AACH,KAFD,MAEO;AAAA,UACKX,IADL,GAC0BS,OAD1B,CACKT,IADL;AAAA,UACWJ,KADX,GAC0Ba,OAD1B,CACWb,KADX;AAAA,UACkBE,GADlB,GAC0BW,OAD1B,CACkBX,GADlB;AAEHM,MAAAA,YAAY,CAACQ,YAAb,CAA0B,SAA1B,EAAqC,WAArC,EAAkDZ,IAAlD;AACA,UAAMa,gBAAgB,GAAGT,YAAY,CAACU,uBAAb,EAAzB;AACA,UAAMC,YAAY,GAAG9B,cAAc,CAAC+B,WAAf,CAA2BV,YAAY,CAACK,MAAb,EAA3B,EAAkDM,KAAlD,CAAwD;AACzEC,QAAAA,YAAY,EAAEtB,KAD2D;AAEzEuB,QAAAA,WAAW,EAAErB;AAF4D,OAAxD,CAArB;AAIAM,MAAAA,YAAY,GAAGpB,QAAQ,CAACoC,WAAT,CAAqBhB,YAArB,EAAmCW,YAAnC,EAAiDf,IAAI,CAACC,OAAtD,EAA+D,IAA/D,EAAqEY,gBAArE,CAAf;AACAP,MAAAA,YAAY,GAAGF,YAAY,CAACiB,cAAb,CAA4Bf,YAAY,CAACK,MAAb,EAA5B,CAAf;AACH;AACJ;;AACD,SAAO5B,WAAW,CAACuC,iBAAZ,CAA8BlB,YAA9B,EAA4ClB,qBAA5C,CAAP;AACH,CAtBD;;AAwBA,eAAegB,0BAAf","sourcesContent":["// @flow\nimport { ContentState, EditorState, Modifier, SelectionState } from 'draft-js';\nimport DraftMentionDecorator from './DraftMentionDecorator';\n\n// returns data for first mention in a string\nconst getMentionFromText = (text: string) => {\n    // RegEx.exec() is stateful, so we create a new regex instance each time\n    const mentionRegex = /([@＠﹫])\\[([0-9]+):([^\\]]+)]/gi;\n    const matchArray = mentionRegex.exec(text);\n    if (!matchArray) {\n        return null;\n    }\n    const [fullMatch, triggerSymbol, id, name] = matchArray;\n    const start = matchArray.index;\n    const end = start + fullMatch.length;\n    const data = { id, name, content: `${triggerSymbol}${name}` };\n    return { start, end, data };\n};\n\n// creates draftjs state with mentions parsed into entities\nconst createMentionSelectorState = (message: string = '') => {\n    let contentState = ContentState.createFromText(message);\n    let contentBlock = contentState.getFirstBlock();\n\n    while (contentBlock != null) {\n        const text = contentBlock.getText();\n        const mention = text ? getMentionFromText(text) : null;\n        if (mention == null) {\n            contentBlock = contentState.getBlockAfter(contentBlock.getKey());\n        } else {\n            const { data, start, end } = mention;\n            contentState.createEntity('MENTION', 'IMMUTABLE', data);\n            const mentionEntityKey = contentState.getLastCreatedEntityKey();\n            const mentionRange = SelectionState.createEmpty(contentBlock.getKey()).merge({\n                anchorOffset: start,\n                focusOffset: end,\n            });\n            contentState = Modifier.replaceText(contentState, mentionRange, data.content, null, mentionEntityKey);\n            contentBlock = contentState.getBlockForKey(contentBlock.getKey());\n        }\n    }\n    return EditorState.createWithContent(contentState, DraftMentionDecorator);\n};\n\nexport default createMentionSelectorState;\n"],"file":"createMentionSelectorState.js"}