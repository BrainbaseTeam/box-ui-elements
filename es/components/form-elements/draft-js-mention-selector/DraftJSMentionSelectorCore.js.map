{"version":3,"sources":["../../../../src/components/form-elements/draft-js-mention-selector/DraftJSMentionSelectorCore.js"],"names":["React","FormattedMessage","classNames","EditorState","DatalistItem","DraftJSEditor","SelectorDropdown","addMention","defaultMentionTriggers","getActiveMentionForEditorState","messages","DefaultSelectorRow","item","rest","name","email","DefaultStartMentionMessage","startMention","MentionStartState","message","DraftJSMentionSelector","props","onMention","activeMention","state","mentionString","index","contacts","setState","isFocused","handleMention","event","onBlur","onFocus","nextEditorState","onChange","length","mentionTriggers","reduce","prev","current","mentionPattern","RegExp","prevProps","prevContacts","currentContacts","editorState","mention","editorStateWithLink","handleChange","className","contactsLoaded","error","hideLabel","isDisabled","isRequired","label","description","onReturn","placeholder","selectorRow","startMentionMessage","classes","showMentionStartState","usersFoundMessage","shouldDisplayMentionLookup","usersFound","values","usersCount","noUsersFound","handleContactSelected","handleBlur","handleFocus","map","contact","cloneElement","key","id","Component"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport { EditorState } from 'draft-js';\n\nimport DatalistItem from '../../datalist-item';\nimport DraftJSEditor from '../../draft-js-editor';\nimport SelectorDropdown from '../../selector-dropdown';\nimport { addMention, defaultMentionTriggers, getActiveMentionForEditorState } from './utils';\n\nimport messages from './messages';\n\nimport type { SelectorItems } from '../../../common/types/core';\nimport type { Mention } from './utils';\n\nimport './MentionSelector.scss';\n\ntype DefaultSelectorRowProps = {\n    item?: {\n        email?: string,\n        name?: string,\n    },\n};\n\nconst DefaultSelectorRow = ({ item = {}, ...rest }: DefaultSelectorRowProps) => (\n    <DatalistItem {...rest}>\n        {item.name} <span className=\"dropdown-secondary-text\">{item.email}</span>\n    </DatalistItem>\n);\n\nconst DefaultStartMentionMessage = () => <FormattedMessage {...messages.startMention} />;\n\ntype MentionStartStateProps = {\n    message?: React.Node,\n};\n\nconst MentionStartState = ({ message }: MentionStartStateProps) => (\n    <div role=\"alert\" className=\"mention-start-state\">\n        {message}\n    </div>\n);\n\ntype Props = {\n    className?: string,\n    contacts: SelectorItems<>,\n    contactsLoaded?: boolean,\n    description?: React.Node,\n    editorState: EditorState,\n    error?: ?Object,\n    hideLabel?: boolean,\n    isDisabled?: boolean,\n    isRequired?: boolean,\n    label: React.Node,\n    mentionTriggers: Array<string>,\n    onBlur?: Function,\n    onChange?: Function,\n    onFocus?: Function,\n    onMention?: Function,\n    onReturn?: Function,\n    placeholder?: string,\n    selectorRow: React.Element<any>,\n    startMentionMessage?: React.Node,\n};\n\ntype State = {\n    activeMention: Mention | null,\n    isFocused: boolean,\n    mentionPattern: RegExp,\n};\n\nclass DraftJSMentionSelector extends React.Component<Props, State> {\n    static defaultProps = {\n        className: '',\n        contacts: [],\n        isDisabled: false,\n        isRequired: false,\n        mentionTriggers: defaultMentionTriggers,\n        selectorRow: <DefaultSelectorRow />,\n        startMentionMessage: <DefaultStartMentionMessage />,\n    };\n\n    constructor(props: Props) {\n        super(props);\n        const mentionTriggers = props.mentionTriggers.reduce((prev, current) => `${prev}\\\\${current}`, '');\n\n        this.state = {\n            activeMention: null,\n            isFocused: false,\n            mentionPattern: new RegExp(`([${mentionTriggers}])([^${mentionTriggers}]*)$`),\n        };\n    }\n\n    /**\n     * Lifecycle method that gets called immediately after an update\n     * @param {object} lastProps Props the component is receiving\n     * @returns {void}\n     */\n    componentDidUpdate(prevProps: Props) {\n        const { contacts: prevContacts } = prevProps;\n        const { contacts: currentContacts } = this.props;\n        const { activeMention } = this.state;\n\n        if (activeMention !== null && !currentContacts.length && prevContacts.length !== currentContacts.length) {\n            // if empty set of contacts get passed in, set active mention to null\n            this.setState({\n                activeMention: null,\n            });\n        }\n    }\n\n    /**\n     * Extracts the active mention from the editor state\n     *\n     * @param {EditorState} editorState\n     * @returns {object}\n     */\n    getActiveMentionForEditorState(editorState: EditorState) {\n        const { mentionPattern } = this.state;\n\n        return getActiveMentionForEditorState(editorState, mentionPattern);\n    }\n\n    /**\n     * Called on each keypress when a mention is being composed\n     * @returns {void}\n     */\n    handleMention = () => {\n        const { onMention } = this.props;\n        const { activeMention } = this.state;\n\n        if (onMention) {\n            onMention(activeMention ? activeMention.mentionString : '');\n        }\n    };\n\n    /**\n     * Method that gets called when a mention contact is selected\n     * @param {number} index The selected index\n     * @returns {void}\n     */\n    handleContactSelected = (index: number) => {\n        const { contacts } = this.props;\n        this.addMention(contacts[index]);\n        this.setState(\n            {\n                activeMention: null,\n                isFocused: true,\n            },\n            () => {\n                this.handleMention();\n            },\n        );\n    };\n\n    handleBlur = (event: SyntheticEvent<>) => {\n        const { onBlur } = this.props;\n\n        this.setState({\n            isFocused: false,\n        });\n\n        if (onBlur) {\n            onBlur(event);\n        }\n    };\n\n    handleFocus = (event: SyntheticEvent<>) => {\n        const { onFocus } = this.props;\n\n        this.setState({\n            isFocused: true,\n        });\n\n        if (onFocus) {\n            onFocus(event);\n        }\n    };\n\n    /**\n     * Event handler called when DraftJSEditor emits onChange\n     * Checks current text to see if any mentions were made\n     * @param {EditorState} editorState The new editor state\n     * @returns {void}\n     */\n    handleChange = (nextEditorState: EditorState) => {\n        const { onChange } = this.props;\n        const activeMention = this.getActiveMentionForEditorState(nextEditorState);\n\n        this.setState(\n            {\n                activeMention,\n            },\n            () => {\n                if (onChange) {\n                    onChange(nextEditorState);\n                }\n\n                if (activeMention && activeMention.mentionString) {\n                    this.handleMention();\n                }\n            },\n        );\n    };\n\n    /**\n     * Inserts a selected mention into the editor\n     * @param {object} mention The selected mention to insert\n     */\n    addMention(mention: Object) {\n        const { activeMention } = this.state;\n        const { editorState } = this.props;\n\n        const editorStateWithLink = addMention(editorState, activeMention, mention);\n\n        this.setState(\n            {\n                activeMention: null,\n            },\n            () => {\n                this.handleChange(editorStateWithLink);\n            },\n        );\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    shouldDisplayMentionLookup = () => {\n        const { contacts } = this.props;\n        const { activeMention } = this.state;\n\n        return !!(activeMention && activeMention.mentionString && contacts.length);\n    };\n\n    render() {\n        const {\n            className,\n            contacts,\n            contactsLoaded,\n            editorState,\n            error,\n            hideLabel,\n            isDisabled,\n            isRequired,\n            label,\n            description,\n            onReturn,\n            placeholder,\n            selectorRow,\n            startMentionMessage,\n            onMention,\n        } = this.props;\n        const { activeMention, isFocused } = this.state;\n\n        const classes = classNames('mention-selector-wrapper', className);\n\n        const showMentionStartState = !!(onMention && activeMention && !activeMention.mentionString && isFocused);\n\n        const usersFoundMessage = this.shouldDisplayMentionLookup()\n            ? { ...messages.usersFound, values: { usersCount: contacts.length } }\n            : messages.noUsersFound;\n\n        return (\n            <div className={classes}>\n                <SelectorDropdown\n                    onSelect={this.handleContactSelected}\n                    selector={\n                        <DraftJSEditor\n                            editorState={editorState}\n                            error={error}\n                            hideLabel={hideLabel}\n                            isDisabled={isDisabled}\n                            isFocused={isFocused}\n                            isRequired={isRequired}\n                            label={label}\n                            description={description}\n                            onBlur={this.handleBlur}\n                            onFocus={this.handleFocus}\n                            onChange={this.handleChange}\n                            onReturn={onReturn}\n                            placeholder={placeholder}\n                        />\n                    }\n                >\n                    {this.shouldDisplayMentionLookup()\n                        ? contacts.map(contact =>\n                              React.cloneElement(selectorRow, {\n                                  ...selectorRow.props,\n                                  ...contact,\n                                  key: contact.id,\n                              }),\n                          )\n                        : []}\n                </SelectorDropdown>\n                {showMentionStartState ? <MentionStartState message={startMentionMessage} /> : null}\n                {contactsLoaded && (\n                    <span className=\"accessibility-hidden\" data-testid=\"accessibility-alert\" role=\"alert\">\n                        <FormattedMessage {...usersFoundMessage} />\n                    </span>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default DraftJSMentionSelector;\n"],"file":"DraftJSMentionSelectorCore.js"}