{"version":3,"sources":["../../../../src/components/form-elements/form/Form.stories.js"],"names":["React","IntlProvider","boolean","State","Store","Button","Select","TextArea","TextInput","Toggle","Form","notes","basic","componentStore","formData","showtextareatoggle","formValidityState","customValidationFunc","value","code","message","state","set","username","console","log","title","component","parameters"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { IntlProvider } from 'react-intl';\nimport { boolean } from '@storybook/addon-knobs';\nimport { State, Store } from '@sambego/storybook-state';\n\nimport Button from '../../button/Button';\nimport Select from '../../select/Select';\nimport TextArea from '../text-area/TextArea';\nimport TextInput from '../text-input/TextInput';\nimport Toggle from '../../toggle/Toggle';\n\nimport Form from './Form';\nimport notes from './Form.stories.md';\n\nexport const basic = () => {\n    const componentStore = new Store({\n        formData: {\n            showtextareatoggle: '',\n        },\n        formValidityState: {},\n    });\n\n    const customValidationFunc = value => {\n        if (value !== 'box') {\n            return {\n                code: 'notbox',\n                message: 'value is not box',\n            };\n        }\n        return null;\n    };\n\n    return (\n        <State store={componentStore}>\n            {state => (\n                <IntlProvider locale=\"en\">\n                    <Form\n                        onChange={formData => {\n                            componentStore.set({ formValidityState: {}, formData });\n                        }}\n                        onValidSubmit={() => {\n                            // On a server validation error, set formValidityState to\n                            // push error states to child inputs\n                            componentStore.set({\n                                formValidityState: {\n                                    username: {\n                                        code: 'usernametaken',\n                                        message: 'Username already taken.',\n                                    },\n                                },\n                            });\n                        }}\n                        /* eslint-disable-next-line no-console */\n                        onInvalidSubmit={formValidityState => console.log(formValidityState)}\n                        formValidityState={state.formValidityState}\n                    >\n                        <div>\n                            <TextInput\n                                name=\"username\"\n                                label=\"Username\"\n                                placeholder=\"swagmaster6\"\n                                type=\"text\"\n                                isRequired={boolean('isRequired', true)}\n                            />\n                        </div>\n                        <div>\n                            <TextInput name=\"email\" label=\"Email Address\" placeholder=\"user@example.com\" type=\"email\" />\n                        </div>\n                        <div>\n                            <TextInput\n                                label=\"Must say box\"\n                                name=\"customValidationFunc\"\n                                placeholder=\"Not box\"\n                                type=\"text\"\n                                validation={customValidationFunc}\n                            />\n                        </div>\n\n                        <Select name=\"albumselect\" label=\"Album\">\n                            <option value={1}>Illmatic</option>\n                            <option value={2}>The Marshall Mathers LP</option>\n                            <option value={3}>All Eyez on Me</option>\n                            <option value={4}>Ready To Die</option>\n                            <option value={5}>Enter the Wu-Tang</option>\n                            <option value={6}>The Eminem Show</option>\n                            <option value={7}>The Chronic</option>\n                            <option value={8}>Straight Outta Compton</option>\n                            <option value={9}>Reasonable Doubt</option>\n                        </Select>\n\n                        <div>\n                            <div>\n                                <Toggle\n                                    name=\"showtextareatoggle\"\n                                    id=\"showtextareatoggle\"\n                                    isOn={state.formData.showtextareatoggle === 'on'}\n                                    label=\"Show TextArea\"\n                                    onChange={() => null}\n                                />\n                            </div>\n                            {state.formData.showtextareatoggle === 'on' ? (\n                                <TextArea name=\"textarea\" label=\"Your story\" placeholder=\"Once upon a time\" />\n                            ) : null}\n                        </div>\n\n                        <Button type=\"submit\">Submit</Button>\n                    </Form>\n                </IntlProvider>\n            )}\n        </State>\n    );\n};\n\nexport default {\n    title: 'Components|Form Elements/Form',\n    component: Form,\n    parameters: {\n        notes,\n    },\n};\n"],"file":"Form.stories.js"}