{"version":3,"sources":["../../../src/components/select-field/SelectFieldDropdown.js"],"names":["React","classNames","OVERLAY_SCROLLABLE_CLASS","SelectFieldDropdown","prevSelectedValues","selectedValues","props","multiple","scheduleUpdate","children","innerRef","style","placement","isScrollable","selectFieldID","listboxProps","event","preventDefault","Component","forwardRef","ref"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAKA,OAAO,IAAMC,wBAAwB,GAAG,qCAAjC;;IAWDC,mB;;;;;;;;;;;;;6CACyD;AAAA,UAAtBC,kBAAsB,QAAtCC,cAAsC;AAAA,wBACF,KAAKC,KADH;AAAA,UAC/CC,QAD+C,eAC/CA,QAD+C;AAAA,UACrCC,cADqC,eACrCA,cADqC;AAAA,UACrBH,cADqB,eACrBA,cADqB;;AAEvD,UAAIE,QAAQ,IAAIC,cAAZ,IAA8BJ,kBAAkB,KAAKC,cAAzD,EAAyE;AACrEG,QAAAA,cAAc;AACjB;AACJ;;;6BAEQ;AAAA,yBACmF,KAAKF,KADxF;AAAA,UACGG,QADH,gBACGA,QADH;AAAA,UACaC,QADb,gBACaA,QADb;AAAA,UACuBC,KADvB,gBACuBA,KADvB;AAAA,UAC8BC,SAD9B,gBAC8BA,SAD9B;AAAA,UACyCC,YADzC,gBACyCA,YADzC;AAAA,UACuDN,QADvD,gBACuDA,QADvD;AAAA,UACiEO,aADjE,gBACiEA,aADjE;AAGL,UAAMC,YAAY,GAAG,EAArB;;AACA,UAAIR,QAAJ,EAAc;AACVQ,QAAAA,YAAY,CAAC,sBAAD,CAAZ,GAAuC,IAAvC;AACH;;AAED,aACI;AACI,QAAA,GAAG,EAAEL,QADT;AAEI,QAAA,KAAK,EAAEC,KAFX;AAGI,0BAAgBC,SAHpB;AAII,QAAA,SAAS,EAAEX,UAAU,CAAC,yBAAD,EAA4B,SAA5B,sBAChBC,wBADgB,EACWW,YADX,EAJzB;AAOI,QAAA,EAAE,EAAEC,aAPR;AAQI,QAAA,IAAI,EAAC,SART,CASI;AATJ;AAUI,QAAA,WAAW,EAAE,qBAAAE,KAAK;AAAA,iBAAIA,KAAK,CAACC,cAAN,EAAJ;AAAA;AAVtB,SAWQF,YAXR,GAaKN,QAbL,CADJ;AAiBH;;;;EAjC6BT,KAAK,CAACkB,S;;AAoCxC,eAAelB,KAAK,CAACmB,UAAN,CAA0C,UAACb,KAAD,EAAec,GAAf;AAAA,SACrD,oBAAC,mBAAD,eAAyBd,KAAzB;AAAgC,IAAA,QAAQ,EAAEc;AAA1C,KADqD;AAAA,CAA1C,CAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\n\nimport type { SelectOptionValueProp } from './props';\nimport type { PopperChildrenProps } from '../popper/props';\n\nexport const OVERLAY_SCROLLABLE_CLASS = 'bdl-SelectField-overlay--scrollable';\n\ntype Props = {\n    children: React.Node,\n    innerRef?: React.Ref<any>,\n    isScrollable?: boolean,\n    multiple?: boolean,\n    selectFieldID: string,\n    selectedValues: Array<SelectOptionValueProp>,\n} & PopperChildrenProps;\n\nclass SelectFieldDropdown extends React.Component<Props> {\n    componentDidUpdate({ selectedValues: prevSelectedValues }) {\n        const { multiple, scheduleUpdate, selectedValues } = this.props;\n        if (multiple && scheduleUpdate && prevSelectedValues !== selectedValues) {\n            scheduleUpdate();\n        }\n    }\n\n    render() {\n        const { children, innerRef, style, placement, isScrollable, multiple, selectFieldID } = this.props;\n\n        const listboxProps = {};\n        if (multiple) {\n            listboxProps['aria-multiselectable'] = true;\n        }\n\n        return (\n            <ul\n                ref={innerRef}\n                style={style}\n                data-placement={placement}\n                className={classNames('bdl-SelectFieldDropdown', 'overlay', {\n                    [OVERLAY_SCROLLABLE_CLASS]: isScrollable,\n                })}\n                id={selectFieldID}\n                role=\"listbox\"\n                // preventDefault on mousedown so blur doesn't happen before click\n                onMouseDown={event => event.preventDefault()}\n                {...listboxProps}\n            >\n                {children}\n            </ul>\n        );\n    }\n}\n\nexport default React.forwardRef<Props, HTMLUListElement>((props: Props, ref) => (\n    <SelectFieldDropdown {...props} innerRef={ref} />\n));\n"],"file":"SelectFieldDropdown.js"}