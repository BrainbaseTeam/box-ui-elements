{"version":3,"sources":["../../../src/components/select-field/SelectField.js"],"names":["React","getProp","SingleSelectPrimitive","MultiSelectPrimitive","createFakeSyntheticEvent","name","value","currentTarget","target","onSelect","onChange","options","Array","isArray","map","option","SelectField","field","form","multiple","rest","errors","touched","isTouched","error"],"mappings":";;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAGA,OAAOC,qBAAP,MAAkC,qBAAlC;AACA,OAAOC,oBAAP,MAAiC,oBAAjC;;AASA,SAASC,wBAAT,CAAkCC,IAAlC,EAAgDC,KAAhD,EAA6G;AACzG,SAAO;AACHC,IAAAA,aAAa,EAAE;AAAEF,MAAAA,IAAI,EAAJA,IAAF;AAAQC,MAAAA,KAAK,EAALA;AAAR,KADZ;AAEHE,IAAAA,MAAM,EAAE;AAAEH,MAAAA,IAAI,EAAJA,IAAF;AAAQC,MAAAA,KAAK,EAALA;AAAR;AAFL,GAAP;AAIH;;AAED,SAASG,QAAT,CAAkBJ,IAAlB,EAAgCK,QAAhC,EAAoDC,OAApD,EAAyG;AACrG,MAAML,KAAK,GAAGM,KAAK,CAACC,OAAN,CAAcF,OAAd,IAAyBA,OAAO,CAACG,GAAR,CAAY,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACT,KAAX;AAAA,GAAlB,CAAzB,GAA+DK,OAAO,CAACL,KAArF;AACAI,EAAAA,QAAQ,CAACN,wBAAwB,CAACC,IAAD,EAAOC,KAAP,CAAzB,CAAR;AACH;;AAED,IAAMU,WAAW,GAAG,SAAdA,WAAc,OAA+C;AAAA,MAA5CC,KAA4C,QAA5CA,KAA4C;AAAA,MAArCC,IAAqC,QAArCA,IAAqC;AAAA,MAA/BC,QAA+B,QAA/BA,QAA+B;AAAA,MAAlBC,IAAkB;;AAAA,MACvDV,SADuD,GAC7BO,KAD6B,CACvDP,QADuD;AAAA,MAC7CL,IAD6C,GAC7BY,KAD6B,CAC7CZ,IAD6C;AAAA,MACvCC,KADuC,GAC7BW,KAD6B,CACvCX,KADuC;AAAA,MAEvDe,MAFuD,GAEnCH,IAFmC,CAEvDG,MAFuD;AAAA,MAE/CC,OAF+C,GAEnCJ,IAFmC,CAE/CI,OAF+C;AAG/D,MAAMC,SAAS,GAAGtB,OAAO,CAACqB,OAAD,EAAUjB,IAAV,CAAzB;AACA,MAAMmB,KAAK,GAAGD,SAAS,GAAGtB,OAAO,CAACoB,MAAD,EAAShB,IAAT,CAAV,GAA2B,IAAlD;;AAEA,MAAIc,QAAJ,EAAc;AACV,WACI,oBAAC,oBAAD,eACQF,KADR,EAEQG,IAFR;AAGI,MAAA,KAAK,EAAEI,KAHX;AAII,MAAA,QAAQ,EAAE,kBAAAb,OAAO;AAAA,eAAIF,QAAQ,CAACJ,IAAD,EAAOK,SAAP,EAAiBC,OAAjB,CAAZ;AAAA,OAJrB;AAKI,MAAA,OAAO,EAAES,IAAI,CAACT,OALlB;AAMI,MAAA,cAAc,EAAEL,KAAK,IAAI;AAN7B,OADJ;AAUH;;AAED,SACI,oBAAC,qBAAD,eACQW,KADR,EAEQG,IAFR;AAGI,IAAA,KAAK,EAAEI,KAHX;AAII,IAAA,QAAQ,EAAE,kBAAAb,OAAO;AAAA,aAAIF,QAAQ,CAACJ,IAAD,EAAOK,SAAP,EAAiBC,OAAjB,CAAZ;AAAA,KAJrB;AAKI,IAAA,OAAO,EAAES,IAAI,CAACT,OALlB;AAMI,IAAA,aAAa,EAAEL,KAAK,IAAI;AAN5B,KADJ;AAUH,CA7BD;;AA+BA,SAASG,QAAT;AACA,eAAeO,WAAf","sourcesContent":["// @flow\n\nimport * as React from 'react';\nimport getProp from 'lodash/get';\nimport type { FieldProps } from 'formik';\n\nimport SingleSelectPrimitive from './SingleSelectField';\nimport MultiSelectPrimitive from './MultiSelectField';\n\nimport type { SelectOptionValueProp, SelectOptionProp } from './props';\n\ntype Props = {\n    multiple?: boolean,\n    options: Array<SelectOptionProp>,\n} & FieldProps;\n\nfunction createFakeSyntheticEvent(name: string, value: SelectOptionValueProp | Array<SelectOptionValueProp>) {\n    return {\n        currentTarget: { name, value },\n        target: { name, value },\n    };\n}\n\nfunction onSelect(name: string, onChange: Function, options: SelectOptionProp | Array<SelectOptionProp>) {\n    const value = Array.isArray(options) ? options.map(option => option.value) : options.value;\n    onChange(createFakeSyntheticEvent(name, value));\n}\n\nconst SelectField = ({ field, form, multiple, ...rest }: Props) => {\n    const { onChange, name, value } = field;\n    const { errors, touched } = form;\n    const isTouched = getProp(touched, name);\n    const error = isTouched ? getProp(errors, name) : null;\n\n    if (multiple) {\n        return (\n            <MultiSelectPrimitive\n                {...field}\n                {...rest}\n                error={error}\n                onChange={options => onSelect(name, onChange, options)}\n                options={rest.options}\n                selectedValues={value || []}\n            />\n        );\n    }\n\n    return (\n        <SingleSelectPrimitive\n            {...field}\n            {...rest}\n            error={error}\n            onChange={options => onSelect(name, onChange, options)}\n            options={rest.options}\n            selectedValue={value || null}\n        />\n    );\n};\n\nexport { onSelect };\nexport default SelectField;\n"],"file":"SelectField.js"}