{"version":3,"sources":["../../../src/components/hotkeys/HotkeyManager.js"],"names":["HotkeyManager","layerID","layerStack","push","filter","thisLayerID","length"],"mappings":";;;;IACMA,a;;;;;sCACW,E;;0CAEI,UAACC,OAAD,EAAqB;AAClC,IAAA,KAAI,CAACC,UAAL,CAAgBC,IAAhB,CAAqBF,OAArB;AACH,G;;uCAEa,UAACA,OAAD,EAAqB;AAC/B;AACA,IAAA,KAAI,CAACC,UAAL,GAAkB,KAAI,CAACA,UAAL,CAAgBE,MAAhB,CAAuB,UAAAC,WAAW;AAAA,aAAIA,WAAW,KAAKJ,OAApB;AAAA,KAAlC,CAAlB;AACH,G;;4CAEkB,YAAM;AACrB,QAAI,KAAI,CAACC,UAAL,CAAgBI,MAAhB,KAA2B,CAA/B,EAAkC;AAC9B,aAAO,IAAP;AACH;;AACD,WAAO,KAAI,CAACJ,UAAL,CAAgB,KAAI,CAACA,UAAL,CAAgBI,MAAhB,GAAyB,CAAzC,CAAP;AACH,G;GAGL;;;AACA,eAAe,IAAIN,aAAJ,EAAf","sourcesContent":["// @flow\nclass HotkeyManager {\n    layerStack = [];\n\n    setActiveLayer = (layerID: string) => {\n        this.layerStack.push(layerID);\n    };\n\n    removeLayer = (layerID: string) => {\n        // $FlowFixMe\n        this.layerStack = this.layerStack.filter(thisLayerID => thisLayerID !== layerID);\n    };\n\n    getActiveLayerID = () => {\n        if (this.layerStack.length === 0) {\n            return null;\n        }\n        return this.layerStack[this.layerStack.length - 1];\n    };\n}\n\n// This is a singleton service to maintain the global hotkey layer stack\nexport default new HotkeyManager();\n"],"file":"HotkeyManager.js"}