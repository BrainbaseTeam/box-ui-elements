{"version":3,"sources":["../../../src/components/hotkeys/HotkeyLayer.js"],"names":["React","Component","PropTypes","HotkeyRecord","HotkeyPropType","HotkeyService","Hotkeys","HotkeyHelpModal","HotkeyLayer","props","isHelpModalOpen","setState","hotkeyService","hotkeyLayer","destroyLayer","configs","helpModalShortcut","enableHelpModal","key","handler","openHelpModal","children","className","getHotkeyConfigs","state","closeHelpModal","node","string","arrayOf","bool","object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,YAAP,IAAuBC,cAAvB,QAA6C,gBAA7C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,eAAP,MAA4B,mBAA5B,C,CAAiD;;AAEjD,OAAO,oBAAP;;IAEMC,W;;;;;AAwBF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;;AADe,4DAMX;AACJC,MAAAA,eAAe,EAAE;AADb,KANW;;AAAA,oEAoCH,YAAM;AAClB,YAAKC,QAAL,CAAc;AACVD,QAAAA,eAAe,EAAE;AADP,OAAd;AAGH,KAxCkB;;AAAA,qEA0CF,YAAM;AACnB,YAAKC,QAAL,CAAc;AACVD,QAAAA,eAAe,EAAE;AADP,OAAd;AAGH,KA9CkB;;AAGf,UAAKE,aAAL,GAAqB,IAAIP,aAAJ,EAArB;AAHe;AAIlB;;;;sCAMiB;AACd,aAAO;AACHQ,QAAAA,WAAW,EAAE,KAAKD;AADf,OAAP;AAGH;;;2CAEsB;AACnB,WAAKA,aAAL,CAAmBE,YAAnB;AACH;;;uCAEkB;AAAA;;AAAA,wBAC8C,KAAKL,KADnD;AAAA,4CACPM,OADO;AAAA,UACPA,OADO,oCACG,EADH;AAAA,UACOC,iBADP,eACOA,iBADP;AAAA,UAC0BC,eAD1B,eAC0BA,eAD1B;;AAGf,UAAI,CAACA,eAAL,EAAsB;AAClB,eAAOF,OAAP;AACH;;AAED,cACI,IAAIZ,YAAJ,CAAiB;AACbe,QAAAA,GAAG,EAAEF,iBADQ;AAEbG,QAAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,aAAL,EAAN;AAAA;AAFI,OAAjB,CADJ,4BAKOL,OALP;AAOH;;;6BAcQ;AAAA,yBACiD,KAAKN,KADtD;AAAA,UACGY,QADH,gBACGA,QADH;AAAA,+CACaC,SADb;AAAA,UACaA,SADb,sCACyB,EADzB;AAAA,UAC6BL,eAD7B,gBAC6BA,eAD7B;AAGL,aACI,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAE,KAAKM,gBAAL;AAAlB,SACKN,eAAe,GACZ;AAAM,QAAA,SAAS,yBAAkBK,SAAlB;AAAf,SACI,oBAAC,eAAD;AAAiB,QAAA,MAAM,EAAE,KAAKE,KAAL,CAAWd,eAApC;AAAqD,QAAA,cAAc,EAAE,KAAKe;AAA1E,QADJ,EAEKJ,QAFL,CADY,GAMZA,QAPR,CADJ;AAYH;;;;EAvFqBpB,S;;gBAApBO,W,eACiB;AACfa,EAAAA,QAAQ,EAAEnB,SAAS,CAACwB,IADL;AAEfJ,EAAAA,SAAS,EAAEpB,SAAS,CAACyB,MAFN;;AAGf;AACAZ,EAAAA,OAAO,EAAEb,SAAS,CAAC0B,OAAV,CAAkBxB,cAAlB,CAJM;;AAKf;AACAY,EAAAA,iBAAiB,EAAEd,SAAS,CAACyB,MANd;AAOfV,EAAAA,eAAe,EAAEf,SAAS,CAAC2B;AAPZ,C;;gBADjBrB,W,kBAWoB;AAClBQ,EAAAA,iBAAiB,EAAE,GADD;AAElBC,EAAAA,eAAe,EAAE;AAFC,C;;gBAXpBT,W,kBAgBoB;AAClBK,EAAAA,WAAW,EAAEX,SAAS,CAAC4B;AADL,C;;gBAhBpBtB,W,uBAoByB;AACvBK,EAAAA,WAAW,EAAEX,SAAS,CAAC4B;AADA,C;;AAsE/B,eAAetB,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport HotkeyRecord, { HotkeyPropType } from './HotkeyRecord';\nimport HotkeyService from './HotkeyService';\n\nimport Hotkeys from './Hotkeys';\nimport HotkeyHelpModal from './HotkeyHelpModal'; // eslint-disable-line import/no-cycle\n\nimport './HotkeyLayer.scss';\n\nclass HotkeyLayer extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n        className: PropTypes.string,\n        /** Array of hotkey configs, either in the specified shape, or instances of HotkeyRecord */\n        configs: PropTypes.arrayOf(HotkeyPropType),\n        /** Shortcut to trigger the help modal, if it's enabled */\n        helpModalShortcut: PropTypes.string,\n        enableHelpModal: PropTypes.bool,\n    };\n\n    static defaultProps = {\n        helpModalShortcut: '?',\n        enableHelpModal: false,\n    };\n\n    static contextTypes = {\n        hotkeyLayer: PropTypes.object,\n    };\n\n    static childContextTypes = {\n        hotkeyLayer: PropTypes.object,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.hotkeyService = new HotkeyService();\n    }\n\n    state = {\n        isHelpModalOpen: false,\n    };\n\n    getChildContext() {\n        return {\n            hotkeyLayer: this.hotkeyService,\n        };\n    }\n\n    componentWillUnmount() {\n        this.hotkeyService.destroyLayer();\n    }\n\n    getHotkeyConfigs() {\n        const { configs = [], helpModalShortcut, enableHelpModal } = this.props;\n\n        if (!enableHelpModal) {\n            return configs;\n        }\n\n        return [\n            new HotkeyRecord({\n                key: helpModalShortcut,\n                handler: () => this.openHelpModal(),\n            }),\n            ...configs,\n        ];\n    }\n\n    openHelpModal = () => {\n        this.setState({\n            isHelpModalOpen: true,\n        });\n    };\n\n    closeHelpModal = () => {\n        this.setState({\n            isHelpModalOpen: false,\n        });\n    };\n\n    render() {\n        const { children, className = '', enableHelpModal } = this.props;\n\n        return (\n            <Hotkeys configs={this.getHotkeyConfigs()}>\n                {enableHelpModal ? (\n                    <span className={`hotkey-layer ${className}`}>\n                        <HotkeyHelpModal isOpen={this.state.isHelpModalOpen} onRequestClose={this.closeHelpModal} />\n                        {children}\n                    </span>\n                ) : (\n                    children\n                )}\n            </Hotkeys>\n        );\n    }\n}\n\nexport default HotkeyLayer;\n"],"file":"HotkeyLayer.js"}