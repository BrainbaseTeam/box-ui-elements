{"version":3,"sources":["../../../src/components/radio/RadioButtonField.tsx"],"names":["React","RadioButton","RadioButtonField","field","value","rest","fieldValue","fieldRest"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAGA,OAAOC,WAAP,MAA8C,eAA9C;;AAIA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAsD;AAAA,MAAnDC,KAAmD,QAAnDA,KAAmD;AAAA,MAA5CC,KAA4C,QAA5CA,KAA4C;AAAA,MAAlCC,IAAkC;;AAC3E,MAAI,CAACF,KAAL,EAAY;AACR,WAAO,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAEC;AAApB,OAA+BC,IAA/B,EAAP;AACH;;AAH0E,MAI5DC,UAJ4D,GAI/BH,KAJ+B,CAInEC,KAJmE;AAAA,MAI7CG,SAJ6C,4BAI/BJ,KAJ+B;;AAK3E,SAAO,oBAAC,WAAD,eAAiBI,SAAjB,EAAgCF,IAAhC;AAAsC,IAAA,KAAK,EAAED,KAA7C;AAAoD,IAAA,UAAU,EAAEA,KAAK,KAAKE;AAA1E,KAAP;AACH,CAND;;AAQA,eAAeJ,gBAAf","sourcesContent":["import * as React from 'react';\nimport { FieldProps } from 'formik';\n\nimport RadioButton, { RadioButtonProps } from './RadioButton';\n\nexport type RadioButtonFieldProps = Partial<FieldProps> & RadioButtonProps;\n\nconst RadioButtonField = ({ field, value, ...rest }: RadioButtonFieldProps) => {\n    if (!field) {\n        return <RadioButton value={value} {...rest} />;\n    }\n    const { value: fieldValue, ...fieldRest } = field;\n    return <RadioButton {...fieldRest} {...rest} value={value} isSelected={value === fieldValue} />;\n};\n\nexport default RadioButtonField;\n"],"file":"RadioButtonField.js"}