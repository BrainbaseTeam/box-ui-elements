{"version":3,"sources":["../../../src/components/radio/RadioButtonField.js"],"names":["React","RadioButton","RadioButtonField","field","form","value","rest","fieldValue","fieldRest"],"mappings":";;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAGA,OAAOC,WAAP,MAAwB,eAAxB;;AAKA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAA4C;AAAA,MAAzCC,KAAyC,QAAzCA,KAAyC;AAAA,MAAlCC,IAAkC,QAAlCA,IAAkC;AAAA,MAA5BC,KAA4B,QAA5BA,KAA4B;AAAA,MAAlBC,IAAkB;;AAAA,MAClDC,UADkD,GACrBJ,KADqB,CACzDE,KADyD;AAAA,MACnCG,SADmC,4BACrBL,KADqB;;AAEjE,sBAAO,oBAAC,WAAD,eAAiBK,SAAjB,EAAgCF,IAAhC;AAAsC,IAAA,KAAK,EAAED,KAA7C;AAAoD,IAAA,UAAU,EAAEA,KAAK,KAAKE;AAA1E,KAAP;AACH,CAHD;;AAKA,eAAeL,gBAAf","sourcesContent":["// @flow\n\nimport * as React from 'react';\nimport type { FieldProps } from 'formik';\n\nimport RadioButton from './RadioButton';\nimport type { RadioButtonProps } from './RadioButton';\n\ntype Props = RadioButtonProps & FieldProps;\n\nconst RadioButtonField = ({ field, form, value, ...rest }: Props) => {\n    const { value: fieldValue, ...fieldRest } = field;\n    return <RadioButton {...fieldRest} {...rest} value={value} isSelected={value === fieldValue} />;\n};\n\nexport default RadioButtonField;\n"],"file":"RadioButtonField.js"}