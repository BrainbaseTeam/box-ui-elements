{"version":3,"sources":["../../../src/components/loading-indicator/makeLoadable.tsx"],"names":["React","LoadingIndicator","makeLoadable","BaseComponent","LoadableComponent","isLoading","loadingIndicatorProps","rest","displayName","name"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,gBAAP,MAAwD,oBAAxD;;AAOA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CACjBC,aADiB,EAEiB;AAClC,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,8BAAGC,SAAH;AAAA,QAAGA,SAAH,+BAAe,KAAf;AAAA,qCAAsBC,qBAAtB;AAAA,QAAsBA,qBAAtB,sCAA8C,EAA9C;AAAA,QAAqDC,IAArD;;AAAA,WACtBF,SAAS,GAAG,oBAAC,gBAAD,EAAsBC,qBAAtB,CAAH,GAAqD,oBAAC,aAAD,EAAoBC,IAApB,CADxC;AAAA,GAA1B;;AAGAH,EAAAA,iBAAiB,CAACI,WAAlB,qBAA2CL,aAAa,CAACK,WAAd,IAA6BL,aAAa,CAACM,IAA3C,IAAmD,WAA9F;AAEA,SAAOL,iBAAP;AACH,CATD;;AAWA,eAAeF,YAAf","sourcesContent":["import * as React from 'react';\nimport LoadingIndicator, { LoadingIndicatorProps } from './LoadingIndicator';\n\nexport interface MakeLoadableProps {\n    isLoading?: boolean;\n    loadingIndicatorProps?: LoadingIndicatorProps;\n}\n\nconst makeLoadable = <P extends MakeLoadableProps>(\n    BaseComponent: React.ComponentType<P>,\n): React.FC<P & MakeLoadableProps> => {\n    const LoadableComponent = ({ isLoading = false, loadingIndicatorProps = {}, ...rest }: MakeLoadableProps) =>\n        isLoading ? <LoadingIndicator {...loadingIndicatorProps} /> : <BaseComponent {...(rest as P)} />;\n\n    LoadableComponent.displayName = `Loadable${BaseComponent.displayName || BaseComponent.name || 'Component'}`;\n\n    return LoadableComponent;\n};\n\nexport default makeLoadable;\n"],"file":"makeLoadable.js"}