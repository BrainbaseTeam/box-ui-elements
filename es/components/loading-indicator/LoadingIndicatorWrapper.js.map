{"version":3,"sources":["../../../src/components/loading-indicator/LoadingIndicatorWrapper.tsx"],"names":["React","classnames","LoadingIndicator","LoadingIndicatorSize","LoadingIndicatorWrapperPosition","LoadingIndicatorWrapper","children","className","crawlerPosition","CENTER","crawlerSize","DEFAULT","isLoading","hideContent","rest","crawlerPositionClassName","TOP"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,gBAAP,IAA2BC,oBAA3B,QAAuD,oBAAvD;AACA,OAAO,gCAAP;AAEA,WAAYC,+BAAZ;;WAAYA,+B;AAAAA,EAAAA,+B;AAAAA,EAAAA,+B;GAAAA,+B,KAAAA,+B;;AAmBZ,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,OAQI;AAAA,MAPhCC,QAOgC,QAPhCA,QAOgC;AAAA,4BANhCC,SAMgC;AAAA,MANhCA,SAMgC,+BANpB,EAMoB;AAAA,kCALhCC,eAKgC;AAAA,MALhCA,eAKgC,qCALdJ,+BAA+B,CAACK,MAKlB;AAAA,8BAJhCC,WAIgC;AAAA,MAJhCA,WAIgC,iCAJlBP,oBAAoB,CAACQ,OAIH;AAAA,4BAHhCC,SAGgC;AAAA,MAHhCA,SAGgC,+BAHpB,KAGoB;AAAA,8BAFhCC,WAEgC;AAAA,MAFhCA,WAEgC,iCAFlB,KAEkB;AAAA,MAD7BC,IAC6B;;AAChC,MAAMC,wBAAwB,GAAGd,UAAU,CACvC,wBADuC,EAEvC;AACI,2BAAuBO,eAAe,KAAKJ,+BAA+B,CAACY,GAD/E;AAEI,8BAA0BR,eAAe,KAAKJ,+BAA+B,CAACK;AAFlF,GAFuC,EAMvCI,WAAW,GAAG,cAAH,GAAoB,cANQ,CAA3C;AAQA,SACI;AAAK,IAAA,SAAS,sCAA+BN,SAA/B;AAAd,KAA8DO,IAA9D,GACKR,QADL,EAEKM,SAAS,IACN;AAAK,IAAA,SAAS,EAAEG;AAAhB,KACI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAEL;AAAxB,IADJ,CAHR,CADJ;AAUH,CA3BD;;AA6BA,eAAeL,uBAAf","sourcesContent":["import * as React from 'react';\nimport classnames from 'classnames';\nimport LoadingIndicator, { LoadingIndicatorSize } from './LoadingIndicator';\nimport './LoadingIndicatorWrapper.scss';\n\nexport enum LoadingIndicatorWrapperPosition {\n    CENTER = 'center',\n    TOP = 'top',\n}\nexport interface LoadingIndicatorWrapperProps {\n    /** The content to wrap */\n    children: React.ReactChild;\n    /** Custom class for the loading indicator wrapper */\n    className?: string;\n    /** Location of the loading indicator - top, center */\n    crawlerPosition?: LoadingIndicatorWrapperPosition;\n    /** Size of the loading indicator - small, medium, large, default */\n    crawlerSize?: LoadingIndicatorSize;\n    /** Makes the background white hiding the content */\n    hideContent?: boolean;\n    /** Indicates whether loading indicator should show */\n    isLoading?: boolean;\n}\n\nconst LoadingIndicatorWrapper = ({\n    children,\n    className = '',\n    crawlerPosition = LoadingIndicatorWrapperPosition.CENTER,\n    crawlerSize = LoadingIndicatorSize.DEFAULT,\n    isLoading = false,\n    hideContent = false,\n    ...rest\n}: LoadingIndicatorWrapperProps) => {\n    const crawlerPositionClassName = classnames(\n        'loading-indicator-veil',\n        {\n            'is-with-top-crawler': crawlerPosition === LoadingIndicatorWrapperPosition.TOP,\n            'is-with-center-crawler': crawlerPosition === LoadingIndicatorWrapperPosition.CENTER,\n        },\n        hideContent ? 'hide-content' : 'blur-content',\n    );\n    return (\n        <div className={`loading-indicator-wrapper ${className}`} {...rest}>\n            {children}\n            {isLoading && (\n                <div className={crawlerPositionClassName}>\n                    <LoadingIndicator size={crawlerSize} />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default LoadingIndicatorWrapper;\n"],"file":"LoadingIndicatorWrapper.js"}