{"version":3,"sources":["../../../src/elements/content-sharing/SharingModal.js"],"names":["React","isEmpty","noop","FormattedMessage","API","Internationalize","NotificationsWrapper","Notification","DURATION_SHORT","TYPE_ERROR","LoadingIndicator","UnifiedShareModal","SharedLinkSettingsModal","SharingNotification","convertItemResponse","convertUserContactsByEmailResponse","convertUserResponse","useContactsByEmail","FIELD_ENTERPRISE","FIELD_HOSTNAME","TYPE_FILE","TYPE_FOLDER","CONTENT_SHARING_ERRORS","CONTENT_SHARING_ITEM_FIELDS","CONTENT_SHARING_VIEWS","INVITEE_PERMISSIONS_FOLDER","INVITEE_PERMISSIONS_FILE","contentSharingMessages","SharingModal","api","config","displayInModal","isVisible","itemID","itemType","language","messages","setIsVisible","uuid","useState","item","setItem","sharedLink","setSharedLink","currentUserEnterpriseName","setCurrentUserEnterpriseName","currentUserID","setCurrentUserID","initialDataErrorMessage","setInitialDataErrorMessage","isInitialDataErrorVisible","setIsInitialDataErrorVisible","collaboratorsList","setCollaboratorsList","onAddLink","setOnAddLink","onRemoveLink","setOnRemoveLink","changeSharedLinkAccessLevel","setChangeSharedLinkAccessLevel","changeSharedLinkPermissionLevel","setChangeSharedLinkPermissionLevel","onSubmitSettings","setOnSubmitSettings","UNIFIED_SHARE_MODAL","currentView","setCurrentView","getContacts","setGetContacts","getContactsByEmail","setGetContactsByEmail","sendInvites","setSendInvites","isLoading","setIsLoading","handleGetItemSuccess","useCallback","itemData","itemFromAPI","sharedLinkFromAPI","getError","error","errorObject","status","response","loadingError","useEffect","getItem","getFileAPI","getFile","fields","getFolderAPI","getFolderFields","getUserSuccess","userData","id","userEnterpriseData","enterpriseName","prevSharedLink","getUserData","getUsersAPI","getUser","params","toString","getContactsByEmailFn","transformUsers","data","serverURL","ownerEmail","ownerID","permissions","accessLevel","canChangeExpiration","expirationTimestamp","isDownloadAvailable","SHARED_LINK_SETTINGS","canInvite"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file SharingModal\n * @description This is the second-level component for the ContentSharing Element. It receives an API instance\n * from its parent component, ContentSharing, and then instantiates the UnifiedShareModal with API data.\n * @author Box\n */\nimport * as React from 'react';\nimport isEmpty from 'lodash/isEmpty';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport type { $AxiosError } from 'axios';\nimport API from '../../api';\nimport Internationalize from '../common/Internationalize';\nimport NotificationsWrapper from '../../components/notification/NotificationsWrapper';\nimport Notification from '../../components/notification/Notification';\nimport { DURATION_SHORT, TYPE_ERROR } from '../../components/notification/constants';\nimport LoadingIndicator from '../../components/loading-indicator/LoadingIndicator';\nimport UnifiedShareModal from '../../features/unified-share-modal';\nimport SharedLinkSettingsModal from '../../features/shared-link-settings-modal';\nimport SharingNotification from './SharingNotification';\nimport {\n    convertItemResponse,\n    convertUserContactsByEmailResponse,\n    convertUserResponse,\n} from '../../features/unified-share-modal/utils/convertData';\nimport useContactsByEmail from './hooks/useContactsByEmail';\nimport { FIELD_ENTERPRISE, FIELD_HOSTNAME, TYPE_FILE, TYPE_FOLDER } from '../../constants';\nimport { CONTENT_SHARING_ERRORS, CONTENT_SHARING_ITEM_FIELDS, CONTENT_SHARING_VIEWS } from './constants';\nimport { INVITEE_PERMISSIONS_FOLDER, INVITEE_PERMISSIONS_FILE } from '../../features/unified-share-modal/constants';\nimport contentSharingMessages from './messages';\nimport type { ErrorResponseData } from '../../common/types/api';\nimport type { ItemType, StringMap } from '../../common/types/core';\nimport type {\n    collaboratorsListType,\n    item as itemFlowType,\n    USMConfig,\n} from '../../features/unified-share-modal/flowTypes';\nimport type {\n    ContentSharingItemAPIResponse,\n    ContentSharingSharedLinkType,\n    GetContactsFnType,\n    GetContactsByEmailFnType,\n    SendInvitesFnType,\n    SharedLinkUpdateLevelFnType,\n    SharedLinkUpdateSettingsFnType,\n} from './types';\n\ntype SharingModalProps = {\n    api: API,\n    config?: USMConfig,\n    displayInModal: boolean,\n    isVisible: boolean,\n    itemID: string,\n    itemType: ItemType,\n    language: string,\n    messages?: StringMap,\n    setIsVisible: (arg: boolean) => void,\n    uuid?: string,\n};\n\nfunction SharingModal({\n    api,\n    config,\n    displayInModal,\n    isVisible,\n    itemID,\n    itemType,\n    language,\n    messages,\n    setIsVisible,\n    uuid,\n}: SharingModalProps) {\n    const [item, setItem] = React.useState<itemFlowType | null>(null);\n    const [sharedLink, setSharedLink] = React.useState<ContentSharingSharedLinkType | null>(null);\n    const [currentUserEnterpriseName, setCurrentUserEnterpriseName] = React.useState<string | null>(null);\n    const [currentUserID, setCurrentUserID] = React.useState<string | null>(null);\n    const [initialDataErrorMessage, setInitialDataErrorMessage] = React.useState<Object | null>(null);\n    const [isInitialDataErrorVisible, setIsInitialDataErrorVisible] = React.useState<boolean>(false);\n    const [collaboratorsList, setCollaboratorsList] = React.useState<collaboratorsListType | null>(null);\n    const [onAddLink, setOnAddLink] = React.useState<null | SharedLinkUpdateLevelFnType>(null);\n    const [onRemoveLink, setOnRemoveLink] = React.useState<null | SharedLinkUpdateLevelFnType>(null);\n    const [\n        changeSharedLinkAccessLevel,\n        setChangeSharedLinkAccessLevel,\n    ] = React.useState<null | SharedLinkUpdateLevelFnType>(null);\n    const [\n        changeSharedLinkPermissionLevel,\n        setChangeSharedLinkPermissionLevel,\n    ] = React.useState<null | SharedLinkUpdateLevelFnType>(null);\n    const [onSubmitSettings, setOnSubmitSettings] = React.useState<null | SharedLinkUpdateSettingsFnType>(null);\n    const [currentView, setCurrentView] = React.useState<string>(CONTENT_SHARING_VIEWS.UNIFIED_SHARE_MODAL);\n    const [getContacts, setGetContacts] = React.useState<null | GetContactsFnType>(null);\n    const [getContactsByEmail, setGetContactsByEmail] = React.useState<null | GetContactsByEmailFnType>(null);\n    const [sendInvites, setSendInvites] = React.useState<null | SendInvitesFnType>(null);\n    const [isLoading, setIsLoading] = React.useState<boolean>(true);\n\n    // Handle successful GET requests to /files or /folders\n    const handleGetItemSuccess = React.useCallback((itemData: ContentSharingItemAPIResponse) => {\n        const { item: itemFromAPI, sharedLink: sharedLinkFromAPI } = convertItemResponse(itemData);\n        setItem(itemFromAPI);\n        setSharedLink(sharedLinkFromAPI);\n        setIsLoading(false);\n    }, []);\n\n    // Handle initial data retrieval errors\n    const getError = React.useCallback(\n        (error: $AxiosError<Object> | ErrorResponseData) => {\n            if (isInitialDataErrorVisible) return; // display only one component-level notification at a time\n\n            setIsInitialDataErrorVisible(true);\n            setIsLoading(false);\n\n            let errorObject;\n            if (error.status) {\n                errorObject = contentSharingMessages[CONTENT_SHARING_ERRORS[error.status]];\n            } else if (error.response && error.response.status) {\n                errorObject = contentSharingMessages[CONTENT_SHARING_ERRORS[error.response.status]];\n            } else {\n                errorObject = contentSharingMessages.loadingError;\n            }\n            setInitialDataErrorMessage(errorObject);\n        },\n        [isInitialDataErrorVisible],\n    );\n\n    // Reset state if the API has changed\n    React.useEffect(() => {\n        setChangeSharedLinkAccessLevel(null);\n        setChangeSharedLinkPermissionLevel(null);\n        setCollaboratorsList(null);\n        setInitialDataErrorMessage(null);\n        setCurrentUserID(null);\n        setCurrentUserEnterpriseName(null);\n        setIsInitialDataErrorVisible(false);\n        setIsLoading(true);\n        setItem(null);\n        setOnAddLink(null);\n        setOnRemoveLink(null);\n        setSharedLink(null);\n    }, [api]);\n\n    // Refresh error state if the uuid has changed\n    React.useEffect(() => {\n        setInitialDataErrorMessage(null);\n        setIsInitialDataErrorVisible(false);\n    }, [uuid]);\n\n    // Get initial data for the item\n    React.useEffect(() => {\n        const getItem = () => {\n            if (itemType === TYPE_FILE) {\n                api.getFileAPI().getFile(itemID, handleGetItemSuccess, getError, {\n                    fields: CONTENT_SHARING_ITEM_FIELDS,\n                });\n            } else if (itemType === TYPE_FOLDER) {\n                api.getFolderAPI().getFolderFields(itemID, handleGetItemSuccess, getError, {\n                    fields: CONTENT_SHARING_ITEM_FIELDS,\n                });\n            }\n        };\n\n        if (api && !isEmpty(api) && !initialDataErrorMessage && isVisible && !item && !sharedLink) {\n            getItem();\n        }\n    }, [api, initialDataErrorMessage, getError, handleGetItemSuccess, isVisible, item, itemID, itemType, sharedLink]);\n\n    // Get initial data for the user\n    React.useEffect(() => {\n        const getUserSuccess = userData => {\n            const { id, userEnterpriseData } = convertUserResponse(userData);\n            setCurrentUserID(id);\n            setCurrentUserEnterpriseName(userEnterpriseData.enterpriseName || null);\n            setSharedLink(prevSharedLink => ({ ...prevSharedLink, ...userEnterpriseData }));\n            setInitialDataErrorMessage(null);\n            setIsLoading(false);\n        };\n\n        const getUserData = () => {\n            api.getUsersAPI(false).getUser(itemID, getUserSuccess, getError, {\n                params: {\n                    fields: [FIELD_ENTERPRISE, FIELD_HOSTNAME].toString(),\n                },\n            });\n        };\n\n        if (api && !isEmpty(api) && !initialDataErrorMessage && item && sharedLink && !currentUserID) {\n            getUserData();\n        }\n    }, [getError, item, itemID, itemType, sharedLink, currentUserID, api, initialDataErrorMessage]);\n\n    // Set the getContactsByEmail function. This call is not associated with a banner notification,\n    // which is why it exists at this level and not in SharingNotification\n    const getContactsByEmailFn: GetContactsByEmailFnType | null = useContactsByEmail(api, itemID, {\n        transformUsers: data => convertUserContactsByEmailResponse(data),\n    });\n    if (getContactsByEmailFn && !getContactsByEmail) {\n        setGetContactsByEmail((): GetContactsByEmailFnType => getContactsByEmailFn);\n    }\n\n    // Display a notification if there is an error in retrieving initial data\n    if (initialDataErrorMessage) {\n        return isInitialDataErrorVisible ? (\n            <Internationalize language={language} messages={messages}>\n                <NotificationsWrapper>\n                    <Notification\n                        onClose={() => setIsInitialDataErrorVisible(false)}\n                        type={TYPE_ERROR}\n                        duration={DURATION_SHORT}\n                    >\n                        <span>\n                            <FormattedMessage {...initialDataErrorMessage} />\n                        </span>\n                    </Notification>\n                </NotificationsWrapper>\n            </Internationalize>\n        ) : null;\n    }\n\n    // Ensure that all necessary data has been received before rendering child components.\n    // If the USM is visible, show the LoadingIndicator; otherwise, show nothing.\n    // \"serverURL\" is added to sharedLink after the call to the Users API, so it needs to be checked separately.\n    if (!item || !sharedLink || !currentUserID || !sharedLink.serverURL) {\n        return isVisible ? <LoadingIndicator /> : null;\n    }\n\n    const { ownerEmail, ownerID, permissions } = item;\n    const {\n        accessLevel = '',\n        canChangeExpiration = false,\n        expirationTimestamp,\n        isDownloadAvailable = false,\n        serverURL,\n    } = sharedLink;\n    return (\n        <Internationalize language={language} messages={messages}>\n            <>\n                <SharingNotification\n                    accessLevel={accessLevel}\n                    api={api}\n                    closeComponent={displayInModal ? () => setIsVisible(false) : noop}\n                    closeSettings={() => setCurrentView(CONTENT_SHARING_VIEWS.UNIFIED_SHARE_MODAL)}\n                    collaboratorsList={collaboratorsList}\n                    currentUserID={currentUserID}\n                    getContacts={getContacts}\n                    isDownloadAvailable={isDownloadAvailable}\n                    itemID={itemID}\n                    itemType={itemType}\n                    onSubmitSettings={onSubmitSettings}\n                    ownerEmail={ownerEmail}\n                    ownerID={ownerID}\n                    permissions={permissions}\n                    sendInvites={sendInvites}\n                    serverURL={serverURL}\n                    setChangeSharedLinkAccessLevel={setChangeSharedLinkAccessLevel}\n                    setChangeSharedLinkPermissionLevel={setChangeSharedLinkPermissionLevel}\n                    setGetContacts={setGetContacts}\n                    setCollaboratorsList={setCollaboratorsList}\n                    setIsLoading={setIsLoading}\n                    setItem={setItem}\n                    setOnAddLink={setOnAddLink}\n                    setOnRemoveLink={setOnRemoveLink}\n                    setOnSubmitSettings={setOnSubmitSettings}\n                    setSendInvites={setSendInvites}\n                    setSharedLink={setSharedLink}\n                />\n                {isVisible && currentView === CONTENT_SHARING_VIEWS.SHARED_LINK_SETTINGS && (\n                    <SharedLinkSettingsModal\n                        isDirectLinkUnavailableDueToDownloadSettings={false}\n                        isDirectLinkUnavailableDueToAccessPolicy={false}\n                        isDirectLinkUnavailableDueToMaliciousContent={false}\n                        isOpen={isVisible}\n                        item={item}\n                        onRequestClose={() => setCurrentView(CONTENT_SHARING_VIEWS.UNIFIED_SHARE_MODAL)}\n                        onSubmit={onSubmitSettings}\n                        submitting={isLoading}\n                        {...sharedLink}\n                        canChangeExpiration={canChangeExpiration && !!currentUserEnterpriseName}\n                    />\n                )}\n                {isVisible && currentView === CONTENT_SHARING_VIEWS.UNIFIED_SHARE_MODAL && (\n                    <UnifiedShareModal\n                        canInvite={sharedLink.canInvite}\n                        config={config}\n                        changeSharedLinkAccessLevel={changeSharedLinkAccessLevel}\n                        changeSharedLinkPermissionLevel={changeSharedLinkPermissionLevel}\n                        collaboratorsList={collaboratorsList}\n                        currentUserID={currentUserID}\n                        displayInModal={displayInModal}\n                        getCollaboratorContacts={getContacts}\n                        getContactsByEmail={getContactsByEmail}\n                        initialDataReceived\n                        inviteePermissions={\n                            itemType === TYPE_FOLDER ? INVITEE_PERMISSIONS_FOLDER : INVITEE_PERMISSIONS_FILE\n                        }\n                        isOpen={isVisible}\n                        item={item}\n                        onAddLink={onAddLink}\n                        onRequestClose={displayInModal ? () => setIsVisible(false) : noop}\n                        onRemoveLink={onRemoveLink}\n                        onSettingsClick={() => setCurrentView(CONTENT_SHARING_VIEWS.SHARED_LINK_SETTINGS)}\n                        sendInvites={sendInvites}\n                        sharedLink={{\n                            ...sharedLink,\n                            expirationTimestamp: expirationTimestamp ? expirationTimestamp / 1000 : null,\n                        }} // the USM expects this value in seconds, while the SLSM expects this value in milliseconds\n                        submitting={isLoading}\n                    />\n                )}\n            </>\n        </Internationalize>\n    );\n}\n\nexport default SharingModal;\n"],"file":"SharingModal.js"}