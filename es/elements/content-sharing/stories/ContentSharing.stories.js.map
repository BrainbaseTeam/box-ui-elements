{"version":3,"sources":["../../../../src/elements/content-sharing/stories/ContentSharing.stories.js"],"names":["React","select","text","IntlProvider","DEFAULT_HOSTNAME_API","TYPE_FILE","TYPE_FOLDER","Button","ContentSharing","notes","withModal","apiHost","itemID","itemType","token","showEmailSharedLinkForm","showInviteCollaboratorMessageSection","withModalAndCustomButton","customButton","withoutModal","title","component","parameters"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { select, text } from '@storybook/addon-knobs';\nimport { IntlProvider } from 'react-intl';\nimport { DEFAULT_HOSTNAME_API, TYPE_FILE, TYPE_FOLDER } from '../../../constants';\nimport Button from '../../../components/button/Button';\nimport ContentSharing from '../ContentSharing';\nimport notes from './ContentSharing.stories.md';\n\nexport const withModal = () => {\n    const apiHost = text('API Host', DEFAULT_HOSTNAME_API);\n    const itemID = text('Item ID');\n    const itemType = select('Item Type', [TYPE_FILE, TYPE_FOLDER], TYPE_FILE);\n    const token = text('Access Token');\n    return (\n        <>\n            <p>\n                Update the values in the Knobs section below to view the ContentSharing UI Element. The internal\n                SharingModal will appear when valid values have been entered.\n            </p>\n            <IntlProvider locale=\"en\">\n                <ContentSharing\n                    apiHost={apiHost}\n                    config={{ showEmailSharedLinkForm: false, showInviteCollaboratorMessageSection: false }}\n                    displayInModal\n                    itemID={itemID}\n                    itemType={itemType}\n                    language=\"en\"\n                    token={token}\n                />\n            </IntlProvider>\n        </>\n    );\n};\n\nexport const withModalAndCustomButton = () => {\n    const apiHost = text('API Host', DEFAULT_HOSTNAME_API);\n    const itemID = text('Item ID');\n    const itemType = select('Item Type', [TYPE_FILE, TYPE_FOLDER], TYPE_FILE);\n    const token = text('Access Token');\n    const customButton = <Button>&#10047; Launch ContentSharing &#10047;</Button>;\n    return (\n        <>\n            <p>\n                Update the values in the Knobs section below to view the ContentSharing UI Element. The API will be\n                instantiated on load, but the internal SharingModal will not be instantiated until the button is\n                clicked.\n            </p>\n            <IntlProvider locale=\"en\">\n                <ContentSharing\n                    apiHost={apiHost}\n                    config={{ showEmailSharedLinkForm: false, showInviteCollaboratorMessageSection: false }}\n                    customButton={customButton}\n                    displayInModal\n                    itemID={itemID}\n                    itemType={itemType}\n                    language=\"en\"\n                    token={token}\n                />\n            </IntlProvider>\n        </>\n    );\n};\n\nexport const withoutModal = () => {\n    const apiHost = text('API Host', DEFAULT_HOSTNAME_API);\n    const itemID = text('Item ID');\n    const itemType = select('Item Type', [TYPE_FILE, TYPE_FOLDER], TYPE_FILE);\n    const token = text('Access Token');\n    return (\n        <>\n            <p>\n                Update the values in the Knobs section below to view the ContentSharing UI Element. The internal\n                SharingModal will appear as a form within this page when valid values are entered.\n            </p>\n            <IntlProvider locale=\"en\">\n                <ContentSharing\n                    apiHost={apiHost}\n                    config={{ showEmailSharedLinkForm: false, showInviteCollaboratorMessageSection: false }}\n                    displayInModal={false}\n                    itemID={itemID}\n                    itemType={itemType}\n                    language=\"en\"\n                    token={token}\n                />\n            </IntlProvider>\n        </>\n    );\n};\n\nexport default {\n    title: 'Elements|ContentSharing',\n    component: ContentSharing,\n    parameters: {\n        notes,\n    },\n};\n"],"file":"ContentSharing.stories.js"}