{"version":3,"sources":["../../../src/elements/content-picker/selectionCellRenderer.js"],"names":["React","Checkbox","RadioButton","isRowSelectable","onItemSelect","selectableType","extensionsWhitelist","hasHitSelectionLimit","isRadio","rowData","name","selected","Component"],"mappings":";;;;AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AAGA,gBAAe,UACXC,YADW,EAEXC,cAFW,EAGXC,mBAHW,EAIXC,oBAJW,EAKXC,OALW;AAAA,SAMsB,gBAAuC;AAAA,QAApCC,OAAoC,QAApCA,OAAoC;AAAA,wBAChCA,OADgC,CAChEC,IADgE;AAAA,QAChEA,IADgE,8BACzD,EADyD;AAAA,4BAChCD,OADgC,CACrDE,QADqD;AAAA,QACrDA,QADqD,kCAC1C,KAD0C;AAExE,QAAMC,SAAS,GAAGJ,OAAO,GAAGN,WAAH,GAAiBD,QAA1C;;AAEA,QAAI,CAACE,eAAe,CAACE,cAAD,EAAiBC,mBAAjB,EAAsCC,oBAAtC,EAA4DE,OAA5D,CAApB,EAA0F;AACtF,aAAO,iCAAP;AACH;;AAED,WACI,oBAAC,SAAD;AACI,MAAA,SAAS,MADb;AAEI,MAAA,KAAK,EAAEC,IAFX;AAGI,MAAA,IAAI,EAAEA,IAHV;AAII,MAAA,QAAQ,EAAE;AAAA,eAAMN,YAAY,CAACK,OAAD,CAAlB;AAAA,OAJd;AAKI,MAAA,KAAK,EAAEC;AALX,2BAMWF,OAAO,GAAG,YAAH,GAAkB,WANpC,EAMkDG,QANlD,GADJ;AAUH,GAxBc;AAAA,CAAf","sourcesContent":["/**\n * @flow strict\n * @file Function to render the checkbox or radio table cell\n * @author Box\n */\n\nimport React from 'react';\nimport Checkbox from '../../components/checkbox';\nimport RadioButton from '../../components/radio/RadioButton';\nimport isRowSelectable from './cellRendererHelper';\nimport type { BoxItem } from '../../common/types/core';\n\nexport default (\n    onItemSelect: (rowData: BoxItem) => {},\n    selectableType: string,\n    extensionsWhitelist: string[],\n    hasHitSelectionLimit: boolean,\n    isRadio: boolean,\n): (({ rowData: BoxItem }) => {}) => ({ rowData }: { rowData: BoxItem }) => {\n    const { name = '', selected = false } = rowData;\n    const Component = isRadio ? RadioButton : Checkbox;\n\n    if (!isRowSelectable(selectableType, extensionsWhitelist, hasHitSelectionLimit, rowData)) {\n        return <span />;\n    }\n\n    return (\n        <Component\n            hideLabel\n            label={name}\n            name={name}\n            onChange={() => onItemSelect(rowData)}\n            value={name}\n            {...{ [isRadio ? 'isSelected' : 'isChecked']: selected }}\n        />\n    );\n};\n"],"file":"selectionCellRenderer.js"}