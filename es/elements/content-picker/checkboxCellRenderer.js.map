{"version":3,"sources":["../../../src/elements/content-picker/checkboxCellRenderer.js"],"names":["React","Checkbox","isRowSelectable","onItemSelect","selectableType","extensionsWhitelist","hasHitSelectionLimit","rowData","name","selected"],"mappings":"AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AAGA,gBAAe,UACXC,YADW,EAEXC,cAFW,EAGXC,mBAHW,EAIXC,oBAJW;AAAA,SAKA,gBAAuC;AAAA,QAApCC,OAAoC,QAApCA,OAAoC;AAAA,QAC1CC,IAD0C,GACfD,OADe,CAC1CC,IAD0C;AAAA,4BACfD,OADe,CACpCE,QADoC;AAAA,QACpCA,QADoC,kCACzB,KADyB;;AAGlD,QAAI,CAACP,eAAe,CAACE,cAAD,EAAiBC,mBAAjB,EAAsCC,oBAAtC,EAA4DC,OAA5D,CAApB,EAA0F;AACtF,aAAO,iCAAP;AACH;;AAED,WACI,oBAAC,QAAD;AACI,MAAA,SAAS,MADb;AAEI,MAAA,SAAS,EAAEE,QAFf;AAGI,MAAA,KAAK,EAAID,IAHb;AAII,MAAA,IAAI,EAAIA,IAJZ;AAKI,MAAA,QAAQ,EAAE;AAAA,eAAML,YAAY,CAACI,OAAD,CAAlB;AAAA;AALd,MADJ;AASH,GArBc;AAAA,CAAf","sourcesContent":["/**\n * @flow\n * @file Function to render the checkbox table cell\n * @author Box\n */\n\nimport React from 'react';\nimport Checkbox from '../../components/checkbox/Checkbox';\nimport isRowSelectable from './cellRendererHelper';\nimport type { BoxItem } from '../../common/types/core';\n\nexport default (\n    onItemSelect: Function,\n    selectableType: string,\n    extensionsWhitelist: string[],\n    hasHitSelectionLimit: boolean,\n): Function => ({ rowData }: { rowData: BoxItem }) => {\n    const { name, selected = false } = rowData;\n\n    if (!isRowSelectable(selectableType, extensionsWhitelist, hasHitSelectionLimit, rowData)) {\n        return <span />;\n    }\n\n    return (\n        <Checkbox\n            hideLabel\n            isChecked={selected}\n            label={((name: any): string)}\n            name={((name: any): string)}\n            onChange={() => onItemSelect(rowData)}\n        />\n    );\n};\n"],"file":"checkboxCellRenderer.js"}