{"version":3,"sources":["../../../src/elements/content-picker/Content.js"],"names":["React","EmptyState","ProgressBar","ItemList","VIEW_ERROR","VIEW_SELECTED","isEmpty","view","currentCollection","items","length","Content","rootId","isSmall","rootElement","focusedRow","hasHitSelectionLimit","selectableType","tableRef","canSetShareAccess","isSingleSelect","onItemClick","onItemSelect","onShareAccessChange","onFocusChange","extensionsWhitelist","percentLoaded"],"mappings":"AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,iBAA1C;AAGA,OAAO,gBAAP;;AAqBA;;;;;;;AAOA,SAASC,OAAT,CAAiBC,IAAjB,EAA6BC,iBAA7B,EAAqE;AAAA,8BAC1CA,iBAD0C,CACzDC,KADyD;AAAA,MACzDA,KADyD,sCACjD,EADiD;AAEjE,SAAOF,IAAI,KAAKH,UAAT,IAAuBK,KAAK,CAACC,MAAN,KAAiB,CAA/C;AACH;;AAED,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,MACZJ,IADY,QACZA,IADY;AAAA,MAEZK,MAFY,QAEZA,MAFY;AAAA,MAGZC,OAHY,QAGZA,OAHY;AAAA,MAIZC,WAJY,QAIZA,WAJY;AAAA,MAKZC,UALY,QAKZA,UALY;AAAA,MAMZC,oBANY,QAMZA,oBANY;AAAA,MAOZC,cAPY,QAOZA,cAPY;AAAA,MAQZT,iBARY,QAQZA,iBARY;AAAA,MASZU,QATY,QASZA,QATY;AAAA,MAUZC,iBAVY,QAUZA,iBAVY;AAAA,MAWZC,cAXY,QAWZA,cAXY;AAAA,MAYZC,WAZY,QAYZA,WAZY;AAAA,MAaZC,YAbY,QAaZA,YAbY;AAAA,MAcZC,mBAdY,QAcZA,mBAdY;AAAA,MAeZC,aAfY,QAeZA,aAfY;AAAA,MAgBZC,mBAhBY,QAgBZA,mBAhBY;AAAA,SAkBZ;AAAK,IAAA,SAAS,EAAC;AAAf,KACKlB,IAAI,KAAKH,UAAT,IAAuBG,IAAI,KAAKF,aAAhC,GAAgD,IAAhD,GACG,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEG,iBAAiB,CAACkB;AAAxC,IAFR,EAIKpB,OAAO,CAACC,IAAD,EAAOC,iBAAP,CAAP,GACG,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAED,IAAlB;AAAwB,IAAA,SAAS,EAAEC,iBAAiB,CAACkB,aAAlB,KAAoC;AAAvE,IADH,GAGG,oBAAC,QAAD;AACI,IAAA,IAAI,EAAEnB,IADV;AAEI,IAAA,MAAM,EAAEK,MAFZ;AAGI,IAAA,OAAO,EAAEC,OAHb;AAII,IAAA,WAAW,EAAEC,WAJjB;AAKI,IAAA,UAAU,EAAEC,UALhB;AAMI,IAAA,iBAAiB,EAAEP,iBANvB;AAOI,IAAA,QAAQ,EAAEU,QAPd;AAQI,IAAA,iBAAiB,EAAEC,iBARvB;AASI,IAAA,oBAAoB,EAAEH,oBAT1B;AAUI,IAAA,cAAc,EAAEI,cAVpB;AAWI,IAAA,cAAc,EAAEH,cAXpB;AAYI,IAAA,YAAY,EAAEK,YAZlB;AAaI,IAAA,WAAW,EAAED,WAbjB;AAcI,IAAA,aAAa,EAAEG,aAdnB;AAeI,IAAA,mBAAmB,EAAED,mBAfzB;AAgBI,IAAA,mBAAmB,EAAEE;AAhBzB,IAPR,CAlBY;AAAA,CAAhB;;AA+CA,eAAed,OAAf","sourcesContent":["/**\n * @flow\n * @file File picker header and list component\n * @author Box\n */\n\nimport React from 'react';\nimport EmptyState from '../common/empty-state';\nimport ProgressBar from '../common/progress-bar';\nimport ItemList from './ItemList';\nimport { VIEW_ERROR, VIEW_SELECTED } from '../../constants';\nimport type { View, Collection } from '../../common/types/core';\n\nimport './Content.scss';\n\ntype Props = {\n    canSetShareAccess: boolean,\n    currentCollection: Collection,\n    extensionsWhitelist: string[],\n    focusedRow: number,\n    hasHitSelectionLimit: boolean,\n    isSingleSelect: boolean,\n    isSmall: boolean,\n    onFocusChange: Function,\n    onItemClick: Function,\n    onItemSelect: Function,\n    onShareAccessChange: Function,\n    rootElement?: HTMLElement,\n    rootId: string,\n    selectableType: string,\n    tableRef: Function,\n    view: View,\n};\n\n/**\n * Determines if we should show the empty state\n *\n * @param {string} view the current view\n * @param {Object} currentCollection the current collection\n * @return {boolean} empty or not\n */\nfunction isEmpty(view: View, currentCollection: Collection): boolean {\n    const { items = [] } = currentCollection;\n    return view === VIEW_ERROR || items.length === 0;\n}\n\nconst Content = ({\n    view,\n    rootId,\n    isSmall,\n    rootElement,\n    focusedRow,\n    hasHitSelectionLimit,\n    selectableType,\n    currentCollection,\n    tableRef,\n    canSetShareAccess,\n    isSingleSelect,\n    onItemClick,\n    onItemSelect,\n    onShareAccessChange,\n    onFocusChange,\n    extensionsWhitelist,\n}: Props) => (\n    <div className=\"bcp-content\">\n        {view === VIEW_ERROR || view === VIEW_SELECTED ? null : (\n            <ProgressBar percent={currentCollection.percentLoaded} />\n        )}\n        {isEmpty(view, currentCollection) ? (\n            <EmptyState view={view} isLoading={currentCollection.percentLoaded !== 100} />\n        ) : (\n            <ItemList\n                view={view}\n                rootId={rootId}\n                isSmall={isSmall}\n                rootElement={rootElement}\n                focusedRow={focusedRow}\n                currentCollection={currentCollection}\n                tableRef={tableRef}\n                canSetShareAccess={canSetShareAccess}\n                hasHitSelectionLimit={hasHitSelectionLimit}\n                isSingleSelect={isSingleSelect}\n                selectableType={selectableType}\n                onItemSelect={onItemSelect}\n                onItemClick={onItemClick}\n                onFocusChange={onFocusChange}\n                onShareAccessChange={onShareAccessChange}\n                extensionsWhitelist={extensionsWhitelist}\n            />\n        )}\n    </div>\n);\n\nexport default Content;\n"],"file":"Content.js"}