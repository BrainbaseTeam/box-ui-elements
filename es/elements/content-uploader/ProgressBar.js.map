{"version":3,"sources":["../../../src/elements/content-uploader/ProgressBar.js"],"names":["React","PureComponent","ProgressBar","state","percent","props","containerStyle","transitionDelay","width"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;;;AAKA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAO,oBAAP;;IAUMC,W;;;;;;;mDASkDC,K,EAAmB;AAAA,UAArCC,OAAqC,QAArCA,OAAqC;;AACnE,UAAIA,OAAO,KAAKD,KAAK,CAACC,OAAtB,EAA+B;AAC3B,eAAO;AACHA,UAAAA,OAAO,EAAPA;AADG,SAAP;AAGH;;AAED,aAAO,IAAP;AACH;AAED;;;;;;;;AAKA,uBAAYC,KAAZ,EAA0B;AAAA;;AAAA;;AACtB,qFAAMA,KAAN;AADsB,QAEdD,OAFc,GAEFC,KAFE,CAEdD,OAFc;AAGtB,UAAKD,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAPA;AAAF,KAAb;AAHsB;AAIzB;AAED;;;;;;;;;6BAKS;AAAA,UACGA,OADH,GACe,KAAKD,KADpB,CACGC,OADH;AAEL,UAAME,cAAc,GAAG;AACnBC,QAAAA,eAAe,EAAEH,OAAO,GAAG,CAAV,IAAeA,OAAO,GAAG,GAAzB,GAA+B,GAA/B,GAAqC;AADnC,OAAvB;AAGA,aACI;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAwC,QAAA,KAAK,EAAEE;AAA/C,SACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,KAAK,EAAE;AAAEE,UAAAA,KAAK,YAAKJ,OAAL;AAAP;AAArC,QADJ,CADJ;AAKH;;;;EA7CqBH,a;;gBAApBC,W,kBAKoB;AAClBE,EAAAA,OAAO,EAAE;AADS,C;;AA2C1B,eAAeF,WAAf","sourcesContent":["/**\n * @flow\n * @file Component for a progress bar\n */\n\nimport React, { PureComponent } from 'react';\nimport './ProgressBar.scss';\n\ntype Props = {\n    percent: number,\n};\n\ntype State = {\n    percent: number,\n};\n\nclass ProgressBar extends PureComponent<Props, State> {\n    props: Props;\n\n    state: State;\n\n    static defaultProps = {\n        percent: 0,\n    };\n\n    static getDerivedStateFromProps({ percent }: Props, state: State): any {\n        if (percent !== state.percent) {\n            return {\n                percent,\n            };\n        }\n\n        return null;\n    }\n\n    /**\n     * [constructor]\n     *\n     * @return {ProgressBar}\n     */\n    constructor(props: Props) {\n        super(props);\n        const { percent } = props;\n        this.state = { percent };\n    }\n\n    /**\n     * Renders the progress bar\n     *\n     * @return {void}\n     */\n    render() {\n        const { percent } = this.state;\n        const containerStyle = {\n            transitionDelay: percent > 0 && percent < 100 ? '0' : '0.4s',\n        };\n        return (\n            <div className=\"bcu-progress-container\" style={containerStyle}>\n                <div className=\"bcu-progress\" style={{ width: `${percent}%` }} />\n            </div>\n        );\n    }\n}\n\nexport default ProgressBar;\n"],"file":"ProgressBar.js"}