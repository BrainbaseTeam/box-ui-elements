{"version":3,"sources":["../../../src/elements/content-uploader/ItemList.js"],"names":["React","noop","Table","Column","AutoSizer","nameCellRenderer","progressCellRenderer","actionCellRenderer","removeCellRenderer","ItemList","isResumableUploadsEnabled","items","onClick","onRemoveClick","width","height","nameCell","progressCell","actionCell","removeCell","length","index","textAlign"],"mappings":"AAAA;;;;AAKA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iCAA9B;AACA,OAAOC,SAAP,MAAsB,qCAAtB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AAEA,OAAO,8BAAP;AACA,OAAO,iBAAP;;AASA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,mCAAGC,yBAAH;AAAA,MAAGA,yBAAH,sCAA+B,KAA/B;AAAA,MAAsCC,KAAtC,QAAsCA,KAAtC;AAAA,MAA6CC,OAA7C,QAA6CA,OAA7C;AAAA,gCAAsDC,aAAtD;AAAA,MAAsDA,aAAtD,mCAAsEZ,IAAtE;AAAA,SACb,oBAAC,SAAD,QACK,iBAAuB;AAAA,QAApBa,KAAoB,SAApBA,KAAoB;AAAA,QAAbC,MAAa,SAAbA,MAAa;AACpB,QAAMC,QAAQ,GAAGX,gBAAgB,CAACK,yBAAD,CAAjC;AACA,QAAMO,YAAY,GAAGX,oBAAoB,EAAzC;AACA,QAAMY,UAAU,GAAGX,kBAAkB,CAACG,yBAAD,EAA4BE,OAA5B,CAArC;AACA,QAAMO,UAAU,GAAGX,kBAAkB,CAACK,aAAD,CAArC;AAEA,WACI,oBAAC,KAAD;AACI,MAAA,SAAS,EAAC,eADd;AAEI,MAAA,aAAa,MAFjB;AAGI,MAAA,YAAY,EAAE,CAHlB;AAII,MAAA,MAAM,EAAEE,MAJZ;AAKI,MAAA,YAAY,EAAC,cALjB;AAMI,MAAA,QAAQ,EAAEJ,KAAK,CAACS,MANpB;AAOI,MAAA,SAAS,EAAE;AAAA,YAAGC,KAAH,SAAGA,KAAH;AAAA,eAAeV,KAAK,CAACU,KAAD,CAApB;AAAA,OAPf;AAQI,MAAA,SAAS,EAAE,EARf;AASI,MAAA,KAAK,EAAEP;AATX,OAWI,oBAAC,MAAD;AAAQ,MAAA,YAAY,EAAEE,QAAtB;AAAgC,MAAA,OAAO,EAAC,MAAxC;AAA+C,MAAA,QAAQ,EAAE,CAAzD;AAA4D,MAAA,UAAU,EAAE,CAAxE;AAA2E,MAAA,KAAK,EAAE;AAAlF,MAXJ,EAYI,oBAAC,MAAD;AACI,MAAA,YAAY,EAAEC,YADlB;AAEI,MAAA,OAAO,EAAC,UAFZ;AAGI,MAAA,QAAQ,EAAE,CAHd;AAII,MAAA,UAAU,EAAE,CAJhB;AAKI,MAAA,KAAK,EAAE;AAAEK,QAAAA,SAAS,EAAE;AAAb,OALX;AAMI,MAAA,KAAK,EAAE;AANX,MAZJ,EAoBI,oBAAC,MAAD;AACI,MAAA,SAAS,EAAEZ,yBAAyB,GAAG,EAAH,GAAQ,6BADhD;AAEI,MAAA,YAAY,EAAEQ,UAFlB;AAGI,MAAA,OAAO,EAAC,QAHZ;AAII,MAAA,UAAU,EAAE,CAJhB;AAKI,MAAA,KAAK,EAAE;AALX,MApBJ,EA2BKR,yBAAyB,IACtB,oBAAC,MAAD;AACI,MAAA,SAAS,EAAC,6BADd;AAEI,MAAA,YAAY,EAAES,UAFlB;AAGI,MAAA,OAAO,EAAC,QAHZ;AAII,MAAA,UAAU,EAAE,CAJhB;AAKI,MAAA,KAAK,EAAE;AALX,MA5BR,CADJ;AAuCH,GA9CL,CADa;AAAA,CAAjB;;AAmDA,eAAeV,QAAf","sourcesContent":["/**\n * @flow\n * @file Item list component\n */\n\nimport React from 'react';\nimport noop from 'lodash/noop';\nimport { Table, Column } from 'react-virtualized/dist/es/Table';\nimport AutoSizer from 'react-virtualized/dist/es/AutoSizer';\nimport nameCellRenderer from './nameCellRenderer';\nimport progressCellRenderer from './progressCellRenderer';\nimport actionCellRenderer from './actionCellRenderer';\nimport removeCellRenderer from './removeCellRenderer';\nimport type { UploadItem } from '../../common/types/upload';\nimport 'react-virtualized/styles.css';\nimport './ItemList.scss';\n\ntype Props = {\n    isResumableUploadsEnabled?: boolean,\n    items: UploadItem[],\n    onClick: Function,\n    onRemoveClick?: (item: UploadItem) => void,\n};\n\nconst ItemList = ({ isResumableUploadsEnabled = false, items, onClick, onRemoveClick = noop }: Props) => (\n    <AutoSizer>\n        {({ width, height }) => {\n            const nameCell = nameCellRenderer(isResumableUploadsEnabled);\n            const progressCell = progressCellRenderer();\n            const actionCell = actionCellRenderer(isResumableUploadsEnabled, onClick);\n            const removeCell = removeCellRenderer(onRemoveClick);\n\n            return (\n                <Table\n                    className=\"bcu-item-list\"\n                    disableHeader\n                    headerHeight={0}\n                    height={height}\n                    rowClassName=\"bcu-item-row\"\n                    rowCount={items.length}\n                    rowGetter={({ index }) => items[index]}\n                    rowHeight={50}\n                    width={width}\n                >\n                    <Column cellRenderer={nameCell} dataKey=\"name\" flexGrow={1} flexShrink={1} width={300} />\n                    <Column\n                        cellRenderer={progressCell}\n                        dataKey=\"progress\"\n                        flexGrow={1}\n                        flexShrink={1}\n                        style={{ textAlign: 'right' }}\n                        width={300}\n                    />\n                    <Column\n                        className={isResumableUploadsEnabled ? '' : 'bcu-item-list-action-column'}\n                        cellRenderer={actionCell}\n                        dataKey=\"status\"\n                        flexShrink={0}\n                        width={25}\n                    />\n                    {isResumableUploadsEnabled && (\n                        <Column\n                            className=\"bcu-item-list-action-column\"\n                            cellRenderer={removeCell}\n                            dataKey=\"remove\"\n                            flexShrink={0}\n                            width={25}\n                        />\n                    )}\n                </Table>\n            );\n        }}\n    </AutoSizer>\n);\n\nexport default ItemList;\n"],"file":"ItemList.js"}