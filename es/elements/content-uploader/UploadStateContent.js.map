{"version":3,"sources":["../../../src/elements/content-uploader/UploadStateContent.js"],"names":["React","FormattedMessage","messages","UploadInput","UploadStateContent","fileInputLabel","folderInputLabel","message","onChange","useButton","messageContent","inputLabelClass","shouldShowFolderUploadInput","handleChange","event","currentTarget","value","fileInputContent","folderInputContent","inputsContent","uploadOptions","option1","option2"],"mappings":";;AAAA;;;;AAKA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAUA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,OAAuF;AAAA,MAApFC,cAAoF,QAApFA,cAAoF;AAAA,MAApEC,gBAAoE,QAApEA,gBAAoE;AAAA,MAAlDC,OAAkD,QAAlDA,OAAkD;AAAA,MAAzCC,QAAyC,QAAzCA,QAAyC;AAAA,4BAA/BC,SAA+B;AAAA,MAA/BA,SAA+B,+BAAnB,KAAmB;AAC9G,MAAMC,cAAc,GAAGH,OAAO,GAAG;AAAK,IAAA,SAAS,EAAC;AAAf,KAA2CA,OAA3C,CAAH,GAA+D,IAA7F;AACA,MAAMI,eAAe,GAAGF,SAAS,GAAG,8BAAH,GAAoC,eAArE;AACA,MAAMG,2BAA2B,GAAG,CAACH,SAAD,IAAc,CAAC,CAACH,gBAApD;;AAEA,MAAMO,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAkD;AACnE,QAAI,CAACN,QAAL,EAAe;AACX;AACH;;AAEDA,IAAAA,QAAQ,CAACM,KAAD,CAAR;AAEA,QAAMC,aAAa,GAAID,KAAK,CAACC,aAA7B,CAPmE,CAQnE;;AACAA,IAAAA,aAAa,CAACC,KAAd,GAAsB,EAAtB;AACH,GAVD;;AAYA,MAAMC,gBAAgB,GAClB,oBAAC,WAAD;AAAa,IAAA,YAAY,EAAEJ,YAA3B;AAAyC,IAAA,UAAU,EAAER,cAArD;AAAqE,IAAA,eAAe,EAAEM;AAAtF,IADJ;AAGA,MAAMO,kBAAkB,GAAGN,2BAA2B,GAClD,oBAAC,WAAD;AACI,IAAA,YAAY,EAAEC,YADlB;AAEI,IAAA,UAAU,EAAEP,gBAFhB;AAGI,IAAA,eAAe,EAAEK,eAHrB;AAII,IAAA,cAAc;AAJlB,IADkD,GAOlD,IAPJ;AASA,MAAIQ,aAAJ;;AACA,MAAIF,gBAAgB,IAAIC,kBAAxB,EAA4C;AACxCC,IAAAA,aAAa,GACT,oBAAC,gBAAD,eACQjB,QAAQ,CAACkB,aADjB;AAEI,MAAA,MAAM,EAAE;AACJC,QAAAA,OAAO,EAAEJ,gBADL;AAEJK,QAAAA,OAAO,EAAEJ;AAFL;AAFZ,OADJ;AASH,GAVD,MAUO,IAAID,gBAAJ,EAAsB;AACzBE,IAAAA,aAAa,GAAGF,gBAAhB;AACH;;AAED,SACI,iCACKP,cADL,EAEKS,aAAa,IAAI;AAAK,IAAA,SAAS,EAAC;AAAf,KAA6CA,aAA7C,CAFtB,CADJ;AAMH,CAlDD;;AAoDA,eAAef,kBAAf","sourcesContent":["/**\n * @flow\n * @file Upload state content component\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport messages from '../common/messages';\nimport UploadInput from './UploadInput';\n\ntype Props = {\n    fileInputLabel?: React.Node,\n    folderInputLabel?: React.Node,\n    message?: React.Node,\n    onChange?: Function,\n    useButton?: boolean,\n};\n\nconst UploadStateContent = ({ fileInputLabel, folderInputLabel, message, onChange, useButton = false }: Props) => {\n    const messageContent = message ? <div className=\"bcu-upload-state-message\">{message}</div> : null;\n    const inputLabelClass = useButton ? 'btn btn-primary be-input-btn' : 'be-input-link';\n    const shouldShowFolderUploadInput = !useButton && !!folderInputLabel;\n\n    const handleChange = (event: SyntheticInputEvent<HTMLInputElement>) => {\n        if (!onChange) {\n            return;\n        }\n\n        onChange(event);\n\n        const currentTarget = (event.currentTarget: HTMLInputElement);\n        // resets the file input selection\n        currentTarget.value = '';\n    };\n\n    const fileInputContent = (\n        <UploadInput handleChange={handleChange} inputLabel={fileInputLabel} inputLabelClass={inputLabelClass} />\n    );\n    const folderInputContent = shouldShowFolderUploadInput ? (\n        <UploadInput\n            handleChange={handleChange}\n            inputLabel={folderInputLabel}\n            inputLabelClass={inputLabelClass}\n            isFolderUpload\n        />\n    ) : null;\n\n    let inputsContent;\n    if (fileInputContent && folderInputContent) {\n        inputsContent = (\n            <FormattedMessage\n                {...messages.uploadOptions}\n                values={{\n                    option1: fileInputContent,\n                    option2: folderInputContent,\n                }}\n            />\n        );\n    } else if (fileInputContent) {\n        inputsContent = fileInputContent;\n    }\n\n    return (\n        <div>\n            {messageContent}\n            {inputsContent && <div className=\"bcu-upload-input-container\">{inputsContent}</div>}\n        </div>\n    );\n};\n\nexport default UploadStateContent;\n"],"file":"UploadStateContent.js"}