{"version":3,"sources":["../../../src/elements/content-uploader/UploadsManager.js"],"names":["React","classNames","ItemList","OverallUploadsProgressBar","STATUS_ERROR","UploadsManager","items","view","onItemActionClick","onRemoveActionClick","onUploadsManagerActionClick","toggleUploadsManager","isExpanded","isVisible","isResumableUploadsEnabled","isDragging","handleProgressBarKeyDown","event","key","numFailedUploads","totalSize","totalUploaded","forEach","item","status","isFolder","size","progress","percent","isResumeVisible","hasMultipleFailedUploads"],"mappings":"AAAA;;;;AAKA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,yBAAP,MAAsC,6BAAtC;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAIA,OAAO,uBAAP;;AAeA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAWV;AAAA,MAVTC,KAUS,QAVTA,KAUS;AAAA,MATTC,IASS,QATTA,IASS;AAAA,MARTC,iBAQS,QARTA,iBAQS;AAAA,MAPTC,mBAOS,QAPTA,mBAOS;AAAA,MANTC,2BAMS,QANTA,2BAMS;AAAA,MALTC,oBAKS,QALTA,oBAKS;AAAA,MAJTC,UAIS,QAJTA,UAIS;AAAA,MAHTC,SAGS,QAHTA,SAGS;AAAA,MAFTC,yBAES,QAFTA,yBAES;AAAA,MADTC,UACS,QADTA,UACS;;AACT;;;;;;AAMA,MAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,KAAD,EAA4C;AACzE,YAAQA,KAAK,CAACC,GAAd;AACI,WAAK,OAAL;AACA,WAAK,OAAL;AACIP,QAAAA,oBAAoB;AACpB;;AACJ,cALJ,CAMI;;AANJ;AAQH,GATD;;AAWA,MAAIQ,gBAAgB,GAAG,CAAvB;AACA,MAAIC,SAAS,GAAG,CAAhB;AACA,MAAIC,aAAa,GAAG,CAApB;AACAf,EAAAA,KAAK,CAACgB,OAAN,CAAc,UAAAC,IAAI,EAAI;AAClB,QAAIA,IAAI,CAACC,MAAL,KAAgBpB,YAAhB,IAAgC,CAACmB,IAAI,CAACE,QAA1C,EAAoD;AAChDL,MAAAA,SAAS,IAAIG,IAAI,CAACG,IAAlB;AACAL,MAAAA,aAAa,IAAKE,IAAI,CAACG,IAAL,GAAYH,IAAI,CAACI,QAAlB,GAA8B,KAA/C;AACH,KAHD,MAGO,IAAIJ,IAAI,CAACC,MAAL,KAAgBpB,YAApB,EAAkC;AACrCe,MAAAA,gBAAgB,IAAI,CAApB;AACH;AACJ,GAPD;AASA,MAAMS,OAAO,GAAIP,aAAa,GAAGD,SAAjB,GAA8B,GAA9C;AACA,MAAMS,eAAe,GAAGf,yBAAyB,IAAIK,gBAAgB,GAAG,CAAxE;AACA,MAAMW,wBAAwB,GAAGX,gBAAgB,GAAG,CAApD;AAEA,SACI;AACI,4BAAqB,gBADzB;AAEI,0BAAmB,SAFvB;AAGI,IAAA,SAAS,EAAElB,UAAU,CAAC,kCAAD,EAAqC;AACtD,yBAAmBW,UADmC;AAEtD,wBAAkBC;AAFoC,KAArC;AAHzB,KAQI,oBAAC,yBAAD;AACI,IAAA,UAAU,EAAEE,UADhB;AAEI,IAAA,UAAU,EAAEH,UAFhB;AAGI,IAAA,eAAe,EAAEiB,eAHrB;AAII,IAAA,SAAS,EAAEhB,SAJf;AAKI,IAAA,wBAAwB,EAAEiB,wBAL9B;AAMI,IAAA,OAAO,EAAEnB,oBANb;AAOI,IAAA,SAAS,EAAEK,wBAPf;AAQI,IAAA,2BAA2B,EAAEN,2BARjC;AASI,IAAA,OAAO,EAAEkB,OATb;AAUI,IAAA,IAAI,EAAErB;AAVV,IARJ,EAoBI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,oBAAC,QAAD;AACI,IAAA,yBAAyB,EAAEO,yBAD/B;AAEI,IAAA,KAAK,EAAER,KAFX;AAGI,IAAA,OAAO,EAAEE,iBAHb;AAII,IAAA,aAAa,EAAEC,mBAJnB;AAKI,IAAA,IAAI,EAAEF;AALV,IADJ,CApBJ,CADJ;AAgCH,CA7ED;;AA+EA,eAAeF,cAAf","sourcesContent":["/**\n * @flow\n * @file Uploads manager\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport ItemList from './ItemList';\nimport OverallUploadsProgressBar from './OverallUploadsProgressBar';\nimport { STATUS_ERROR } from '../../constants';\nimport type { UploadItem } from '../../common/types/upload';\nimport type { View } from '../../common/types/core';\n\nimport './UploadsManager.scss';\n\ntype Props = {\n    isDragging: boolean,\n    isExpanded: boolean,\n    isResumableUploadsEnabled: boolean,\n    isVisible: boolean,\n    items: UploadItem[],\n    onItemActionClick: Function,\n    onRemoveActionClick: (item: UploadItem) => void,\n    onUploadsManagerActionClick: Function,\n    toggleUploadsManager: Function,\n    view: View,\n};\n\nconst UploadsManager = ({\n    items,\n    view,\n    onItemActionClick,\n    onRemoveActionClick,\n    onUploadsManagerActionClick,\n    toggleUploadsManager,\n    isExpanded,\n    isVisible,\n    isResumableUploadsEnabled,\n    isDragging,\n}: Props) => {\n    /**\n     * Keydown handler for progress bar\n     *\n     * @param {SyntheticKeyboardEvent} event\n     * @return {void}\n     */\n    const handleProgressBarKeyDown = (event: SyntheticKeyboardEvent<*>): void => {\n        switch (event.key) {\n            case 'Enter':\n            case 'Space':\n                toggleUploadsManager();\n                break;\n            default:\n            // noop\n        }\n    };\n\n    let numFailedUploads = 0;\n    let totalSize = 0;\n    let totalUploaded = 0;\n    items.forEach(item => {\n        if (item.status !== STATUS_ERROR && !item.isFolder) {\n            totalSize += item.size;\n            totalUploaded += (item.size * item.progress) / 100.0;\n        } else if (item.status === STATUS_ERROR) {\n            numFailedUploads += 1;\n        }\n    });\n\n    const percent = (totalUploaded / totalSize) * 100;\n    const isResumeVisible = isResumableUploadsEnabled && numFailedUploads > 0;\n    const hasMultipleFailedUploads = numFailedUploads > 1;\n\n    return (\n        <div\n            data-resin-component=\"uploadsmanager\"\n            data-resin-feature=\"uploads\"\n            className={classNames('be bcu-uploads-manager-container', {\n                'bcu-is-expanded': isExpanded,\n                'bcu-is-visible': isVisible,\n            })}\n        >\n            <OverallUploadsProgressBar\n                isDragging={isDragging}\n                isExpanded={isExpanded}\n                isResumeVisible={isResumeVisible}\n                isVisible={isVisible}\n                hasMultipleFailedUploads={hasMultipleFailedUploads}\n                onClick={toggleUploadsManager}\n                onKeyDown={handleProgressBarKeyDown}\n                onUploadsManagerActionClick={onUploadsManagerActionClick}\n                percent={percent}\n                view={view}\n            />\n            <div className=\"bcu-uploads-manager-item-list\">\n                <ItemList\n                    isResumableUploadsEnabled={isResumableUploadsEnabled}\n                    items={items}\n                    onClick={onItemActionClick}\n                    onRemoveClick={onRemoveActionClick}\n                    view={view}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default UploadsManager;\n"],"file":"UploadsManager.js"}