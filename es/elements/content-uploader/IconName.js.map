{"version":3,"sources":["../../../src/elements/content-uploader/IconName.js"],"names":["React","Badgeable","FileIcon","IconAlertDefault","IconFolderPersonal","ItemName","STATUS_ERROR","IconName","name","extension","isFolder","isResumableUploadsEnabled","status","icon"],"mappings":"AAAA;;;;AAKA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;AACA,OAAOC,kBAAP,MAA+B,uCAA/B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,OAAO,iBAAP;;AAUA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAqF;AAAA,MAAlFC,IAAkF,QAAlFA,IAAkF;AAAA,MAA5EC,SAA4E,QAA5EA,SAA4E;AAAA,2BAAjEC,QAAiE;AAAA,MAAjEA,QAAiE,8BAAtD,KAAsD;AAAA,MAA/CC,yBAA+C,QAA/CA,yBAA+C;AAAA,MAApBC,MAAoB,QAApBA,MAAoB;AAClG,MAAIC,IAAI,GAAGH,QAAQ,GAAG,oBAAC,kBAAD,OAAH,GAA4B,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAED;AAArB,IAA/C;;AAEA,MAAIE,yBAAyB,IAAIC,MAAM,KAAKN,YAA5C,EAA0D;AACtDO,IAAAA,IAAI,GACA,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,gBAArB;AAAsC,MAAA,WAAW,EAAE,oBAAC,gBAAD;AAAkB,QAAA,MAAM,EAAE,EAA1B;AAA8B,QAAA,KAAK,EAAE;AAArC;AAAnD,OACKA,IADL,CADJ;AAKH;;AAED,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KAAgCA,IAAhC,CADJ,EAEI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEL;AAAhB,IADJ,CAFJ,CADJ;AAQH,CAnBD;;AAqBA,eAAeD,QAAf","sourcesContent":["/**\n * @flow\n * @file Component for file icon and name\n */\n\nimport React from 'react';\nimport Badgeable from '../../components/badgeable';\nimport FileIcon from '../../icons/file-icon/FileIcon';\nimport IconAlertDefault from '../../icons/general/IconAlertDefault';\nimport IconFolderPersonal from '../../icons/folder/IconFolderPersonal';\nimport ItemName from './ItemName';\nimport { STATUS_ERROR } from '../../constants';\nimport type { UploadStatus } from '../../common/types/upload';\nimport './IconName.scss';\n\ntype Props = {\n    extension: string,\n    isFolder?: boolean,\n    isResumableUploadsEnabled: boolean,\n    name: string,\n    status: UploadStatus,\n};\n\nconst IconName = ({ name, extension, isFolder = false, isResumableUploadsEnabled, status }: Props) => {\n    let icon = isFolder ? <IconFolderPersonal /> : <FileIcon extension={extension} />;\n\n    if (isResumableUploadsEnabled && status === STATUS_ERROR) {\n        icon = (\n            <Badgeable className=\"bcu-icon-badge\" bottomRight={<IconAlertDefault height={18} width={18} />}>\n                {icon}\n            </Badgeable>\n        );\n    }\n\n    return (\n        <div className=\"bcu-item-icon-name\">\n            <div className=\"bcu-item-icon\">{icon}</div>\n            <div className=\"bcu-item-name\">\n                <ItemName name={name} />\n            </div>\n        </div>\n    );\n};\n\nexport default IconName;\n"],"file":"IconName.js"}