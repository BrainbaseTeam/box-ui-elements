{"version":3,"sources":["../../../src/elements/content-sidebar/DetailsSidebar.js"],"names":["React","flow","getProp","noop","FormattedMessage","API","messages","SidebarAccessStats","SidebarClassification","SidebarContent","SidebarFileProperties","SidebarNotices","SidebarSection","SidebarVersions","EVENT_JS_READY","getBadItemError","mark","SECTION_TARGETS","SIDEBAR_FIELDS_TO_FETCH","withAPIContext","withErrorBoundary","withLogger","HTTP_STATUS_CODE_FORBIDDEN","ORIGIN_DETAILS_SIDEBAR","IS_ERROR_DISPLAYED","SIDEBAR_VIEW_DETAILS","MARK_NAME_JS_READY","DetailsSidebar","props","file","setState","fileError","undefined","e","code","onError","inlineError","title","fileDescriptionInlineErrorTitleMessage","content","defaultInlineErrorContentMessage","newDescription","api","state","description","getFileAPI","setFileDescription","descriptionChangeSuccessCallback","descriptionChangeErrorCallback","hasAccessStats","isForbidden","accessStatsError","error","fileAccessStatsPermissionsError","maskError","errorHeader","fileAccessStatsErrorHeaderMessage","errorSubHeader","defaultErrorMaskSubHeaderMessage","isLoadingAccessStats","accessStats","logger","onReadyMetric","endMarkName","fetchFile","fetchAccessStats","prevHasAccessStats","hasAccessStatsChanged","successCallback","fetchFileSuccessCallback","errorCallback","fetchFileErrorCallback","fileId","getFile","fields","getFileAccessStatsAPI","getFileAccessStats","fetchAccessStatsSuccessCallback","fetchAccessStatsErrorCallback","classification","elementId","hasProperties","hasNotices","hasClassification","hasRetentionPolicy","hasVersions","onAccessStatsClick","onVersionHistoryClick","onClassificationClick","onRetentionPolicyExtendClick","retentionPolicy","sidebarDetailsTitle","FILE_PROPERTIES","sidebarProperties","onDescriptionChange","PureComponent","DetailsSidebarComponent"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Details sidebar component\n * @author Box\n */\n\nimport React from 'react';\nimport flow from 'lodash/flow';\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport API from '../../api';\nimport messages from '../common/messages';\nimport SidebarAccessStats from './SidebarAccessStats';\nimport SidebarClassification from './SidebarClassification';\nimport SidebarContent from './SidebarContent';\nimport SidebarFileProperties from './SidebarFileProperties';\nimport SidebarNotices from './SidebarNotices';\nimport SidebarSection from './SidebarSection';\nimport SidebarVersions from './SidebarVersions';\nimport { EVENT_JS_READY } from '../common/logger/constants';\nimport { getBadItemError } from '../../utils/error';\nimport { mark } from '../../utils/performance';\nimport { SECTION_TARGETS } from '../common/interactionTargets';\nimport { SIDEBAR_FIELDS_TO_FETCH } from '../../utils/fields';\nimport { withAPIContext } from '../common/api-context';\nimport { withErrorBoundary } from '../common/error-boundary';\nimport { withLogger } from '../common/logger';\nimport {\n    HTTP_STATUS_CODE_FORBIDDEN,\n    ORIGIN_DETAILS_SIDEBAR,\n    IS_ERROR_DISPLAYED,\n    SIDEBAR_VIEW_DETAILS,\n} from '../../constants';\nimport type { ClassificationInfo, FileAccessStats, Errors } from './flowTypes';\nimport type { WithLoggerProps } from '../../common/types/logging';\nimport type { ElementsErrorCallback, ErrorContextProps, ElementsXhrError } from '../../common/types/api';\nimport type { BoxItem } from '../../common/types/core';\nimport './DetailsSidebar.scss';\n\ntype ExternalProps = {\n    classification?: ClassificationInfo,\n    elementId: string,\n    fileId: string,\n    hasAccessStats?: boolean,\n    hasClassification?: boolean,\n    hasNotices?: boolean,\n    hasProperties?: boolean,\n    hasRetentionPolicy?: boolean,\n    hasSidebarInitialized?: boolean,\n    hasVersions?: boolean,\n    onAccessStatsClick?: Function,\n    onClassificationClick?: (e: SyntheticEvent<HTMLButtonElement>) => void,\n    onRetentionPolicyExtendClick?: Function,\n    onVersionHistoryClick?: Function,\n    retentionPolicy?: Object,\n} & ErrorContextProps &\n    WithLoggerProps;\ntype Props = {\n    api: API,\n} & ExternalProps &\n    ErrorContextProps &\n    WithLoggerProps;\n\ntype State = {\n    accessStats?: FileAccessStats,\n    accessStatsError?: Errors,\n    file?: BoxItem,\n    fileError?: Errors,\n    isLoadingAccessStats: boolean,\n};\n\nconst MARK_NAME_JS_READY = `${ORIGIN_DETAILS_SIDEBAR}_${EVENT_JS_READY}`;\n\nmark(MARK_NAME_JS_READY);\n\nclass DetailsSidebar extends React.PureComponent<Props, State> {\n    static defaultProps = {\n        hasNotices: false,\n        hasProperties: false,\n        hasAccessStats: false,\n        hasClassification: false,\n        hasRetentionPolicy: false,\n        hasVersions: false,\n        onError: noop,\n    };\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            isLoadingAccessStats: false,\n        };\n        const { logger } = this.props;\n        logger.onReadyMetric({\n            endMarkName: MARK_NAME_JS_READY,\n        });\n    }\n\n    componentDidMount() {\n        this.fetchFile();\n        if (this.props.hasAccessStats) {\n            this.fetchAccessStats();\n        }\n    }\n\n    componentDidUpdate({ hasAccessStats: prevHasAccessStats }: Props) {\n        const { hasAccessStats } = this.props;\n        // Component visibility props such as hasAccessStats can sometimes be flipped after an async call\n        const hasAccessStatsChanged = prevHasAccessStats !== hasAccessStats;\n        if (hasAccessStatsChanged) {\n            if (hasAccessStats) {\n                this.fetchAccessStats();\n            } else {\n                this.setState({\n                    isLoadingAccessStats: false,\n                    accessStats: undefined,\n                    accessStatsError: undefined,\n                });\n            }\n        }\n    }\n\n    /**\n     * File description update callback\n     *\n     * @private\n     * @param {BoxItem} file - Updated file object\n     * @return {void}\n     */\n    descriptionChangeSuccessCallback = (file: BoxItem): void => {\n        this.setState({ file, fileError: undefined });\n    };\n\n    /**\n     * Fetches a file with the fields needed for details sidebar\n     *\n     * @param {Function} successCallback - the success callback\n     * @param {Function} errorCallback - the error callback\n     * @return {void}\n     */\n    fetchFile(\n        successCallback: (file: BoxItem) => void = this.fetchFileSuccessCallback,\n        errorCallback: ElementsErrorCallback = this.fetchFileErrorCallback,\n    ): void {\n        const { api, fileId }: Props = this.props;\n        api.getFileAPI().getFile(fileId, successCallback, errorCallback, {\n            fields: SIDEBAR_FIELDS_TO_FETCH, // TODO: replace this with DETAILS_SIDEBAR_FIELDS_TO_FETCH as we do not need all the sidebar fields\n        });\n    }\n\n    /**\n     * Handles a successful file fetch\n     *\n     * @param {Object} file - the box file\n     * @return {void}\n     */\n    fetchFileSuccessCallback = (file: BoxItem) => {\n        this.setState({\n            file,\n            fileError: undefined,\n        });\n    };\n\n    /**\n     * Handles a failed file fetch\n     *\n     * @private\n     * @param {Error} e - API error\n     * @param {string} code - error code\n     * @return {void}\n     */\n    fetchFileErrorCallback = (e: ElementsXhrError, code: string) => {\n        // TODO: handle the error properly (probably with maskError) once files call split out\n        this.setState({\n            file: undefined,\n        });\n\n        this.props.onError(e, code, {\n            e,\n        });\n    };\n\n    /**\n     * Handles a failed file description update\n     *\n     * @private\n     * @param {BoxItem} file - Original file object\n     * @return {void}\n     */\n    descriptionChangeErrorCallback = (file: BoxItem): void => {\n        // Reset the state back to the original description since the API call failed\n        this.setState({\n            file,\n            fileError: {\n                inlineError: {\n                    title: messages.fileDescriptionInlineErrorTitleMessage,\n                    content: messages.defaultInlineErrorContentMessage,\n                },\n            },\n        });\n    };\n\n    /**\n     * Function to update file description\n     *\n     * @private\n     * @param {string} newDescription - New file description\n     * @return {void}\n     */\n    onDescriptionChange = (newDescription: string): void => {\n        const { api }: Props = this.props;\n        const { file }: State = this.state;\n        if (!file) {\n            throw getBadItemError();\n        }\n\n        const { description }: BoxItem = file;\n        if (newDescription === description) {\n            return;\n        }\n\n        api.getFileAPI().setFileDescription(\n            file,\n            newDescription,\n            this.descriptionChangeSuccessCallback,\n            this.descriptionChangeErrorCallback,\n        );\n    };\n\n    /**\n     * Handles a failed file access stats fetch\n     *\n     * @private\n     * @param {Error} e - API error\n     * @param {string} code - error code\n     * @return {void}\n     */\n    fetchAccessStatsErrorCallback = (e: ElementsXhrError, code: string) => {\n        if (!this.props.hasAccessStats) {\n            return;\n        }\n\n        const isForbidden = getProp(e, 'status') === HTTP_STATUS_CODE_FORBIDDEN;\n        let accessStatsError;\n\n        if (isForbidden) {\n            accessStatsError = {\n                error: messages.fileAccessStatsPermissionsError,\n            };\n        } else {\n            accessStatsError = {\n                maskError: {\n                    errorHeader: messages.fileAccessStatsErrorHeaderMessage,\n                    errorSubHeader: messages.defaultErrorMaskSubHeaderMessage,\n                },\n            };\n        }\n\n        this.setState({\n            isLoadingAccessStats: false,\n            accessStats: undefined,\n            accessStatsError,\n        });\n\n        this.props.onError(e, code, {\n            e,\n            [IS_ERROR_DISPLAYED]: !isForbidden,\n        });\n    };\n\n    /**\n     * File access stats fetch success callback\n     *\n     * @private\n     * @param {Object} accessStats - access stats for a file\n     * @return {void}\n     */\n    fetchAccessStatsSuccessCallback = (accessStats: FileAccessStats): void => {\n        if (!this.props.hasAccessStats) {\n            return;\n        }\n\n        this.setState({\n            accessStats,\n            accessStatsError: undefined,\n            isLoadingAccessStats: false,\n        });\n    };\n\n    /**\n     * Fetches the access stats for a file\n     *\n     * @private\n     * @return {void}\n     */\n    fetchAccessStats(): void {\n        const { api, fileId }: Props = this.props;\n        const { isLoadingAccessStats } = this.state;\n\n        if (isLoadingAccessStats) {\n            return;\n        }\n\n        this.setState({ isLoadingAccessStats: true });\n        api.getFileAccessStatsAPI(false).getFileAccessStats(\n            fileId,\n            this.fetchAccessStatsSuccessCallback,\n            this.fetchAccessStatsErrorCallback,\n        );\n    }\n\n    refresh(): void {\n        this.fetchAccessStats();\n    }\n\n    render() {\n        const {\n            classification,\n            elementId,\n            hasProperties,\n            hasNotices,\n            hasAccessStats,\n            hasClassification,\n            hasRetentionPolicy,\n            hasVersions,\n            onAccessStatsClick,\n            onVersionHistoryClick,\n            onClassificationClick,\n            onRetentionPolicyExtendClick,\n            retentionPolicy,\n        }: Props = this.props;\n\n        const { accessStats, accessStatsError, file, fileError, isLoadingAccessStats }: State = this.state;\n\n        // TODO: Add loading indicator and handle errors once file call is split out\n        return (\n            <SidebarContent\n                className=\"bcs-details\"\n                elementId={elementId}\n                sidebarView={SIDEBAR_VIEW_DETAILS}\n                title={<FormattedMessage {...messages.sidebarDetailsTitle} />}\n            >\n                {file && hasNotices && (\n                    <div className=\"bcs-DetailsSidebar-notices\">\n                        <SidebarNotices file={file} />\n                    </div>\n                )}\n                {file && hasClassification && (\n                    <SidebarClassification classification={classification} file={file} onEdit={onClassificationClick} />\n                )}\n                {file && hasAccessStats && (\n                    <SidebarAccessStats\n                        accessStats={accessStats}\n                        file={file}\n                        onAccessStatsClick={onAccessStatsClick}\n                        {...accessStatsError}\n                    />\n                )}\n                {file && hasProperties && (\n                    <SidebarSection\n                        interactionTarget={SECTION_TARGETS.FILE_PROPERTIES}\n                        title={<FormattedMessage {...messages.sidebarProperties} />}\n                    >\n                        {hasVersions && <SidebarVersions file={file} onVersionHistoryClick={onVersionHistoryClick} />}\n                        <SidebarFileProperties\n                            file={file}\n                            onDescriptionChange={this.onDescriptionChange}\n                            {...fileError}\n                            hasRetentionPolicy={hasRetentionPolicy}\n                            isLoading={isLoadingAccessStats}\n                            onRetentionPolicyExtendClick={onRetentionPolicyExtendClick}\n                            retentionPolicy={retentionPolicy}\n                        />\n                    </SidebarSection>\n                )}\n            </SidebarContent>\n        );\n    }\n}\n\nexport type DetailsSidebarProps = ExternalProps;\nexport { DetailsSidebar as DetailsSidebarComponent };\nexport default flow([withLogger(ORIGIN_DETAILS_SIDEBAR), withErrorBoundary(ORIGIN_DETAILS_SIDEBAR), withAPIContext])(\n    DetailsSidebar,\n);\n"],"file":"DetailsSidebar.js"}