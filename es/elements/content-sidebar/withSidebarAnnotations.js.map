{"version":3,"sources":["../../../src/elements/content-sidebar/withSidebarAnnotations.js"],"names":["React","getProp","noop","matchPath","getBadUserError","withSidebarAnnotations","WrappedComponent","WithSidebarAnnotations","props","createRef","file","getAnnotationsPath","getAnnotationsMatchPath","history","location","match","annotationId","currentFileVersionId","fileVersionId","replace","annotatorState","activeAnnotationFileVersionId","activeAnnotationId","defaultFileVersionId","newLocationState","open","state","push","pathname","api","fileId","onVersionChange","feedAPI","getFeedAPI","getCachedItems","items","feedItems","version","filter","item","type","find","id","currentVersionId","updateVersionToCurrent","redirectDeeplinkedAnnotation","prevProps","prevAnnotatorState","prevFileId","prevLocation","annotation","prevActiveAnnotationId","prevAnnotation","prevMatch","hasActiveAnnotationChanged","isAnnotationsPath","isTransitioningToAnnotationPath","prevFileVersionId","addAnnotation","updateActiveAnnotation","updateActiveVersion","action","meta","requestId","currentUser","isOpen","isActivity","isPending","hasItems","current","sidebarPanels","refresh","Component","displayName","name"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport { matchPath, type ContextRouter } from 'react-router-dom';\nimport { getBadUserError } from '../../utils/error';\nimport type { WithAnnotatorContextProps } from '../common/annotator-context';\nimport type { BoxItem, User } from '../../common/types/core';\n\ntype Props = {\n    ...ContextRouter,\n    currentUser?: User,\n    file: BoxItem,\n    fileId: string,\n    isOpen: boolean,\n    onVersionChange: Function,\n} & WithAnnotatorContextProps;\n\ntype SidebarPanelsRefType = {\n    refresh: (shouldRefreshCache?: boolean) => void,\n};\n\nexport default function withSidebarAnnotations(\n    WrappedComponent: React.ComponentType<Props>,\n): React.ComponentType<Props> {\n    class WithSidebarAnnotations extends React.Component<Props> {\n        static defaultProps = {\n            annotatorState: {},\n            getAnnotationsMatchPath: noop,\n            getAnnotationsPath: noop,\n            onVersionChange: noop,\n        };\n\n        static displayName: ?string;\n\n        props: Props;\n\n        sidebarPanels: { current: SidebarPanelsRefType | null } = React.createRef();\n\n        constructor(props) {\n            super(props);\n\n            this.redirectDeeplinkedAnnotation();\n        }\n\n        redirectDeeplinkedAnnotation = () => {\n            const { file, getAnnotationsPath, getAnnotationsMatchPath, history, location } = this.props;\n            const match = getAnnotationsMatchPath(location);\n            const annotationId = getProp(match, 'params.annotationId');\n            const currentFileVersionId = getProp(file, 'file_version.id');\n            const fileVersionId = getProp(match, 'params.fileVersionId');\n\n            if (fileVersionId && fileVersionId !== currentFileVersionId) {\n                history.replace(getAnnotationsPath(currentFileVersionId, annotationId));\n            }\n        };\n\n        componentDidUpdate(prevProps: Props) {\n            const { annotatorState, fileId, getAnnotationsMatchPath, location, onVersionChange }: Props = this.props;\n            const { annotatorState: prevAnnotatorState, fileId: prevFileId, location: prevLocation }: Props = prevProps;\n            const { activeAnnotationId, annotation } = annotatorState;\n            const { activeAnnotationId: prevActiveAnnotationId, annotation: prevAnnotation } = prevAnnotatorState;\n\n            const match = getAnnotationsMatchPath(location);\n            const prevMatch = getAnnotationsMatchPath(prevLocation);\n            const fileVersionId = getProp(match, 'params.fileVersionId');\n            const hasActiveAnnotationChanged = prevActiveAnnotationId !== activeAnnotationId;\n            const isAnnotationsPath = !!match;\n            const isTransitioningToAnnotationPath = activeAnnotationId && !isAnnotationsPath;\n            const prevFileVersionId = getProp(prevMatch, 'params.fileVersionId');\n\n            if (annotation && prevAnnotation !== annotation) {\n                this.addAnnotation();\n            }\n\n            // Active annotation id changed. If location is currently an annotation path or\n            // if location is not currently an annotation path but the active annotation id\n            // transitioned from falsy to truthy, update the location accordingly\n            if (hasActiveAnnotationChanged && (isAnnotationsPath || isTransitioningToAnnotationPath)) {\n                this.updateActiveAnnotation();\n            }\n\n            if (fileVersionId && prevFileVersionId !== fileVersionId) {\n                this.updateActiveVersion();\n            }\n\n            if (prevFileId !== fileId) {\n                // If the file id has changed, reset the current version id since the previous (possibly versioned)\n                // location is no longer active\n                onVersionChange(null);\n            }\n        }\n\n        addAnnotation() {\n            const {\n                annotatorState: { action, annotation, meta: { requestId } = {} },\n                api,\n                currentUser,\n                file,\n                fileId,\n                isOpen,\n                location,\n            } = this.props;\n\n            if (!requestId) {\n                return;\n            }\n\n            // TODO: need to address in follow on -- currentUser may be undefined here but is never fetched for sure until ActivitySidebar\n            if (!currentUser) {\n                throw getBadUserError();\n            }\n\n            const feedAPI = api.getFeedAPI(false);\n            const pathname = getProp(location, 'pathname', '');\n            const isActivity = matchPath(pathname, '/activity');\n            const isPending = action === 'create_start';\n            const { items: hasItems } = feedAPI.getCachedItems(fileId) || {};\n            const { current } = this.sidebarPanels;\n\n            // If there are existing items in the cache for this file, then patch the cache with the new annotation\n            // If there are no cache entry for feeditems, then it is assumed that it has not yet been fetched.\n            if (hasItems) {\n                feedAPI.addAnnotation(file, currentUser, annotation, requestId, isPending);\n            }\n\n            // If the activity sidebar is currently open, then force it to refresh with the updated data\n            if (current && isActivity && isOpen) {\n                current.refresh(false);\n            }\n        }\n\n        updateActiveAnnotation = () => {\n            const {\n                annotatorState: { activeAnnotationFileVersionId, activeAnnotationId },\n                file,\n                getAnnotationsMatchPath,\n                getAnnotationsPath,\n                history,\n                location,\n            } = this.props;\n            const match = getAnnotationsMatchPath(location);\n            const currentFileVersionId = getProp(file, 'file_version.id');\n            const defaultFileVersionId = activeAnnotationFileVersionId || currentFileVersionId;\n            const fileVersionId = getProp(match, 'params.fileVersionId', defaultFileVersionId);\n            const newLocationState = activeAnnotationId ? { open: true } : location.state;\n\n            // Update the location pathname and open state if transitioning to an active annotation id, force the sidebar open\n            history.push({\n                pathname: getAnnotationsPath(fileVersionId, activeAnnotationId),\n                state: newLocationState,\n            });\n        };\n\n        updateActiveVersion = () => {\n            const {\n                api,\n                file,\n                fileId,\n                getAnnotationsMatchPath,\n                getAnnotationsPath,\n                history,\n                location,\n                onVersionChange,\n            } = this.props;\n            const feedAPI = api.getFeedAPI(false);\n            const match = getAnnotationsMatchPath(location);\n            const currentFileVersionId = getProp(file, 'file_version.id');\n            const fileVersionId = getProp(match, 'params.fileVersionId');\n            const { items: feedItems = [] } = feedAPI.getCachedItems(fileId) || {};\n            const version = feedItems\n                .filter(item => item.type === 'file_version')\n                .find(item => item.id === fileVersionId);\n\n            if (version) {\n                onVersionChange(version, {\n                    currentVersionId: currentFileVersionId,\n                    updateVersionToCurrent: () => history.push(getAnnotationsPath(currentFileVersionId)),\n                });\n            }\n        };\n\n        render() {\n            return <WrappedComponent ref={this.sidebarPanels} {...this.props} />;\n        }\n    }\n\n    const displayName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n    WithSidebarAnnotations.displayName = `WithSidebarAnnotations(${displayName})`;\n\n    return WithSidebarAnnotations;\n}\n"],"file":"withSidebarAnnotations.js"}