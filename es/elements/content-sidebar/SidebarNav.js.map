{"version":3,"sources":["../../../src/elements/content-sidebar/SidebarNav.js"],"names":["React","injectIntl","FormattedMessage","IconMagicWand","IconMetadataThick","IconDocInfo","IconChatRound","messages","SIDEBAR_NAV_TARGETS","SidebarNavButton","SidebarToggle","AdditionalTabs","SidebarNavTablist","SIDEBAR_VIEW_SKILLS","SIDEBAR_VIEW_ACTIVITY","SIDEBAR_VIEW_DETAILS","SIDEBAR_VIEW_METADATA","SidebarNav","additionalTabs","elementId","fileId","hasActivity","hasAdditionalTabs","hasDetails","hasMetadata","hasSkills","intl","isOpen","onNavigate","formatMessage","sidebarNavLabel","ACTIVITY","sidebarActivityTitle","DETAILS","sidebarDetailsTitle","SKILLS","sidebarSkillsTitle","METADATA","sidebarMetadataTitle"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Preview sidebar nav component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport IconMagicWand from '../../icons/general/IconMagicWand';\nimport IconMetadataThick from '../../icons/general/IconMetadataThick';\nimport IconDocInfo from '../../icons/general/IconDocInfo';\nimport IconChatRound from '../../icons/general/IconChatRound';\nimport messages from '../common/messages';\nimport { SIDEBAR_NAV_TARGETS } from '../common/interactionTargets';\nimport SidebarNavButton from './SidebarNavButton';\nimport SidebarToggle from './SidebarToggle';\nimport AdditionalTabs from './additional-tabs';\nimport SidebarNavTablist from './SidebarNavTablist';\nimport {\n    SIDEBAR_VIEW_SKILLS,\n    SIDEBAR_VIEW_ACTIVITY,\n    SIDEBAR_VIEW_DETAILS,\n    SIDEBAR_VIEW_METADATA,\n} from '../../constants';\nimport './SidebarNav.scss';\n\ntype Props = {\n    additionalTabs?: Array<AdditionalSidebarTab>,\n    elementId: string,\n    fileId: string,\n    hasActivity: boolean,\n    hasAdditionalTabs: boolean,\n    hasDetails: boolean,\n    hasMetadata: boolean,\n    hasSkills: boolean,\n    isOpen?: boolean,\n    onNavigate?: (SyntheticEvent<>, NavigateOptions) => void,\n} & InjectIntlProvidedProps;\n\nconst SidebarNav = ({\n    additionalTabs,\n    elementId,\n    fileId,\n    hasActivity,\n    hasAdditionalTabs,\n    hasDetails,\n    hasMetadata,\n    hasSkills,\n    intl,\n    isOpen,\n    onNavigate,\n}: Props) => (\n    <div className=\"bcs-SidebarNav\" aria-label={intl.formatMessage(messages.sidebarNavLabel)}>\n        <div className=\"bcs-SidebarNav-tabs\">\n            <SidebarNavTablist elementId={elementId} isOpen={isOpen} onNavigate={onNavigate}>\n                {hasActivity && (\n                    <SidebarNavButton\n                        data-resin-target={SIDEBAR_NAV_TARGETS.ACTIVITY}\n                        data-testid=\"sidebaractivity\"\n                        sidebarView={SIDEBAR_VIEW_ACTIVITY}\n                        tooltip={<FormattedMessage {...messages.sidebarActivityTitle} />}\n                    >\n                        <IconChatRound />\n                    </SidebarNavButton>\n                )}\n                {hasDetails && (\n                    <SidebarNavButton\n                        data-resin-target={SIDEBAR_NAV_TARGETS.DETAILS}\n                        data-testid=\"sidebardetails\"\n                        sidebarView={SIDEBAR_VIEW_DETAILS}\n                        tooltip={<FormattedMessage {...messages.sidebarDetailsTitle} />}\n                    >\n                        <IconDocInfo />\n                    </SidebarNavButton>\n                )}\n                {hasSkills && (\n                    <SidebarNavButton\n                        data-resin-target={SIDEBAR_NAV_TARGETS.SKILLS}\n                        data-testid=\"sidebarskills\"\n                        sidebarView={SIDEBAR_VIEW_SKILLS}\n                        tooltip={<FormattedMessage {...messages.sidebarSkillsTitle} />}\n                    >\n                        <IconMagicWand />\n                    </SidebarNavButton>\n                )}\n                {hasMetadata && (\n                    <SidebarNavButton\n                        data-resin-target={SIDEBAR_NAV_TARGETS.METADATA}\n                        data-testid=\"sidebarmetadata\"\n                        sidebarView={SIDEBAR_VIEW_METADATA}\n                        tooltip={<FormattedMessage {...messages.sidebarMetadataTitle} />}\n                    >\n                        <IconMetadataThick />\n                    </SidebarNavButton>\n                )}\n            </SidebarNavTablist>\n\n            {hasAdditionalTabs && (\n                <div className=\"bcs-SidebarNav-overflow\">\n                    <AdditionalTabs key={fileId} tabs={additionalTabs} />\n                </div>\n            )}\n        </div>\n        <div className=\"bcs-SidebarNav-footer\">\n            <SidebarToggle isOpen={isOpen} />\n        </div>\n    </div>\n);\n\nexport default injectIntl(SidebarNav);\n"],"file":"SidebarNav.js"}