{"version":3,"sources":["../../../src/elements/content-sidebar/SidebarNav.js"],"names":["React","injectIntl","AdditionalTabs","IconChatRound","IconDocInfo","IconMagicWand","IconMetadataThick","SidebarNavButton","SidebarNavSign","SidebarNavTablist","SidebarToggle","messages","SIDEBAR_NAV_TARGETS","SIDEBAR_VIEW_SKILLS","SIDEBAR_VIEW_ACTIVITY","SIDEBAR_VIEW_DETAILS","SIDEBAR_VIEW_METADATA","useFeatureConfig","SidebarNav","additionalTabs","elementId","fileId","hasActivity","hasAdditionalTabs","hasDetails","hasMetadata","hasSkills","intl","isOpen","onNavigate","hasBoxSign","enabled","onBoxSignClick","onClick","boxSignStatus","status","boxSignTargetingApi","targetingApi","formatMessage","sidebarNavLabel","ACTIVITY","sidebarActivityTitle","DETAILS","sidebarDetailsTitle","SKILLS","sidebarSkillsTitle","METADATA","sidebarMetadataTitle","SIGN"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Preview sidebar nav component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport type { InjectIntlProvidedProps } from 'react-intl';\nimport AdditionalTabs from './additional-tabs';\nimport IconChatRound from '../../icons/general/IconChatRound';\nimport IconDocInfo from '../../icons/general/IconDocInfo';\nimport IconMagicWand from '../../icons/general/IconMagicWand';\nimport IconMetadataThick from '../../icons/general/IconMetadataThick';\nimport SidebarNavButton from './SidebarNavButton';\nimport SidebarNavSign from './SidebarNavSign';\nimport SidebarNavTablist from './SidebarNavTablist';\nimport SidebarToggle from './SidebarToggle';\nimport messages from '../common/messages';\nimport { SIDEBAR_NAV_TARGETS } from '../common/interactionTargets';\nimport {\n    SIDEBAR_VIEW_SKILLS,\n    SIDEBAR_VIEW_ACTIVITY,\n    SIDEBAR_VIEW_DETAILS,\n    SIDEBAR_VIEW_METADATA,\n} from '../../constants';\nimport { useFeatureConfig } from '../common/feature-checking';\nimport type { NavigateOptions, AdditionalSidebarTab } from './flowTypes';\nimport './SidebarNav.scss';\n\ntype Props = {\n    additionalTabs?: Array<AdditionalSidebarTab>,\n    elementId: string,\n    fileId: string,\n    hasActivity: boolean,\n    hasAdditionalTabs: boolean,\n    hasDetails: boolean,\n    hasMetadata: boolean,\n    hasSkills: boolean,\n    isOpen?: boolean,\n    onNavigate?: (SyntheticEvent<>, NavigateOptions) => void,\n} & InjectIntlProvidedProps;\n\nconst SidebarNav = ({\n    additionalTabs,\n    elementId,\n    fileId,\n    hasActivity,\n    hasAdditionalTabs,\n    hasDetails,\n    hasMetadata,\n    hasSkills,\n    intl,\n    isOpen,\n    onNavigate,\n}: Props) => {\n    const {\n        enabled: hasBoxSign,\n        onClick: onBoxSignClick,\n        status: boxSignStatus,\n        targetingApi: boxSignTargetingApi,\n    } = useFeatureConfig('boxSign');\n\n    return (\n        <div className=\"bcs-SidebarNav\" aria-label={intl.formatMessage(messages.sidebarNavLabel)}>\n            <div className=\"bcs-SidebarNav-tabs\">\n                <SidebarNavTablist elementId={elementId} isOpen={isOpen} onNavigate={onNavigate}>\n                    {hasActivity && (\n                        <SidebarNavButton\n                            data-resin-target={SIDEBAR_NAV_TARGETS.ACTIVITY}\n                            data-testid=\"sidebaractivity\"\n                            sidebarView={SIDEBAR_VIEW_ACTIVITY}\n                            tooltip={intl.formatMessage(messages.sidebarActivityTitle)}\n                        >\n                            <IconChatRound />\n                        </SidebarNavButton>\n                    )}\n                    {hasDetails && (\n                        <SidebarNavButton\n                            data-resin-target={SIDEBAR_NAV_TARGETS.DETAILS}\n                            data-testid=\"sidebardetails\"\n                            sidebarView={SIDEBAR_VIEW_DETAILS}\n                            tooltip={intl.formatMessage(messages.sidebarDetailsTitle)}\n                        >\n                            <IconDocInfo />\n                        </SidebarNavButton>\n                    )}\n                    {hasSkills && (\n                        <SidebarNavButton\n                            data-resin-target={SIDEBAR_NAV_TARGETS.SKILLS}\n                            data-testid=\"sidebarskills\"\n                            sidebarView={SIDEBAR_VIEW_SKILLS}\n                            tooltip={intl.formatMessage(messages.sidebarSkillsTitle)}\n                        >\n                            <IconMagicWand />\n                        </SidebarNavButton>\n                    )}\n                    {hasMetadata && (\n                        <SidebarNavButton\n                            data-resin-target={SIDEBAR_NAV_TARGETS.METADATA}\n                            data-testid=\"sidebarmetadata\"\n                            sidebarView={SIDEBAR_VIEW_METADATA}\n                            tooltip={intl.formatMessage(messages.sidebarMetadataTitle)}\n                        >\n                            <IconMetadataThick />\n                        </SidebarNavButton>\n                    )}\n                </SidebarNavTablist>\n\n                {hasBoxSign && onBoxSignClick && (\n                    <div className=\"bcs-SidebarNav-secondary\">\n                        <SidebarNavSign\n                            data-resin-target={SIDEBAR_NAV_TARGETS.SIGN}\n                            onClick={() => onBoxSignClick({ fileId })}\n                            status={boxSignStatus}\n                            targetingApi={boxSignTargetingApi}\n                        />\n                    </div>\n                )}\n\n                {hasAdditionalTabs && (\n                    <div className=\"bcs-SidebarNav-overflow\">\n                        <AdditionalTabs key={fileId} tabs={additionalTabs} />\n                    </div>\n                )}\n            </div>\n            <div className=\"bcs-SidebarNav-footer\">\n                <SidebarToggle isOpen={isOpen} />\n            </div>\n        </div>\n    );\n};\nexport default injectIntl(SidebarNav);\n"],"file":"SidebarNav.js"}