{"version":3,"sources":["../../../../src/elements/content-sidebar/versions/VersionsSidebarContainer.js"],"names":["React","flow","getProp","merge","noop","generatePath","withRouter","API","messages","openUrlInsideIframe","VersionsSidebar","VersionsSidebarAPI","withAPIContext","VersionsSidebarContainer","isLoading","isWatermarked","versionCount","Infinity","versionLimit","versions","window","versionId","setState","api","deleteVersion","findVersion","then","fetchVersion","handleDeleteSuccess","props","onVersionDelete","catch","handleActionError","versionActionDeleteError","fetchDownloadUrl","onVersionDownload","versionActionDownloadError","updateVersion","onVersionPreview","promoteVersion","fetchData","handleFetchSuccess","handlePromoteSuccess","onVersionPromote","versionActionPromoteError","restoreVersion","handleRestoreSuccess","onVersionRestore","versionActionRestoreError","message","error","data","selectedVersionId","id","mergeResponse","updateVersionToCurrent","versionFetchError","fileResponse","versionsResponse","version_limit","undefined","versionsWithPermissions","getVersionsAPI","addPermissions","entries","total_count","sortVersions","verifyVersion","file","fileVersion","file_version","handleFetchError","state","find","version","newVersion","newVersionId","map","newVersions","mergeVersions","history","match","push","path","params","getCurrentVersionId","onVersionChange","selectedVersion","currentVersionId","initialize","prevFileId","fileId","prevVersionId","refresh","sort","a","b","Date","parse","created_at","parentName","handleActionDelete","handleActionDownload","handleActionPreview","handleActionPromote","handleActionRestore","Component"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Versions Sidebar container\n * @author Box\n */\n\nimport React from 'react';\nimport flow from 'lodash/flow';\nimport getProp from 'lodash/get';\nimport merge from 'lodash/merge';\nimport noop from 'lodash/noop';\nimport { generatePath, withRouter } from 'react-router-dom';\nimport type { Match, RouterHistory } from 'react-router-dom';\nimport type { MessageDescriptor } from 'react-intl';\nimport API from '../../../api';\nimport messages from './messages';\nimport openUrlInsideIframe from '../../../utils/iframe';\nimport VersionsSidebar from './VersionsSidebar';\nimport VersionsSidebarAPI from './VersionsSidebarAPI';\nimport { withAPIContext } from '../../common/api-context';\nimport type { VersionActionCallback, VersionChangeCallback } from './flowTypes';\nimport type { BoxItemVersion, BoxItem, FileVersions } from '../../../common/types/core';\n\ntype Props = {\n    api: API,\n    fileId: string,\n    hasSidebarInitialized?: boolean,\n    history: RouterHistory,\n    match: Match,\n    onVersionChange: VersionChangeCallback,\n    onVersionDelete: VersionActionCallback,\n    onVersionDownload: VersionActionCallback,\n    onVersionPreview: VersionActionCallback,\n    onVersionPromote: VersionActionCallback,\n    onVersionRestore: VersionActionCallback,\n    parentName: string,\n    versionId?: string,\n};\n\ntype State = {\n    error?: MessageDescriptor,\n    isLoading: boolean,\n    isWatermarked: boolean,\n    versionCount: number,\n    versionLimit: number,\n    versions: Array<BoxItemVersion>,\n};\n\nclass VersionsSidebarContainer extends React.Component<Props, State> {\n    static defaultProps = {\n        onVersionChange: noop,\n        onVersionDelete: noop,\n        onVersionDownload: noop,\n        onVersionPreview: noop,\n        onVersionPromote: noop,\n        onVersionRestore: noop,\n        parentName: '',\n    };\n\n    api: VersionsSidebarAPI;\n\n    props: Props;\n\n    state: State = {\n        isLoading: true,\n        isWatermarked: false,\n        versionCount: Infinity,\n        versionLimit: Infinity,\n        versions: [],\n    };\n\n    window: any = window;\n\n    componentDidMount() {\n        this.initialize();\n        this.fetchData();\n    }\n\n    componentDidUpdate({ fileId: prevFileId, versionId: prevVersionId }: Props) {\n        const { fileId, versionId } = this.props;\n\n        if (fileId !== prevFileId) {\n            this.refresh();\n        }\n\n        if (versionId !== prevVersionId) {\n            this.verifyVersion();\n        }\n    }\n\n    componentWillUnmount() {\n        // Reset the current version id since the wrapping route is no longer active\n        this.props.onVersionChange(null);\n    }\n\n    handleActionDelete = (versionId: string): Promise<void> => {\n        this.setState({ isLoading: true });\n\n        return this.api\n            .deleteVersion(this.findVersion(versionId))\n            .then(() => this.api.fetchVersion(versionId))\n            .then(this.handleDeleteSuccess)\n            .then(() => this.props.onVersionDelete(versionId))\n            .catch(() => this.handleActionError(messages.versionActionDeleteError));\n    };\n\n    handleActionDownload = (versionId: string): Promise<void> => {\n        return this.api\n            .fetchDownloadUrl(this.findVersion(versionId))\n            .then(openUrlInsideIframe)\n            .then(() => this.props.onVersionDownload(versionId))\n            .catch(() => this.handleActionError(messages.versionActionDownloadError));\n    };\n\n    handleActionPreview = (versionId: string): void => {\n        this.updateVersion(versionId);\n        this.props.onVersionPreview(versionId);\n    };\n\n    handleActionPromote = (versionId: string): Promise<void> => {\n        this.setState({ isLoading: true });\n\n        return this.api\n            .promoteVersion(this.findVersion(versionId))\n            .then(this.api.fetchData)\n            .then(this.handleFetchSuccess)\n            .then(this.handlePromoteSuccess)\n            .then(() => this.props.onVersionPromote(versionId))\n            .catch(() => this.handleActionError(messages.versionActionPromoteError));\n    };\n\n    handleActionRestore = (versionId: string): Promise<void> => {\n        this.setState({ isLoading: true });\n\n        return this.api\n            .restoreVersion(this.findVersion(versionId))\n            .then(() => this.api.fetchVersion(versionId))\n            .then(this.handleRestoreSuccess)\n            .then(() => this.props.onVersionRestore(versionId))\n            .catch(() => this.handleActionError(messages.versionActionRestoreError));\n    };\n\n    handleActionError = (message: MessageDescriptor): void => {\n        this.setState({\n            error: message,\n            isLoading: false,\n        });\n    };\n\n    handleDeleteSuccess = (data: BoxItemVersion): void => {\n        const { versionId: selectedVersionId } = this.props;\n        const { id: versionId } = data;\n\n        this.mergeResponse(data);\n\n        // Bump the user to the current version if they deleted their selected version\n        if (versionId === selectedVersionId) {\n            this.updateVersionToCurrent();\n        }\n    };\n\n    handleRestoreSuccess = (data: BoxItemVersion): void => {\n        this.mergeResponse(data);\n    };\n\n    handleFetchError = (): void => {\n        this.setState({\n            error: messages.versionFetchError,\n            isLoading: false,\n            isWatermarked: false,\n            versionCount: 0,\n            versions: [],\n        });\n    };\n\n    handleFetchSuccess = ([fileResponse, versionsResponse]): [BoxItem, FileVersions] => {\n        const { api } = this.props;\n        const { version_limit } = fileResponse;\n        const isWatermarked = getProp(fileResponse, 'watermark_info.is_watermarked', false);\n        const versionLimit = version_limit !== null && version_limit !== undefined ? version_limit : Infinity;\n        const versionsWithPermissions = api.getVersionsAPI(false).addPermissions(versionsResponse, fileResponse) || {};\n        const { entries: versions, total_count: versionCount } = versionsWithPermissions;\n\n        this.setState(\n            {\n                error: undefined,\n                isLoading: false,\n                isWatermarked,\n                versionCount,\n                versionLimit,\n                versions: this.sortVersions(versions),\n            },\n            this.verifyVersion,\n        );\n\n        return [fileResponse, versionsResponse];\n    };\n\n    handlePromoteSuccess = ([file]: [BoxItem, FileVersions]): void => {\n        const { file_version: fileVersion } = file;\n\n        if (fileVersion) {\n            this.updateVersion(fileVersion.id);\n        }\n    };\n\n    initialize = (): void => {\n        this.api = new VersionsSidebarAPI(this.props);\n    };\n\n    fetchData = (): void => {\n        this.api\n            .fetchData()\n            .then(this.handleFetchSuccess)\n            .catch(this.handleFetchError);\n    };\n\n    findVersion = (versionId: ?string): ?BoxItemVersion => {\n        const { versions } = this.state;\n\n        return versions.find(version => version.id === versionId);\n    };\n\n    getCurrentVersionId = (): ?string => {\n        const { versions } = this.state;\n        return versions[0] ? versions[0].id : null;\n    };\n\n    mergeVersions = (newVersion: BoxItemVersion): Array<BoxItemVersion> => {\n        const { versions } = this.state;\n        const newVersionId = newVersion ? newVersion.id : '';\n        return versions.map(version => (version.id === newVersionId ? merge({ ...version }, newVersion) : version));\n    };\n\n    mergeResponse = (data: BoxItemVersion): void => {\n        const newVersions = this.mergeVersions(data);\n\n        this.setState({\n            error: undefined,\n            isLoading: false,\n            versions: newVersions,\n        });\n    };\n\n    refresh(): void {\n        this.initialize();\n        this.setState({ isLoading: true }, this.fetchData);\n    }\n\n    sortVersions(versions?: Array<BoxItemVersion> = []): Array<BoxItemVersion> {\n        return [...versions].sort((a, b) => Date.parse(b.created_at) - Date.parse(a.created_at));\n    }\n\n    updateVersion = (versionId?: ?string): void => {\n        const { history, match } = this.props;\n        return history.push(generatePath(match.path, { ...match.params, versionId }));\n    };\n\n    updateVersionToCurrent = (): void => {\n        this.updateVersion(this.getCurrentVersionId());\n    };\n\n    verifyVersion = () => {\n        const { onVersionChange, versionId } = this.props;\n        const selectedVersion = this.findVersion(versionId);\n\n        if (selectedVersion) {\n            onVersionChange(selectedVersion, {\n                currentVersionId: this.getCurrentVersionId(),\n                updateVersionToCurrent: this.updateVersionToCurrent,\n            });\n        } else {\n            this.updateVersionToCurrent();\n        }\n    };\n\n    render() {\n        const { fileId, parentName } = this.props;\n\n        return (\n            <VersionsSidebar\n                fileId={fileId}\n                onDelete={this.handleActionDelete}\n                onDownload={this.handleActionDownload}\n                onPreview={this.handleActionPreview}\n                onPromote={this.handleActionPromote}\n                onRestore={this.handleActionRestore}\n                parentName={parentName}\n                {...this.state}\n            />\n        );\n    }\n}\n\nexport type VersionsSidebarProps = Props;\nexport default flow([withRouter, withAPIContext])(VersionsSidebarContainer);\n"],"file":"VersionsSidebarContainer.js"}