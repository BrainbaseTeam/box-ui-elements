{"version":3,"sources":["../../../../src/elements/content-sidebar/versions/VersionsSidebarAPI.js"],"names":["API","FILE_VERSION_FIELDS_TO_FETCH","VersionsSidebarAPI","api","fileId","Promise","all","fetchFile","fetchVersions","then","fetchVersionCurrent","version","resolve","reject","Error","getFileAPI","getDownloadUrl","getFile","fields","forceFetch","getVersionsAPI","getVersions","fileResponse","versionsResponse","file_version","getVersion","id","currentVersionResponse","addCurrentVersion","versionId","permissions","deleteVersion","successCallback","errorCallback","promoteVersion","restoreVersion"],"mappings":";;;;;;;;;;;;AAAA;;;;;AAKA,OAAOA,GAAP,MAAgB,cAAhB;AACA,SAASC,4BAAT,QAA6C,uBAA7C;;IAKqBC,kB,GAKjB,kCAA2D;AAAA;;AAAA,MAA7CC,GAA6C,QAA7CA,GAA6C;AAAA,MAAxCC,MAAwC,QAAxCA,MAAwC;;AAAA;;AAAA,qCAK/C,YAA6B;AACrC,WAAOC,OAAO,CAACC,GAAR,CAAY,CAAC,KAAI,CAACC,SAAL,EAAD,EAAmB,KAAI,CAACC,aAAL,EAAnB,CAAZ,EAAsDC,IAAtD,CAA2D,KAAI,CAACC,mBAAhE,CAAP;AACH,GAP0D;;AAAA,4CASxC,UAACC,OAAD,EAA+C;AAC9D,WAAO,IAAIN,OAAJ,CAAY,UAACO,OAAD,EAAUC,MAAV,EAAqB;AACpC,UAAI,CAACF,OAAL,EAAc;AACV,eAAOE,MAAM,CAAC,IAAIC,KAAJ,CAAU,kCAAV,CAAD,CAAb;AACH;;AAED,aAAO,KAAI,CAACX,GAAL,CAASY,UAAT,GAAsBC,cAAtB,CAAqC,KAAI,CAACZ,MAA1C,EAAkDO,OAAlD,EAA2DC,OAA3D,EAAoEC,MAApE,CAAP;AACH,KANM,CAAP;AAOH,GAjB0D;;AAAA,qCAmB/C,YAAwB;AAChC,WAAO,IAAIR,OAAJ,CAAY,UAACO,OAAD,EAAUC,MAAV;AAAA,aACf,KAAI,CAACV,GAAL,CAASY,UAAT,GAAsBE,OAAtB,CAA8B,KAAI,CAACb,MAAnC,EAA2CQ,OAA3C,EAAoDC,MAApD,EAA4D;AACxDK,QAAAA,MAAM,EAAEjB,4BADgD;AAExDkB,QAAAA,UAAU,EAAE;AAF4C,OAA5D,CADe;AAAA,KAAZ,CAAP;AAMH,GA1B0D;;AAAA,yCA4B3C,YAA6B;AACzC,WAAO,IAAId,OAAJ,CAAY,UAACO,OAAD,EAAUC,MAAV;AAAA,aACf,KAAI,CAACV,GAAL,CAASiB,cAAT,CAAwB,KAAxB,EAA+BC,WAA/B,CAA2C,KAAI,CAACjB,MAAhD,EAAwDQ,OAAxD,EAAiEC,MAAjE,CADe;AAAA,KAAZ,CAAP;AAGH,GAhC0D;;AAAA,+CAkCrC,iBAA2E;AAAA;AAAA,QAAzES,YAAyE;AAAA,QAA3DC,gBAA2D;;AAAA,gCAC/DD,YAD+D,CACrFE,YADqF;AAAA,QACrFA,YADqF,sCACtE,EADsE;AAG7F,WAAO,IAAInB,OAAJ,CAAY,UAACO,OAAD,EAAUC,MAAV;AAAA,aACf,KAAI,CAACV,GAAL,CAASiB,cAAT,CAAwB,KAAxB,EAA+BK,UAA/B,CACI,KAAI,CAACrB,MADT,EAEIoB,YAAY,CAACE,EAFjB,EAGI,UAACC,sBAAD,EAA4C;AACxCf,QAAAA,OAAO,CAAC,CACJU,YADI,EAEJ,KAAI,CAACnB,GAAL,CACKiB,cADL,CACoB,KADpB,EAEKQ,iBAFL,CAEuBD,sBAFvB,EAE+CJ,gBAF/C,EAEiED,YAFjE,CAFI,CAAD,CAAP;AAMH,OAVL,EAWIT,MAXJ,CADe;AAAA,KAAZ,CAAP;AAeH,GApD0D;;AAAA,wCAsD5C,UAACgB,SAAD,EAAgD;AAC3D,WAAO,IAAIxB,OAAJ,CAAY,UAACO,OAAD,EAAUC,MAAV;AAAA,aACf,KAAI,CAACV,GAAL,CAASiB,cAAT,CAAwB,KAAxB,EAA+BK,UAA/B,CAA0C,KAAI,CAACrB,MAA/C,EAAuDyB,SAAvD,EAAkEjB,OAAlE,EAA2EC,MAA3E,CADe;AAAA,KAAZ,CAAP;AAGH,GA1D0D;;AAAA,yCA4D3C,UAACF,OAAD,EAA6C;AAAA,gBACbA,OAAO,IAAI,EADE;AAAA,QAC7CkB,SAD6C,SACjDH,EADiD;AAAA,kCAClCI,WADkC;AAAA,QAClCA,WADkC,kCACpB,EADoB;;AAGzD,WAAO,IAAIzB,OAAJ,CAAY,UAACO,OAAD,EAAUC,MAAV;AAAA,aACf,KAAI,CAACV,GAAL,CAASiB,cAAT,CAAwB,KAAxB,EAA+BW,aAA/B,CAA6C;AACzC3B,QAAAA,MAAM,EAAE,KAAI,CAACA,MAD4B;AAEzC0B,QAAAA,WAAW,EAAXA,WAFyC;AAGzCE,QAAAA,eAAe,EAAEpB,OAHwB;AAIzCqB,QAAAA,aAAa,EAAEpB,MAJ0B;AAKzCgB,QAAAA,SAAS,EAATA;AALyC,OAA7C,CADe;AAAA,KAAZ,CAAP;AASH,GAxE0D;;AAAA,0CA0E1C,UAAClB,OAAD,EAAuD;AAAA,gBACxBA,OAAO,IAAI,EADa;AAAA,QACxDkB,SADwD,SAC5DH,EAD4D;AAAA,kCAC7CI,WAD6C;AAAA,QAC7CA,WAD6C,kCAC/B,EAD+B;;AAGpE,WAAO,IAAIzB,OAAJ,CAAY,UAACO,OAAD,EAAUC,MAAV;AAAA,aACf,KAAI,CAACV,GAAL,CAASiB,cAAT,CAAwB,KAAxB,EAA+Bc,cAA/B,CAA8C;AAC1C9B,QAAAA,MAAM,EAAE,KAAI,CAACA,MAD6B;AAE1C0B,QAAAA,WAAW,EAAXA,WAF0C;AAG1CE,QAAAA,eAAe,EAAEpB,OAHyB;AAI1CqB,QAAAA,aAAa,EAAEpB,MAJ2B;AAK1CgB,QAAAA,SAAS,EAATA;AAL0C,OAA9C,CADe;AAAA,KAAZ,CAAP;AASH,GAtF0D;;AAAA,0CAwF1C,UAAClB,OAAD,EAA4C;AAAA,gBACbA,OAAO,IAAI,EADE;AAAA,QAC7CkB,SAD6C,SACjDH,EADiD;AAAA,kCAClCI,WADkC;AAAA,QAClCA,WADkC,kCACpB,EADoB;;AAGzD,WAAO,IAAIzB,OAAJ,CAAY,UAACO,OAAD,EAAUC,MAAV;AAAA,aACf,KAAI,CAACV,GAAL,CAASiB,cAAT,CAAwB,KAAxB,EAA+Be,cAA/B,CAA8C;AAC1C/B,QAAAA,MAAM,EAAE,KAAI,CAACA,MAD6B;AAE1C0B,QAAAA,WAAW,EAAXA,WAF0C;AAG1CE,QAAAA,eAAe,EAAEpB,OAHyB;AAI1CqB,QAAAA,aAAa,EAAEpB,MAJ2B;AAK1CgB,QAAAA,SAAS,EAATA;AAL0C,OAA9C,CADe;AAAA,KAAZ,CAAP;AASH,GApG0D;;AACvD,OAAK1B,GAAL,GAAWA,GAAX;AACA,OAAKC,MAAL,GAAcA,MAAd;AACH,C;;SARgBF,kB","sourcesContent":["/**\n * @flow\n * @file Versions Sidebar API Helper\n * @author Box\n */\nimport API from '../../../api';\nimport { FILE_VERSION_FIELDS_TO_FETCH } from '../../../utils/fields';\nimport type { BoxItem, FileVersions, BoxItemVersion } from '../../../common/types/core';\n\nexport type fetchPayload = [BoxItem, FileVersions];\n\nexport default class VersionsSidebarAPI {\n    api: API;\n\n    fileId: string;\n\n    constructor({ api, fileId }: { api: API, fileId: string }) {\n        this.api = api;\n        this.fileId = fileId;\n    }\n\n    fetchData = (): Promise<fetchPayload> => {\n        return Promise.all([this.fetchFile(), this.fetchVersions()]).then(this.fetchVersionCurrent);\n    };\n\n    fetchDownloadUrl = (version: ?BoxItemVersion): Promise<string> => {\n        return new Promise((resolve, reject) => {\n            if (!version) {\n                return reject(new Error('Could not find requested version'));\n            }\n\n            return this.api.getFileAPI().getDownloadUrl(this.fileId, version, resolve, reject);\n        });\n    };\n\n    fetchFile = (): Promise<BoxItem> => {\n        return new Promise((resolve, reject) =>\n            this.api.getFileAPI().getFile(this.fileId, resolve, reject, {\n                fields: FILE_VERSION_FIELDS_TO_FETCH,\n                forceFetch: true,\n            }),\n        );\n    };\n\n    fetchVersions = (): Promise<FileVersions> => {\n        return new Promise((resolve, reject) =>\n            this.api.getVersionsAPI(false).getVersions(this.fileId, resolve, reject),\n        );\n    };\n\n    fetchVersionCurrent = ([fileResponse, versionsResponse]: fetchPayload): Promise<fetchPayload> => {\n        const { file_version = {} } = fileResponse;\n\n        return new Promise((resolve, reject) =>\n            this.api.getVersionsAPI(false).getVersion(\n                this.fileId,\n                file_version.id,\n                (currentVersionResponse: BoxItemVersion) => {\n                    resolve([\n                        fileResponse,\n                        this.api\n                            .getVersionsAPI(false)\n                            .addCurrentVersion(currentVersionResponse, versionsResponse, fileResponse),\n                    ]);\n                },\n                reject,\n            ),\n        );\n    };\n\n    fetchVersion = (versionId: string): Promise<BoxItemVersion> => {\n        return new Promise((resolve, reject) =>\n            this.api.getVersionsAPI(false).getVersion(this.fileId, versionId, resolve, reject),\n        );\n    };\n\n    deleteVersion = (version: ?BoxItemVersion): Promise<null> => {\n        const { id: versionId, permissions = {} } = version || {};\n\n        return new Promise((resolve, reject) =>\n            this.api.getVersionsAPI(false).deleteVersion({\n                fileId: this.fileId,\n                permissions,\n                successCallback: resolve,\n                errorCallback: reject,\n                versionId,\n            }),\n        );\n    };\n\n    promoteVersion = (version: ?BoxItemVersion): Promise<BoxItemVersion> => {\n        const { id: versionId, permissions = {} } = version || {};\n\n        return new Promise((resolve, reject) =>\n            this.api.getVersionsAPI(false).promoteVersion({\n                fileId: this.fileId,\n                permissions,\n                successCallback: resolve,\n                errorCallback: reject,\n                versionId,\n            }),\n        );\n    };\n\n    restoreVersion = (version: ?BoxItemVersion): Promise<any> => {\n        const { id: versionId, permissions = {} } = version || {};\n\n        return new Promise((resolve, reject) =>\n            this.api.getVersionsAPI(false).restoreVersion({\n                fileId: this.fileId,\n                permissions,\n                successCallback: resolve,\n                errorCallback: reject,\n                versionId,\n            }),\n        );\n    };\n}\n"],"file":"VersionsSidebarAPI.js"}