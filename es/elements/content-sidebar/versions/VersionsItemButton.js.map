{"version":3,"sources":["../../../../src/elements/content-sidebar/versions/VersionsItemButton.js"],"names":["React","classNames","PlainButton","scrollIntoView","VersionsItemButton","buttonRef","isSelected","props","setScroll","prevIsSelected","children","fileId","isCurrent","isDisabled","onClick","buttonClassName","setButtonRef","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAMA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,OAAO,2BAAP;;IAWMC,kB;;;;;;;;;;;;;;;;;;mEAqBa,UAACC,SAAD,EAAyC;AACpD,YAAKA,SAAL,GAAiBA,SAAjB;AACH,K;;gEAEW,YAAM;AAAA,UACNC,UADM,GACS,MAAKC,KADd,CACND,UADM;;AAGd,UAAI,MAAKD,SAAL,IAAkBC,UAAtB,EAAkC;AAC9BH,QAAAA,cAAc,CAAC,MAAKE,SAAN,CAAd;AACH;AACJ,K;;;;;;;wCAtBmB;AAChB,WAAKG,SAAL;AACH;;;6CAEyD;AAAA,UAAzBC,cAAyB,QAArCH,UAAqC;AAAA,UAC9CA,UAD8C,GAC/B,KAAKC,KAD0B,CAC9CD,UAD8C;;AAGtD,UAAIA,UAAU,KAAKG,cAAnB,EAAmC;AAC/B,aAAKD,SAAL;AACH;AACJ;;;6BAcQ;AAAA,wBACoE,KAAKD,KADzE;AAAA,UACGG,QADH,eACGA,QADH;AAAA,UACaC,MADb,eACaA,MADb;AAAA,UACqBC,SADrB,eACqBA,SADrB;AAAA,UACgCC,UADhC,eACgCA,UADhC;AAAA,UAC4CP,UAD5C,eAC4CA,UAD5C;AAAA,UACwDQ,OADxD,eACwDA,OADxD;AAEL,UAAMC,eAAe,GAAGd,UAAU,CAAC,wBAAD,EAA2B;AACzD,2BAAmBY,UADsC;AAEzD,2BAAmBP,UAAU,IAAI,CAACO;AAFuB,OAA3B,CAAlC;AAKA,aACI,oBAAC,WAAD;AACI,yBAAeA,UADnB;AAEI,QAAA,SAAS,EAAEE,eAFf;AAGI,gCAAsBH,SAH1B;AAII,6BAAmBD,MAJvB;AAKI,6BAAkB,QALtB;AAMI,uBAAY,sBANhB;AAOI,QAAA,SAAS,EAAE,KAAKK,YAPpB;AAQI,QAAA,UAAU,EAAEH,UARhB;AASI,QAAA,OAAO,EAAEC,OATb;AAUI,QAAA,IAAI,EAAC;AAVT,SAYKJ,QAZL,CADJ;AAgBH;;;;EAxD4BV,KAAK,CAACiB,S;;gBAAjCb,kB,kBACoB;AAClBQ,EAAAA,SAAS,EAAE,KADO;AAElBC,EAAAA,UAAU,EAAE,KAFM;AAGlBP,EAAAA,UAAU,EAAE;AAHM,C;;AA0D1B,eAAeF,kBAAf","sourcesContent":["/**\n * @flow\n * @file Versions Item Button component\n * @author Box\n */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport PlainButton from '../../../components/plain-button';\nimport { scrollIntoView } from '../../../utils/dom';\nimport './VersionsItemButton.scss';\n\ntype Props = {\n    children: React.Node,\n    fileId: string,\n    isCurrent: boolean,\n    isDisabled: boolean,\n    isSelected: boolean,\n    onClick: (event: SyntheticMouseEvent<HTMLButtonElement>) => void,\n};\n\nclass VersionsItemButton extends React.Component<Props> {\n    static defaultProps = {\n        isCurrent: false,\n        isDisabled: false,\n        isSelected: false,\n    };\n\n    buttonRef: ?HTMLButtonElement;\n\n    componentDidMount() {\n        this.setScroll();\n    }\n\n    componentDidUpdate({ isSelected: prevIsSelected }: Props) {\n        const { isSelected } = this.props;\n\n        if (isSelected !== prevIsSelected) {\n            this.setScroll();\n        }\n    }\n\n    setButtonRef = (buttonRef: ?HTMLButtonElement): void => {\n        this.buttonRef = buttonRef;\n    };\n\n    setScroll = () => {\n        const { isSelected } = this.props;\n\n        if (this.buttonRef && isSelected) {\n            scrollIntoView(this.buttonRef);\n        }\n    };\n\n    render() {\n        const { children, fileId, isCurrent, isDisabled, isSelected, onClick } = this.props;\n        const buttonClassName = classNames('bcs-VersionsItemButton', {\n            'bcs-is-disabled': isDisabled,\n            'bcs-is-selected': isSelected && !isDisabled,\n        });\n\n        return (\n            <PlainButton\n                aria-disabled={isDisabled}\n                className={buttonClassName}\n                data-resin-iscurrent={isCurrent}\n                data-resin-itemid={fileId}\n                data-resin-target=\"select\"\n                data-testid=\"versions-item-button\"\n                getDOMRef={this.setButtonRef}\n                isDisabled={isDisabled}\n                onClick={onClick}\n                type=\"button\"\n            >\n                {children}\n            </PlainButton>\n        );\n    }\n}\n\nexport default VersionsItemButton;\n"],"file":"VersionsItemButton.js"}