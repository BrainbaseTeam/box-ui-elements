{"version":3,"sources":["../../../../src/elements/content-sidebar/additional-tabs/AdditionalTab.js"],"names":["React","classNames","FormattedMessage","bdlGray50","Tooltip","PlainButton","IconEllipsis","AdditionalTabPlaceholder","messages","BLOCKED_BY_SHEILD","AdditionalTab","isErrored","props","onImageLoad","setState","status","reason","blockedByShieldAccessPolicy","id","iconUrl","title","state","TabIcon","onImageError","callbackFn","callback","isLoading","rest","isDisabled","className","tooltipText","getDisabledReason","callbackData","getTabIcon","PureComponent"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Sidebar Additional Tab component\n * @author Box\n */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\n\nimport { bdlGray50 } from '../../../styles/variables';\nimport Tooltip from '../../common/Tooltip';\nimport PlainButton from '../../../components/plain-button/PlainButton';\nimport IconEllipsis from '../../../icons/general/IconEllipsis';\nimport AdditionalTabPlaceholder from './AdditionalTabPlaceholder';\nimport messages from './messages';\n\nimport './AdditionalTab.scss';\n\ntype Props = {\n    isLoading: boolean,\n    onImageLoad: () => void,\n    status?: string,\n} & AdditionalSidebarTab;\n\ntype State = {\n    isErrored: boolean,\n};\n\nconst BLOCKED_BY_SHEILD = 'BLOCKED_BY_SHIELD_ACCESS_POLICY';\n\nclass AdditionalTab extends React.PureComponent<Props, State> {\n    state = {\n        isErrored: false,\n    };\n\n    onImageError = () => {\n        this.props.onImageLoad();\n        this.setState({ isErrored: true });\n    };\n\n    isDisabled() {\n        const { status } = this.props;\n        return status === BLOCKED_BY_SHEILD;\n    }\n\n    getDisabledReason() {\n        let reason = '';\n        const { status } = this.props;\n        switch (status) {\n            case BLOCKED_BY_SHEILD:\n                reason = <FormattedMessage {...messages.blockedByShieldAccessPolicy} />;\n                break;\n            default:\n            // noop\n        }\n        return reason;\n    }\n\n    getTabIcon() {\n        const { id, iconUrl, onImageLoad, title } = this.props;\n        const { isErrored } = this.state;\n\n        let TabIcon;\n\n        if (isErrored) {\n            TabIcon = <AdditionalTabPlaceholder isLoading={false} />;\n        } else if (id && id > 0) {\n            TabIcon = (\n                <img\n                    className=\"bdl-AdditionalTab-icon\"\n                    src={iconUrl}\n                    onError={this.onImageError}\n                    onLoad={onImageLoad}\n                    alt={title}\n                />\n            );\n        } else {\n            TabIcon = <IconEllipsis color={bdlGray50} />;\n        }\n\n        return TabIcon;\n    }\n\n    render() {\n        const { callback: callbackFn, id, isLoading, iconUrl, onImageLoad, title, ...rest } = this.props;\n\n        const isDisabled = this.isDisabled();\n\n        const className = classNames('bdl-AdditionalTab', {\n            'bdl-is-hidden': isLoading,\n            'bdl-is-disabled': isDisabled,\n        });\n\n        const tooltipText = isDisabled ? this.getDisabledReason() : title;\n\n        return (\n            <Tooltip position=\"middle-left\" text={tooltipText}>\n                <PlainButton\n                    className={className}\n                    data-testid=\"additionaltab\"\n                    type=\"button\"\n                    isDisabled={isDisabled}\n                    onClick={() => callbackFn({ id, callbackData: rest })}\n                >\n                    {this.getTabIcon()}\n                </PlainButton>\n            </Tooltip>\n        );\n    }\n}\n\nexport default AdditionalTab;\n"],"file":"AdditionalTab.js"}