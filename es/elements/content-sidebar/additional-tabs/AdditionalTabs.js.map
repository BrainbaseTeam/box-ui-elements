{"version":3,"sources":["../../../../src/elements/content-sidebar/additional-tabs/AdditionalTabs.js"],"names":["React","PureComponent","AdditionalTab","AdditionalTabsLoading","AdditionalTabs","props","tabs","hasMoreTab","find","tab","id","iconUrl","numTabs","length","numLoadedTabs","setState","isLoading","state","map","tabData","onImageLoad"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAMA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AAGA,OAAO,uBAAP;;IAUMC,c;;;;;AAGF,0BAAYC,KAAZ,EAA0B;AAAA;;AAAA;;AACtB,wFAAMA,KAAN;;AADsB,oEAFF,CAEE;;AAAA,kEAWZ,YAAM;AAAA,UACRC,IADQ,GACC,MAAKD,KADN,CACRC,IADQ;;AAGhB,UAAI,CAACA,IAAL,EAAW;AACP;AACH;;AAED,UAAMC,UAAU,GAAGD,IAAI,CAACE,IAAL,CAAU,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,EAAJ,GAAS,CAAT,IAAc,CAACD,GAAG,CAACE,OAAvB;AAAA,OAAb,CAAnB;AACA,UAAMC,OAAO,GAAGN,IAAI,CAACO,MAAL,IAAeN,UAAU,GAAG,CAAH,GAAO,CAAhC,CAAhB;AAEA,YAAKO,aAAL,IAAsB,CAAtB;;AAEA,UAAI,MAAKA,aAAL,KAAuBF,OAA3B,EAAoC;AAChC,cAAKG,QAAL,CAAc;AACVC,UAAAA,SAAS,EAAE;AADD,SAAd;AAGH;AACJ,KA5ByB;;AAGtB,UAAKC,KAAL,GAAa;AAAED,MAAAA,SAAS,EAAE;AAAb,KAAb;AAHsB;AAIzB;AAED;;;;;;;;;6BAwBS;AAAA;;AAAA,UACGV,IADH,GACY,KAAKD,KADjB,CACGC,IADH;AAAA,UAEGU,SAFH,GAEiB,KAAKC,KAFtB,CAEGD,SAFH;AAIL,aACI;AAAK,QAAA,SAAS,EAAC;AAAf,SACKA,SAAS,IAAI,oBAAC,qBAAD,OADlB,EAEKV,IAAI,IACDA,IAAI,CAACY,GAAL,CAAS,UAAAC,OAAO;AAAA,eACZ,oBAAC,aAAD;AACI,UAAA,GAAG,EAAEA,OAAO,CAACT,EADjB;AAEI,UAAA,WAAW,EAAE,MAAI,CAACU,WAFtB;AAGI,UAAA,SAAS,EAAEJ;AAHf,WAIQG,OAJR,EADY;AAAA,OAAhB,CAHR,CADJ;AAcH;;;;EAnDwBlB,a;;AAsD7B,eAAeG,cAAf","sourcesContent":["/**\n * @flow\n * @file Preview sidebar additional tabs component\n * @author Box\n */\n\nimport React, { PureComponent } from 'react';\nimport AdditionalTab from './AdditionalTab';\nimport AdditionalTabsLoading from './AdditionalTabsLoading';\nimport type { AdditionalSidebarTab } from '../flowTypes';\n\nimport './AdditionalTabs.scss';\n\ntype Props = {\n    tabs?: Array<AdditionalSidebarTab>,\n};\n\ntype State = {\n    isLoading: boolean,\n};\n\nclass AdditionalTabs extends PureComponent<Props, State> {\n    numLoadedTabs: number = 0;\n\n    constructor(props: Props) {\n        super(props);\n\n        this.state = { isLoading: true };\n    }\n\n    /**\n     * Handles an individual icon image load\n     *\n     * @return {void}\n     */\n    onImageLoad = () => {\n        const { tabs } = this.props;\n\n        if (!tabs) {\n            return;\n        }\n\n        const hasMoreTab = tabs.find(tab => tab.id < 0 && !tab.iconUrl);\n        const numTabs = tabs.length - (hasMoreTab ? 1 : 0);\n\n        this.numLoadedTabs += 1;\n\n        if (this.numLoadedTabs === numTabs) {\n            this.setState({\n                isLoading: false,\n            });\n        }\n    };\n\n    render() {\n        const { tabs } = this.props;\n        const { isLoading } = this.state;\n\n        return (\n            <div className=\"bdl-AdditionalTabs\">\n                {isLoading && <AdditionalTabsLoading />}\n                {tabs &&\n                    tabs.map(tabData => (\n                        <AdditionalTab\n                            key={tabData.id}\n                            onImageLoad={this.onImageLoad}\n                            isLoading={isLoading}\n                            {...tabData}\n                        />\n                    ))}\n            </div>\n        );\n    }\n}\n\nexport default AdditionalTabs;\n"],"file":"AdditionalTabs.js"}