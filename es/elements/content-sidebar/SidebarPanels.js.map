{"version":3,"sources":["../../../src/elements/content-sidebar/SidebarPanels.js"],"names":["React","Redirect","Route","Switch","SidebarUtils","ORIGIN_ACTIVITY_SIDEBAR","ORIGIN_DETAILS_SIDEBAR","ORIGIN_METADATA_SIDEBAR","ORIGIN_SKILLS_SIDEBAR","ORIGIN_VERSIONS_SIDEBAR","SIDEBAR_VIEW_ACTIVITY","SIDEBAR_VIEW_DETAILS","SIDEBAR_VIEW_METADATA","SIDEBAR_VIEW_SKILLS","SIDEBAR_VIEW_VERSIONS","BASE_EVENT_NAME","MARK_NAME_JS_LOADING_DETAILS","MARK_NAME_JS_LOADING_ACTIVITY","MARK_NAME_JS_LOADING_SKILLS","MARK_NAME_JS_LOADING_METADATA","MARK_NAME_JS_LOADING_VERSIONS","URL_TO_FEED_ITEM_TYPE","comments","tasks","LoadableDetailsSidebar","getAsyncSidebarContent","LoadableActivitySidebar","LoadableSkillsSidebar","LoadableMetadataSidebar","LoadableVersionsSidebar","SidebarPanels","createRef","activitySidebar","current","detailsSidebar","metadataSidebar","versionsSidebar","refresh","props","activitySidebarProps","currentUser","detailsSidebarProps","elementId","file","fileId","getPreview","getViewer","hasActivity","hasDetails","hasMetadata","hasSkills","hasVersions","isOpen","metadataSidebarProps","onVersionChange","onVersionHistoryClick","versionsSidebarProps","id","match","matchEntryType","params","activeFeedEntryType","undefined","activeFeedEntryId","sidebar","versionId","redirect","pathname","state","silent","Component"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Content Sidebar Panels component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport SidebarUtils from './SidebarUtils';\nimport {\n    ORIGIN_ACTIVITY_SIDEBAR,\n    ORIGIN_DETAILS_SIDEBAR,\n    ORIGIN_METADATA_SIDEBAR,\n    ORIGIN_SKILLS_SIDEBAR,\n    ORIGIN_VERSIONS_SIDEBAR,\n    SIDEBAR_VIEW_ACTIVITY,\n    SIDEBAR_VIEW_DETAILS,\n    SIDEBAR_VIEW_METADATA,\n    SIDEBAR_VIEW_SKILLS,\n    SIDEBAR_VIEW_VERSIONS,\n} from '../../constants';\nimport type { DetailsSidebarProps } from './DetailsSidebar';\nimport type { ActivitySidebarProps } from './ActivitySidebar';\nimport type { MetadataSidebarProps } from './MetadataSidebar';\nimport type { VersionsSidebarProps } from './versions';\n\ntype Props = {\n    activitySidebarProps: ActivitySidebarProps,\n    currentUser?: User,\n    detailsSidebarProps: DetailsSidebarProps,\n    elementId: string,\n    file: BoxItem,\n    fileId: string,\n    getPreview: Function,\n    getViewer: Function,\n    hasActivity: boolean,\n    hasDetails: boolean,\n    hasMetadata: boolean,\n    hasSkills: boolean,\n    hasVersions: boolean,\n    isOpen: boolean,\n    metadataSidebarProps: MetadataSidebarProps,\n    onVersionChange?: Function,\n    onVersionHistoryClick?: Function,\n    versionsSidebarProps: VersionsSidebarProps,\n};\n\ntype ElementRefType = {\n    current: null | Object,\n};\n\n// TODO: place into code splitting logic\nconst BASE_EVENT_NAME = '_JS_LOADING';\nconst MARK_NAME_JS_LOADING_DETAILS = `${ORIGIN_DETAILS_SIDEBAR}${BASE_EVENT_NAME}`;\nconst MARK_NAME_JS_LOADING_ACTIVITY = `${ORIGIN_ACTIVITY_SIDEBAR}${BASE_EVENT_NAME}`;\nconst MARK_NAME_JS_LOADING_SKILLS = `${ORIGIN_SKILLS_SIDEBAR}${BASE_EVENT_NAME}`;\nconst MARK_NAME_JS_LOADING_METADATA = `${ORIGIN_METADATA_SIDEBAR}${BASE_EVENT_NAME}`;\nconst MARK_NAME_JS_LOADING_VERSIONS = `${ORIGIN_VERSIONS_SIDEBAR}${BASE_EVENT_NAME}`;\n\nconst URL_TO_FEED_ITEM_TYPE = { comments: 'comment', tasks: 'task' };\n\nconst LoadableDetailsSidebar = SidebarUtils.getAsyncSidebarContent(SIDEBAR_VIEW_DETAILS, MARK_NAME_JS_LOADING_DETAILS);\nconst LoadableActivitySidebar = SidebarUtils.getAsyncSidebarContent(\n    SIDEBAR_VIEW_ACTIVITY,\n    MARK_NAME_JS_LOADING_ACTIVITY,\n);\nconst LoadableSkillsSidebar = SidebarUtils.getAsyncSidebarContent(SIDEBAR_VIEW_SKILLS, MARK_NAME_JS_LOADING_SKILLS);\nconst LoadableMetadataSidebar = SidebarUtils.getAsyncSidebarContent(\n    SIDEBAR_VIEW_METADATA,\n    MARK_NAME_JS_LOADING_METADATA,\n);\nconst LoadableVersionsSidebar = SidebarUtils.getAsyncSidebarContent(\n    SIDEBAR_VIEW_VERSIONS,\n    MARK_NAME_JS_LOADING_VERSIONS,\n);\n\nclass SidebarPanels extends React.Component<Props> {\n    activitySidebar: ElementRefType = React.createRef();\n\n    detailsSidebar: ElementRefType = React.createRef();\n\n    metadataSidebar: ElementRefType = React.createRef();\n\n    versionsSidebar: ElementRefType = React.createRef();\n\n    /**\n     * Refreshes the contents of the active sidebar\n     * @returns {void}\n     */\n    refresh(): void {\n        const { current: activitySidebar } = this.activitySidebar;\n        const { current: detailsSidebar } = this.detailsSidebar;\n        const { current: metadataSidebar } = this.metadataSidebar;\n        const { current: versionsSidebar } = this.versionsSidebar;\n\n        if (activitySidebar) {\n            activitySidebar.refresh();\n        }\n\n        if (detailsSidebar) {\n            detailsSidebar.refresh();\n        }\n\n        if (metadataSidebar) {\n            metadataSidebar.refresh();\n        }\n\n        if (versionsSidebar) {\n            versionsSidebar.refresh();\n        }\n    }\n\n    render() {\n        const {\n            activitySidebarProps,\n            currentUser,\n            detailsSidebarProps,\n            elementId,\n            file,\n            fileId,\n            getPreview,\n            getViewer,\n            hasActivity,\n            hasDetails,\n            hasMetadata,\n            hasSkills,\n            hasVersions,\n            isOpen,\n            metadataSidebarProps,\n            onVersionChange,\n            onVersionHistoryClick,\n            versionsSidebarProps,\n        }: Props = this.props;\n\n        if (!isOpen || (!hasActivity && !hasDetails && !hasMetadata && !hasSkills && !hasVersions)) {\n            return null;\n        }\n\n        return (\n            <Switch>\n                {hasSkills && (\n                    <Route\n                        exact\n                        path={`/${SIDEBAR_VIEW_SKILLS}`}\n                        render={() => (\n                            <LoadableSkillsSidebar\n                                elementId={elementId}\n                                key={file.id}\n                                file={file}\n                                getPreview={getPreview}\n                                getViewer={getViewer}\n                                startMarkName={MARK_NAME_JS_LOADING_SKILLS}\n                            />\n                        )}\n                    />\n                )}\n                {/* This handles both the default activity sidebar and the activity sidebar with a\n                comment or task deeplink.  */}\n                {hasActivity && (\n                    <Route\n                        exact\n                        path={[\n                            `/${SIDEBAR_VIEW_ACTIVITY}`,\n                            `/${SIDEBAR_VIEW_ACTIVITY}/:activeFeedEntryType(comments|tasks)/:activeFeedEntryId?`,\n                        ]}\n                        render={({ match }) => {\n                            const matchEntryType = match.params.activeFeedEntryType;\n                            const activeFeedEntryType = matchEntryType\n                                ? URL_TO_FEED_ITEM_TYPE[matchEntryType]\n                                : undefined;\n                            return (\n                                <LoadableActivitySidebar\n                                    elementId={elementId}\n                                    currentUser={currentUser}\n                                    file={file}\n                                    onVersionHistoryClick={onVersionHistoryClick}\n                                    ref={this.activitySidebar}\n                                    startMarkName={MARK_NAME_JS_LOADING_ACTIVITY}\n                                    activeFeedEntryId={match.params.activeFeedEntryId}\n                                    activeFeedEntryType={activeFeedEntryType}\n                                    {...activitySidebarProps}\n                                />\n                            );\n                        }}\n                    />\n                )}\n                {hasDetails && (\n                    <Route\n                        exact\n                        path={`/${SIDEBAR_VIEW_DETAILS}`}\n                        render={() => (\n                            <LoadableDetailsSidebar\n                                elementId={elementId}\n                                fileId={fileId}\n                                key={fileId}\n                                hasVersions={hasVersions}\n                                onVersionHistoryClick={onVersionHistoryClick}\n                                ref={this.detailsSidebar}\n                                startMarkName={MARK_NAME_JS_LOADING_DETAILS}\n                                {...detailsSidebarProps}\n                            />\n                        )}\n                    />\n                )}\n                {hasMetadata && (\n                    <Route\n                        exact\n                        path={`/${SIDEBAR_VIEW_METADATA}`}\n                        render={() => (\n                            <LoadableMetadataSidebar\n                                elementId={elementId}\n                                fileId={fileId}\n                                ref={this.metadataSidebar}\n                                startMarkName={MARK_NAME_JS_LOADING_METADATA}\n                                {...metadataSidebarProps}\n                            />\n                        )}\n                    />\n                )}\n                {hasVersions && (\n                    <Route\n                        path=\"/:sidebar(activity|details)/versions/:versionId?\"\n                        render={({ match }) => (\n                            <LoadableVersionsSidebar\n                                fileId={fileId}\n                                key={fileId}\n                                onVersionChange={onVersionChange}\n                                parentName={match.params.sidebar}\n                                ref={this.versionsSidebar}\n                                versionId={match.params.versionId}\n                                {...versionsSidebarProps}\n                            />\n                        )}\n                    />\n                )}\n                <Route\n                    render={() => {\n                        let redirect = '';\n\n                        if (hasSkills) {\n                            redirect = SIDEBAR_VIEW_SKILLS;\n                        } else if (hasActivity) {\n                            redirect = SIDEBAR_VIEW_ACTIVITY;\n                        } else if (hasDetails) {\n                            redirect = SIDEBAR_VIEW_DETAILS;\n                        } else if (hasMetadata) {\n                            redirect = SIDEBAR_VIEW_METADATA;\n                        }\n\n                        return <Redirect to={{ pathname: `/${redirect}`, state: { silent: true } }} />;\n                    }}\n                />\n            </Switch>\n        );\n    }\n}\n\nexport default SidebarPanels;\n"],"file":"SidebarPanels.js"}