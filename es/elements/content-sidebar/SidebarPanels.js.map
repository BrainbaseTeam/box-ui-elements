{"version":3,"sources":["../../../src/elements/content-sidebar/SidebarPanels.js"],"names":["React","flow","Redirect","Route","Switch","SidebarUtils","withSidebarAnnotations","withAnnotatorContext","withAPIContext","withRouterAndRef","ORIGIN_ACTIVITY_SIDEBAR","ORIGIN_DETAILS_SIDEBAR","ORIGIN_METADATA_SIDEBAR","ORIGIN_SKILLS_SIDEBAR","ORIGIN_VERSIONS_SIDEBAR","SIDEBAR_VIEW_ACTIVITY","SIDEBAR_VIEW_DETAILS","SIDEBAR_VIEW_METADATA","SIDEBAR_VIEW_SKILLS","SIDEBAR_VIEW_VERSIONS","BASE_EVENT_NAME","MARK_NAME_JS_LOADING_DETAILS","MARK_NAME_JS_LOADING_ACTIVITY","MARK_NAME_JS_LOADING_SKILLS","MARK_NAME_JS_LOADING_METADATA","MARK_NAME_JS_LOADING_VERSIONS","URL_TO_FEED_ITEM_TYPE","annotations","comments","tasks","LoadableDetailsSidebar","getAsyncSidebarContent","LoadableActivitySidebar","LoadableSkillsSidebar","LoadableMetadataSidebar","LoadableVersionsSidebar","SidebarPanels","createRef","isInitialized","setState","shouldRefreshCache","activitySidebar","current","detailsSidebar","metadataSidebar","versionsSidebar","refresh","props","activitySidebarProps","currentUser","detailsSidebarProps","elementId","file","fileId","getPreview","getViewer","hasActivity","hasDetails","hasMetadata","hasSkills","hasVersions","isOpen","metadataSidebarProps","onAnnotationSelect","onVersionChange","onVersionHistoryClick","versionsSidebarProps","state","id","match","matchEntryType","params","activeFeedEntryType","undefined","activeFeedEntryId","sidebar","versionId","redirect","pathname","silent","Component","SidebarPanelsComponent"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Content Sidebar Panels component\n * @author Box\n */\n\nimport * as React from 'react';\nimport flow from 'lodash/flow';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport SidebarUtils from './SidebarUtils';\nimport withSidebarAnnotations from './withSidebarAnnotations';\nimport { withAnnotatorContext } from '../common/annotator-context';\nimport { withAPIContext } from '../common/api-context';\nimport { withRouterAndRef } from '../common/routing';\nimport {\n    ORIGIN_ACTIVITY_SIDEBAR,\n    ORIGIN_DETAILS_SIDEBAR,\n    ORIGIN_METADATA_SIDEBAR,\n    ORIGIN_SKILLS_SIDEBAR,\n    ORIGIN_VERSIONS_SIDEBAR,\n    SIDEBAR_VIEW_ACTIVITY,\n    SIDEBAR_VIEW_DETAILS,\n    SIDEBAR_VIEW_METADATA,\n    SIDEBAR_VIEW_SKILLS,\n    SIDEBAR_VIEW_VERSIONS,\n} from '../../constants';\nimport type { DetailsSidebarProps } from './DetailsSidebar';\nimport type { ActivitySidebarProps } from './ActivitySidebar';\nimport type { MetadataSidebarProps } from './MetadataSidebar';\nimport type { VersionsSidebarProps } from './versions';\nimport type { User, BoxItem } from '../../common/types/core';\n\ntype Props = {\n    activitySidebarProps: ActivitySidebarProps,\n    currentUser?: User,\n    detailsSidebarProps: DetailsSidebarProps,\n    elementId: string,\n    file: BoxItem,\n    fileId: string,\n    getPreview: Function,\n    getViewer: Function,\n    hasActivity: boolean,\n    hasDetails: boolean,\n    hasMetadata: boolean,\n    hasSkills: boolean,\n    hasVersions: boolean,\n    isOpen: boolean,\n    metadataSidebarProps: MetadataSidebarProps,\n    onAnnotationSelect?: Function,\n    onVersionChange?: Function,\n    onVersionHistoryClick?: Function,\n    versionsSidebarProps: VersionsSidebarProps,\n};\n\ntype State = {\n    isInitialized: boolean,\n};\n\ntype ElementRefType = {\n    current: null | Object,\n};\n\n// TODO: place into code splitting logic\nconst BASE_EVENT_NAME = '_JS_LOADING';\nconst MARK_NAME_JS_LOADING_DETAILS = `${ORIGIN_DETAILS_SIDEBAR}${BASE_EVENT_NAME}`;\nconst MARK_NAME_JS_LOADING_ACTIVITY = `${ORIGIN_ACTIVITY_SIDEBAR}${BASE_EVENT_NAME}`;\nconst MARK_NAME_JS_LOADING_SKILLS = `${ORIGIN_SKILLS_SIDEBAR}${BASE_EVENT_NAME}`;\nconst MARK_NAME_JS_LOADING_METADATA = `${ORIGIN_METADATA_SIDEBAR}${BASE_EVENT_NAME}`;\nconst MARK_NAME_JS_LOADING_VERSIONS = `${ORIGIN_VERSIONS_SIDEBAR}${BASE_EVENT_NAME}`;\n\nconst URL_TO_FEED_ITEM_TYPE = { annotations: 'annotation', comments: 'comment', tasks: 'task' };\n\nconst LoadableDetailsSidebar = SidebarUtils.getAsyncSidebarContent(SIDEBAR_VIEW_DETAILS, MARK_NAME_JS_LOADING_DETAILS);\nconst LoadableActivitySidebar = SidebarUtils.getAsyncSidebarContent(\n    SIDEBAR_VIEW_ACTIVITY,\n    MARK_NAME_JS_LOADING_ACTIVITY,\n);\nconst LoadableSkillsSidebar = SidebarUtils.getAsyncSidebarContent(SIDEBAR_VIEW_SKILLS, MARK_NAME_JS_LOADING_SKILLS);\nconst LoadableMetadataSidebar = SidebarUtils.getAsyncSidebarContent(\n    SIDEBAR_VIEW_METADATA,\n    MARK_NAME_JS_LOADING_METADATA,\n);\nconst LoadableVersionsSidebar = SidebarUtils.getAsyncSidebarContent(\n    SIDEBAR_VIEW_VERSIONS,\n    MARK_NAME_JS_LOADING_VERSIONS,\n);\n\nclass SidebarPanels extends React.Component<Props, State> {\n    activitySidebar: ElementRefType = React.createRef();\n\n    detailsSidebar: ElementRefType = React.createRef();\n\n    metadataSidebar: ElementRefType = React.createRef();\n\n    state: State = { isInitialized: false };\n\n    versionsSidebar: ElementRefType = React.createRef();\n\n    componentDidMount() {\n        this.setState({ isInitialized: true });\n    }\n\n    /**\n     * Refreshes the contents of the active sidebar\n     * @returns {void}\n     */\n    refresh(shouldRefreshCache: boolean = true): void {\n        const { current: activitySidebar } = this.activitySidebar;\n        const { current: detailsSidebar } = this.detailsSidebar;\n        const { current: metadataSidebar } = this.metadataSidebar;\n        const { current: versionsSidebar } = this.versionsSidebar;\n\n        if (activitySidebar) {\n            activitySidebar.refresh(shouldRefreshCache);\n        }\n\n        if (detailsSidebar) {\n            detailsSidebar.refresh();\n        }\n\n        if (metadataSidebar) {\n            metadataSidebar.refresh();\n        }\n\n        if (versionsSidebar) {\n            versionsSidebar.refresh();\n        }\n    }\n\n    render() {\n        const {\n            activitySidebarProps,\n            currentUser,\n            detailsSidebarProps,\n            elementId,\n            file,\n            fileId,\n            getPreview,\n            getViewer,\n            hasActivity,\n            hasDetails,\n            hasMetadata,\n            hasSkills,\n            hasVersions,\n            isOpen,\n            metadataSidebarProps,\n            onAnnotationSelect,\n            onVersionChange,\n            onVersionHistoryClick,\n            versionsSidebarProps,\n        }: Props = this.props;\n\n        const { isInitialized } = this.state;\n\n        if (!isOpen || (!hasActivity && !hasDetails && !hasMetadata && !hasSkills && !hasVersions)) {\n            return null;\n        }\n\n        return (\n            <Switch>\n                {hasSkills && (\n                    <Route\n                        exact\n                        path={`/${SIDEBAR_VIEW_SKILLS}`}\n                        render={() => (\n                            <LoadableSkillsSidebar\n                                elementId={elementId}\n                                key={file.id}\n                                file={file}\n                                getPreview={getPreview}\n                                getViewer={getViewer}\n                                hasSidebarInitialized={isInitialized}\n                                startMarkName={MARK_NAME_JS_LOADING_SKILLS}\n                            />\n                        )}\n                    />\n                )}\n                {/* This handles both the default activity sidebar and the activity sidebar with a\n                comment or task deeplink.  */}\n                {hasActivity && (\n                    <Route\n                        exact\n                        path={[\n                            `/${SIDEBAR_VIEW_ACTIVITY}`,\n                            `/${SIDEBAR_VIEW_ACTIVITY}/:activeFeedEntryType(annotations)/:fileVersionId/:activeFeedEntryId?`,\n                            `/${SIDEBAR_VIEW_ACTIVITY}/:activeFeedEntryType(comments|tasks)/:activeFeedEntryId?`,\n                        ]}\n                        render={({ match }) => {\n                            const matchEntryType = match.params.activeFeedEntryType;\n                            const activeFeedEntryType = matchEntryType\n                                ? URL_TO_FEED_ITEM_TYPE[matchEntryType]\n                                : undefined;\n                            return (\n                                <LoadableActivitySidebar\n                                    elementId={elementId}\n                                    currentUser={currentUser}\n                                    file={file}\n                                    hasSidebarInitialized={isInitialized}\n                                    onAnnotationSelect={onAnnotationSelect}\n                                    onVersionChange={onVersionChange}\n                                    onVersionHistoryClick={onVersionHistoryClick}\n                                    ref={this.activitySidebar}\n                                    startMarkName={MARK_NAME_JS_LOADING_ACTIVITY}\n                                    activeFeedEntryId={match.params.activeFeedEntryId}\n                                    activeFeedEntryType={match.params.activeFeedEntryId && activeFeedEntryType}\n                                    {...activitySidebarProps}\n                                />\n                            );\n                        }}\n                    />\n                )}\n                {hasDetails && (\n                    <Route\n                        exact\n                        path={`/${SIDEBAR_VIEW_DETAILS}`}\n                        render={() => (\n                            <LoadableDetailsSidebar\n                                elementId={elementId}\n                                fileId={fileId}\n                                hasSidebarInitialized={isInitialized}\n                                key={fileId}\n                                hasVersions={hasVersions}\n                                onVersionHistoryClick={onVersionHistoryClick}\n                                ref={this.detailsSidebar}\n                                startMarkName={MARK_NAME_JS_LOADING_DETAILS}\n                                {...detailsSidebarProps}\n                            />\n                        )}\n                    />\n                )}\n                {hasMetadata && (\n                    <Route\n                        exact\n                        path={`/${SIDEBAR_VIEW_METADATA}`}\n                        render={() => (\n                            <LoadableMetadataSidebar\n                                elementId={elementId}\n                                fileId={fileId}\n                                hasSidebarInitialized={isInitialized}\n                                ref={this.metadataSidebar}\n                                startMarkName={MARK_NAME_JS_LOADING_METADATA}\n                                {...metadataSidebarProps}\n                            />\n                        )}\n                    />\n                )}\n                {hasVersions && (\n                    <Route\n                        path=\"/:sidebar(activity|details)/versions/:versionId?\"\n                        render={({ match }) => (\n                            <LoadableVersionsSidebar\n                                fileId={fileId}\n                                hasSidebarInitialized={isInitialized}\n                                key={fileId}\n                                onVersionChange={onVersionChange}\n                                parentName={match.params.sidebar}\n                                ref={this.versionsSidebar}\n                                versionId={match.params.versionId}\n                                {...versionsSidebarProps}\n                            />\n                        )}\n                    />\n                )}\n                <Route\n                    render={() => {\n                        let redirect = '';\n\n                        if (hasSkills) {\n                            redirect = SIDEBAR_VIEW_SKILLS;\n                        } else if (hasActivity) {\n                            redirect = SIDEBAR_VIEW_ACTIVITY;\n                        } else if (hasDetails) {\n                            redirect = SIDEBAR_VIEW_DETAILS;\n                        } else if (hasMetadata) {\n                            redirect = SIDEBAR_VIEW_METADATA;\n                        }\n\n                        return <Redirect to={{ pathname: `/${redirect}`, state: { silent: true } }} />;\n                    }}\n                />\n            </Switch>\n        );\n    }\n}\n\nexport { SidebarPanels as SidebarPanelsComponent };\nexport default flow([withSidebarAnnotations, withAPIContext, withAnnotatorContext, withRouterAndRef])(SidebarPanels);\n"],"file":"SidebarPanels.js"}