{"version":3,"sources":["../../../../../src/elements/content-sidebar/skills/timeline/Timeslice.js"],"names":["React","PlainButton","LENGTH_TEXT_ITEMLINE","MIN_WIDTH","Timeslice","start","end","duration","onClick","index","interactionTarget","barLength","startLeft","Math","round","minEnding","ending","max","endLeft","min","width","left"],"mappings":"AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,iDAAxB;AACA,OAAO,kBAAP;AAWA,IAAMC,oBAAoB,GAAG,GAA7B,C,CAAkC;;AAClC,IAAMC,SAAS,GAAG,CAAlB,C,CAAqB;;AAErB,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAwE;AAAA,MAArEC,KAAqE,QAArEA,KAAqE;AAAA,MAA9DC,GAA8D,QAA9DA,GAA8D;AAAA,MAAzDC,QAAyD,QAAzDA,QAAyD;AAAA,MAA/CC,QAA+C,QAA/CA,OAA+C;AAAA,MAAtCC,KAAsC,QAAtCA,KAAsC;AAAA,MAA/BC,iBAA+B,QAA/BA,iBAA+B;;AACtF,MAAI,OAAOL,KAAP,KAAiB,QAAjB,IAA6B,CAACE,QAA9B,IAA0CF,KAAK,IAAIE,QAAvD,EAAiE;AAC7D,WAAO,IAAP;AACH;;AAED,MAAMI,SAAS,GAAGT,oBAAlB;AACA,MAAIU,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAYT,KAAK,GAAGM,SAAT,GAAsBJ,QAAjC,CAAhB;AACA,MAAMQ,SAAS,GAAGH,SAAS,GAAGT,SAA9B,CAPsF,CAO7C;;AACzC,MAAMa,MAAM,GAAG,OAAOV,GAAP,KAAe,QAAf,GAA0BO,IAAI,CAACI,GAAL,CAASF,SAAT,EAAqBT,GAAG,GAAGK,SAAP,GAAoBJ,QAAxC,CAA1B,GAA8EQ,SAA7F;AACA,MAAMG,OAAO,GAAGL,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACM,GAAL,CAASR,SAAT,EAAoBK,MAApB,CAAX,CAAhB;AACA,MAAII,KAAK,GAAGF,OAAO,GAAGN,SAAtB,CAVsF,CAYtF;AACA;;AACA,MAAIQ,KAAK,GAAGjB,SAAZ,EAAuB;AACnBS,IAAAA,SAAS,IAAIT,SAAS,GAAGiB,KAAzB;AACAA,IAAAA,KAAK,GAAGjB,SAAR;AACH;;AAED,SACI,oBAAC,WAAD;AACI,IAAA,SAAS,EAAC,kBADd;AAEI,yBAAmBO,iBAFvB;AAGI,IAAA,OAAO,EAAE;AAAA,aAAMF,QAAO,CAACC,KAAD,CAAb;AAAA,KAHb;AAII,IAAA,KAAK,EAAE;AACHY,MAAAA,IAAI,YAAKT,SAAL,OADD;AAEHQ,MAAAA,KAAK,YAAKA,KAAL;AAFF,KAJX;AAQI,IAAA,IAAI,EAAC;AART,IADJ;AAYH,CA/BD;;AAiCA,eAAehB,SAAf","sourcesContent":["/**\n * @flow\n * @file Timeline line component\n * @author Box\n */\n\nimport React from 'react';\nimport PlainButton from '../../../../components/plain-button/PlainButton';\nimport './Timeslice.scss';\n\ntype Props = {\n    duration: number,\n    end?: number,\n    index: number,\n    interactionTarget: string,\n    onClick: Function,\n    start: number,\n};\n\nconst LENGTH_TEXT_ITEMLINE = 290; // match with css\nconst MIN_WIDTH = 6; // Need at least some width to be clickable\n\nconst Timeslice = ({ start, end, duration, onClick, index, interactionTarget }: Props) => {\n    if (typeof start !== 'number' || !duration || start >= duration) {\n        return null;\n    }\n\n    const barLength = LENGTH_TEXT_ITEMLINE;\n    let startLeft = Math.round((start * barLength) / duration);\n    const minEnding = startLeft + MIN_WIDTH; // Need at least some width to be clickable\n    const ending = typeof end === 'number' ? Math.max(minEnding, (end * barLength) / duration) : minEnding;\n    const endLeft = Math.round(Math.min(barLength, ending));\n    let width = endLeft - startLeft;\n\n    // If width is too small re-adjust the left position\n    // to get to at least 6px wide for clickability\n    if (width < MIN_WIDTH) {\n        startLeft -= MIN_WIDTH - width;\n        width = MIN_WIDTH;\n    }\n\n    return (\n        <PlainButton\n            className=\"be-timeline-time\"\n            data-resin-target={interactionTarget}\n            onClick={() => onClick(index)}\n            style={{\n                left: `${startLeft}px`,\n                width: `${width}px`,\n            }}\n            type=\"button\"\n        />\n    );\n};\n\nexport default Timeslice;\n"],"file":"Timeslice.js"}