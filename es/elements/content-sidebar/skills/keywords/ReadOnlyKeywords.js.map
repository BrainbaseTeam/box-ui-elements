{"version":3,"sources":["../../../../../src/elements/content-sidebar/skills/keywords/ReadOnlyKeywords.js"],"names":["React","PillCloud","SKILLS_TARGETS","INTERACTION_TARGET","Timeline","getPills","ReadOnlyselecteds","selectedIndex","pill","state","newIndex","value","setState","props","keywords","getViewer","duration","options","selected","pillCloudProps","selectedOptions","onSelect","KEYWORDS","SELECT","Array","isArray","appears","length","TIMELINE","text","PureComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAMA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,6CAAtB;AACA,SAASC,cAAT,EAAyBC,kBAAzB,QAAmD,oCAAnD;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAGA,OAAO,yBAAP;;IAYMC,iB;;;;;;;;;;;;;;;;;;4DAGa;AACXC,MAAAA,aAAa,EAAE,CAAC;AADL,K;;+DAWJ,UAACC,IAAD,EAAgB;AAAA,UACfD,aADe,GACU,MAAKE,KADf,CACfF,aADe;AAEvB,UAAMG,QAAgB,GAAKF,IAAI,CAACG,KAAhC;;AACA,YAAKC,QAAL,CAAc;AACVL,QAAAA,aAAa,EAAEA,aAAa,KAAKG,QAAlB,GAA6B,CAAC,CAA9B,GAAkCA;AADvC,OAAd;AAGH,K;;;;;;;;AAED;;;;;;6BAMS;AAAA,wBAC4C,KAAKG,KADjD;AAAA,UACGC,QADH,eACGA,QADH;AAAA,UACaC,SADb,eACaA,SADb;AAAA,UACwBC,QADxB,eACwBA,QADxB;AAAA,UAEGT,aAFH,GAE4B,KAAKE,KAFjC,CAEGF,aAFH;AAGL,UAAMU,OAAc,GAAGZ,QAAQ,CAACS,QAAD,CAA/B;AACA,UAAMI,QAAQ,GAAGJ,QAAQ,CAACP,aAAD,CAAzB;AACA,UAAMY,cAAc,GAAGD,QAAQ,GAAG;AAAEE,QAAAA,eAAe,EAAE,CAACH,OAAO,CAACV,aAAD,CAAR;AAAnB,OAAH,GAAmD,EAAlF;AAEA,aACI,0CACI,oBAAC,SAAD;AACI,QAAA,QAAQ,EAAE,KAAKc,QADnB;AAEI,QAAA,OAAO,EAAEJ;AAFb,SAGQE,cAHR;AAII,QAAA,WAAW,sBACNhB,kBADM,EACeD,cAAc,CAACoB,QAAf,CAAwBC,MADvC;AAJf,SADJ,EASK,CAAC,CAACL,QAAF,IAAcM,KAAK,CAACC,OAAN,CAAcP,QAAQ,CAACQ,OAAvB,CAAd,IAAiDR,QAAQ,CAACQ,OAAT,CAAiBC,MAAjB,GAA0B,CAA3E,IACG,oBAAC,QAAD;AACI,QAAA,QAAQ,EAAEX,QADd;AAEI,QAAA,SAAS,EAAED,SAFf;AAGI,QAAA,iBAAiB,EAAEb,cAAc,CAACoB,QAAf,CAAwBM,QAH/C;AAII,QAAA,IAAI,EAAEV,QAAQ,CAACW,IAJnB;AAKI,QAAA,UAAU,EAAEX,QAAQ,CAACQ;AALzB,QAVR,CADJ;AAqBH;;;;EAxD2B1B,KAAK,CAAC8B,a;;AA2DtC,eAAexB,iBAAf","sourcesContent":["/**\n * @flow\n * @file Read Only Keywords Card component\n * @author Box\n */\n\nimport * as React from 'react';\nimport PillCloud from '../../../../components/pill-cloud/PillCloud';\nimport { SKILLS_TARGETS, INTERACTION_TARGET } from '../../../common/interactionTargets';\nimport Timeline from '../timeline';\nimport getPills from './keywordUtils';\nimport type { Pill, Pills } from './flowTypes';\nimport type { SkillCardEntry } from '../../../../common/types/skills';\nimport './ReadOnlyKeywords.scss';\n\ntype Props = {\n    duration?: number,\n    getViewer?: Function,\n    keywords: Array<SkillCardEntry>,\n};\n\ntype State = {\n    selectedIndex: number,\n};\n\nclass ReadOnlyselecteds extends React.PureComponent<Props, State> {\n    props: Props;\n\n    state: State = {\n        selectedIndex: -1,\n    };\n\n    /**\n     * Shows the time line by selecting the keyword\n     *\n     * @private\n     * @param {Object} pill - keyword\n     * @return {void}\n     */\n    onSelect = (pill: Pill) => {\n        const { selectedIndex }: State = this.state;\n        const newIndex: number = ((pill.value: any): number);\n        this.setState({\n            selectedIndex: selectedIndex === newIndex ? -1 : newIndex,\n        });\n    };\n\n    /**\n     * Renders the keywords\n     *\n     * @private\n     * @return {void}\n     */\n    render() {\n        const { keywords, getViewer, duration }: Props = this.props;\n        const { selectedIndex }: State = this.state;\n        const options: Pills = getPills(keywords);\n        const selected = keywords[selectedIndex];\n        const pillCloudProps = selected ? { selectedOptions: [options[selectedIndex]] } : {};\n\n        return (\n            <>\n                <PillCloud\n                    onSelect={this.onSelect}\n                    options={options}\n                    {...pillCloudProps}\n                    buttonProps={{\n                        [INTERACTION_TARGET]: SKILLS_TARGETS.KEYWORDS.SELECT,\n                    }}\n                />\n                {!!selected && Array.isArray(selected.appears) && selected.appears.length > 0 && (\n                    <Timeline\n                        duration={duration}\n                        getViewer={getViewer}\n                        interactionTarget={SKILLS_TARGETS.KEYWORDS.TIMELINE}\n                        text={selected.text}\n                        timeslices={selected.appears}\n                    />\n                )}\n            </>\n        );\n    }\n}\n\nexport default ReadOnlyselecteds;\n"],"file":"ReadOnlyKeywords.js"}