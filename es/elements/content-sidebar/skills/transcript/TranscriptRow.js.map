{"version":3,"sources":["../../../../../src/elements/content-sidebar/skills/transcript/TranscriptRow.js"],"names":["React","formatTime","ReadOnlyTranscriptRow","EditingTranscriptRow","isValidTimeSlice","TranscriptRow","appears","text","isEditing","onClick","onSave","onCancel","onChange","interactionTarget","isValid","Array","isArray","length","timeSlice","start","undefined"],"mappings":"AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AAGA,OAAO,sBAAP;;AAaA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAiG;AAAA,MAA9FC,OAA8F,QAA9FA,OAA8F;AAAA,MAArFC,IAAqF,QAArFA,IAAqF;AAAA,MAA/EC,SAA+E,QAA/EA,SAA+E;AAAA,MAApEC,OAAoE,QAApEA,OAAoE;AAAA,MAA3DC,MAA2D,QAA3DA,MAA2D;AAAA,MAAnDC,QAAmD,QAAnDA,QAAmD;AAAA,MAAzCC,QAAyC,QAAzCA,QAAyC;AAAA,MAA/BC,iBAA+B,QAA/BA,iBAA+B;AACnH,MAAMC,OAAO,GAAGV,gBAAgB,CAACE,OAAD,CAAhB,IAA6BS,KAAK,CAACC,OAAN,CAAcV,OAAd,CAA7B,IAAuDA,OAAO,CAACW,MAAR,KAAmB,CAA1F;AACA,MAAMC,SAAS,GAAKZ,OAApB;AACA,MAAMa,KAAK,GAAGL,OAAO,GAAGb,UAAU,CAACiB,SAAS,CAAC,CAAD,CAAT,CAAaC,KAAd,CAAb,GAAoCC,SAAzD;AAEA,SAAOZ,SAAS,GACZ,oBAAC,oBAAD;AAAsB,IAAA,QAAQ,EAAEG,QAAhC;AAA0C,IAAA,QAAQ,EAAEC,QAApD;AAA8D,IAAA,MAAM,EAAEF,MAAtE;AAA8E,IAAA,IAAI,EAAEH,IAApF;AAA0F,IAAA,IAAI,EAAEY;AAAhG,IADY,GAGZ,oBAAC,qBAAD;AAAuB,IAAA,iBAAiB,EAAEN,iBAA1C;AAA6D,IAAA,OAAO,EAAEJ,OAAtE;AAA+E,IAAA,IAAI,EAAEF,IAArF;AAA2F,IAAA,IAAI,EAAEY;AAAjG,IAHJ;AAKH,CAVD;;AAYA,eAAed,aAAf","sourcesContent":["/**\n * @flow\n * @file Transcript row component\n * @author Box\n */\n\nimport React from 'react';\nimport { formatTime } from '../../../../utils/datetime';\nimport ReadOnlyTranscriptRow from './ReadOnlyTranscriptRow';\nimport EditingTranscriptRow from './EditingTranscriptRow';\nimport { isValidTimeSlice } from './timeSliceUtils';\nimport type { SkillCardEntryTimeSlice } from '../../../../common/types/skills';\n\nimport './TranscriptRow.scss';\n\ntype Props = {\n    appears?: Array<SkillCardEntryTimeSlice>,\n    interactionTarget: string,\n    isEditing: boolean,\n    onCancel: Function,\n    onChange: Function,\n    onClick: Function,\n    onSave: Function,\n    text?: string,\n};\n\nconst TranscriptRow = ({ appears, text, isEditing, onClick, onSave, onCancel, onChange, interactionTarget }: Props) => {\n    const isValid = isValidTimeSlice(appears) && Array.isArray(appears) && appears.length === 1;\n    const timeSlice = ((appears: any): Array<SkillCardEntryTimeSlice>);\n    const start = isValid ? formatTime(timeSlice[0].start) : undefined;\n\n    return isEditing ? (\n        <EditingTranscriptRow onCancel={onCancel} onChange={onChange} onSave={onSave} text={text} time={start} />\n    ) : (\n        <ReadOnlyTranscriptRow interactionTarget={interactionTarget} onClick={onClick} text={text} time={start} />\n    );\n};\n\nexport default TranscriptRow;\n"],"file":"TranscriptRow.js"}