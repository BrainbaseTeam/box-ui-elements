{"version":3,"sources":["../../../../src/elements/content-sidebar/skills/skillUtils.js"],"names":["getProp","isValidSkillsCard","file","card","fileVersion","skillCardFileVersion","file_version","id","status","Array","isArray","entries","hasSkills","cards","length","some"],"mappings":"AAAA;;;;;AAMA,OAAOA,OAAP,MAAoB,YAApB;;AAIA;;;;;;AAMA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,IAAD,EAAgBC,IAAhB,EAA6C;AACnE,MAAMC,WAAW,GAAGJ,OAAO,CAACE,IAAD,EAAO,iBAAP,CAA3B;AACA,MAAMG,oBAAoB,GAAGF,IAAI,CAACG,YAAL,GAAoBH,IAAI,CAACG,YAAL,CAAkBC,EAAtC,GAA2CH,WAAxE;AACA,SAAOA,WAAW,KAAKC,oBAAhB,KAAyC,CAAC,CAACF,IAAI,CAACK,MAAP,IAAiBC,KAAK,CAACC,OAAN,CAAcP,IAAI,CAACQ,OAAnB,CAA1D,CAAP;AACH,CAJD;AAMA;;;;;;;;AAMA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACV,IAAD,EAA4B;AAC1C,MAAMW,KAAK,GAAGb,OAAO,CAACE,IAAD,EAAO,sCAAP,EAA+C,EAA/C,CAArB;AACA,SAAOO,KAAK,CAACC,OAAN,CAAcG,KAAd,KAAwBA,KAAK,CAACC,MAAN,GAAe,CAAvC,IAA4CD,KAAK,CAACE,IAAN,CAAW,UAAAZ,IAAI;AAAA,WAAIF,iBAAiB,CAACC,IAAD,EAAOC,IAAP,CAArB;AAAA,GAAf,CAAnD;AACH,CAHD;;AAKA,SAASS,SAAT,EAAoBX,iBAApB","sourcesContent":["/**\n * @flow\n * @file Skills utils\n * @author Box\n */\n\nimport getProp from 'lodash/get';\nimport type { SkillCard } from '../../../common/types/skills';\nimport type { BoxItem } from '../../../common/types/core';\n\n/**\n * Returns true if its a valid skills card.\n *\n * @param {SkillCard} card - box skill card\n * @return {boolean} if its valid skills card\n */\nconst isValidSkillsCard = (file: BoxItem, card: SkillCard): boolean => {\n    const fileVersion = getProp(file, 'file_version.id');\n    const skillCardFileVersion = card.file_version ? card.file_version.id : fileVersion;\n    return fileVersion === skillCardFileVersion && (!!card.status || Array.isArray(card.entries));\n};\n\n/**\n * Returns true if there are valid skills to show.\n *\n * @param {BoxItem} file - box file\n * @return {boolean} if there are valid skills to show\n */\nconst hasSkills = (file: BoxItem): boolean => {\n    const cards = getProp(file, 'metadata.global.boxSkillsCards.cards', []);\n    return Array.isArray(cards) && cards.length > 0 && cards.some(card => isValidSkillsCard(file, card));\n};\n\nexport { hasSkills, isValidSkillsCard };\n"],"file":"skillUtils.js"}