{"version":3,"sources":["../../../../../src/elements/content-sidebar/skills/status/Status.js"],"names":["React","FormattedMessage","messages","SKILLS_ERROR_EXTERNAL_AUTH","SKILLS_ERROR_BILLING","SKILLS_ERROR_UNKNOWN","SKILLS_ERROR_INVOCATIONS","SKILLS_ERROR_FILE_PROCESSING","SKILLS_ERROR_INVALID_FILE_SIZE","SKILLS_ERROR_INVALID_FILE_FORMAT","SKILLS_STATUS_PENDING","SKILLS_STATUS_INVOKED","Status","card","status","code","message","localizedMessage","skillUnknownError","skillInvalidFileSizeError","skillInvalidFileExtensionError","skillFileProcessingError","skillPendingStatus","skillInvokedStatus"],"mappings":"AAAA;;;;;AAMA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SACIC,0BADJ,EAEIC,oBAFJ,EAGIC,oBAHJ,EAIIC,wBAJJ,EAKIC,4BALJ,EAMIC,8BANJ,EAOIC,gCAPJ,EAQIC,qBARJ,EASIC,qBATJ,QAUO,uBAVP;;AAiBA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAqB;AAAA,MAAlBC,IAAkB,QAAlBA,IAAkB;AAAA,qBACGA,IADH,CACxBC,MADwB;AAAA,MACxBA,MADwB,6BACf,EADe;AAAA,MAExBC,IAFwB,GAEoBD,MAFpB,CAExBC,IAFwB;AAAA,MAElBC,OAFkB,GAEoBF,MAFpB,CAElBE,OAFkB;AAGhC,MAAIC,gBAAgB,GAAGf,QAAQ,CAACgB,iBAAhC;;AAEA,UAAQH,IAAR;AACI,SAAKP,8BAAL;AACIS,MAAAA,gBAAgB,GAAGf,QAAQ,CAACiB,yBAA5B;AACA;;AACJ,SAAKV,gCAAL;AACIQ,MAAAA,gBAAgB,GAAGf,QAAQ,CAACkB,8BAA5B;AACA;;AACJ,SAAKjB,0BAAL;AACA,SAAKC,oBAAL;AACA,SAAKE,wBAAL;AACA,SAAKD,oBAAL;AACIY,MAAAA,gBAAgB,GAAGf,QAAQ,CAACgB,iBAA5B;AACA;;AACJ,SAAKX,4BAAL;AACIU,MAAAA,gBAAgB,GAAGf,QAAQ,CAACmB,wBAA5B;AACA;;AACJ,SAAKX,qBAAL;AACIO,MAAAA,gBAAgB,GAAGf,QAAQ,CAACoB,kBAA5B;AACA;;AACJ,SAAKX,qBAAL;AACIM,MAAAA,gBAAgB,GAAGf,QAAQ,CAACqB,kBAA5B;AACA;;AACJ;AACI,UAAIP,OAAJ,EAAa;AACT,eAAOA,OAAP;AACH;;AAzBT;;AA4BA,SAAO,oBAAC,gBAAD,EAAsBC,gBAAtB,CAAP;AACH,CAlCD;;AAoCA,eAAeL,MAAf","sourcesContent":["/**\n * @flow\n * @file Status Skill Card component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport messages from '../../../common/messages';\nimport {\n    SKILLS_ERROR_EXTERNAL_AUTH,\n    SKILLS_ERROR_BILLING,\n    SKILLS_ERROR_UNKNOWN,\n    SKILLS_ERROR_INVOCATIONS,\n    SKILLS_ERROR_FILE_PROCESSING,\n    SKILLS_ERROR_INVALID_FILE_SIZE,\n    SKILLS_ERROR_INVALID_FILE_FORMAT,\n    SKILLS_STATUS_PENDING,\n    SKILLS_STATUS_INVOKED,\n} from '../../../../constants';\nimport type { SkillCard, SkillCardLocalizableType } from '../../../../common/types/skills';\n\ntype Props = {\n    card: SkillCard,\n};\n\nconst Status = ({ card }: Props) => {\n    const { status = {} }: SkillCard = card;\n    const { code, message }: SkillCardLocalizableType = status;\n    let localizedMessage = messages.skillUnknownError;\n\n    switch (code) {\n        case SKILLS_ERROR_INVALID_FILE_SIZE:\n            localizedMessage = messages.skillInvalidFileSizeError;\n            break;\n        case SKILLS_ERROR_INVALID_FILE_FORMAT:\n            localizedMessage = messages.skillInvalidFileExtensionError;\n            break;\n        case SKILLS_ERROR_EXTERNAL_AUTH:\n        case SKILLS_ERROR_BILLING:\n        case SKILLS_ERROR_INVOCATIONS:\n        case SKILLS_ERROR_UNKNOWN:\n            localizedMessage = messages.skillUnknownError;\n            break;\n        case SKILLS_ERROR_FILE_PROCESSING:\n            localizedMessage = messages.skillFileProcessingError;\n            break;\n        case SKILLS_STATUS_PENDING:\n            localizedMessage = messages.skillPendingStatus;\n            break;\n        case SKILLS_STATUS_INVOKED:\n            localizedMessage = messages.skillInvokedStatus;\n            break;\n        default:\n            if (message) {\n                return message;\n            }\n    }\n\n    return <FormattedMessage {...localizedMessage} />;\n};\n\nexport default Status;\n"],"file":"Status.js"}