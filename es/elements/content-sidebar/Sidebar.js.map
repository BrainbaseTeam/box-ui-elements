{"version":3,"sources":["../../../src/elements/content-sidebar/Sidebar.js"],"names":["React","classNames","flow","getProp","uniqueid","withRouter","LoadingIndicator","LocalStore","SidebarNav","SidebarPanels","SidebarUtils","withFeatureConsumer","SIDEBAR_FORCE_KEY","SIDEBAR_FORCE_VALUE_CLOSED","SIDEBAR_FORCE_VALUE_OPEN","Sidebar","props","createRef","pathname","basePath","substring","split","event","file","history","currentVersion","file_version","fileVersionSlug","id","urlPrefix","getUrlPrefix","location","preventDefault","push","state","isDirty","getLocationState","setForcedByLocation","prevProps","fileId","prevFileId","prevLocation","replace","silent","setState","key","locationState","isOpen","undefined","store","setItem","getItem","isForced","sidebarPanels","current","refresh","isLocationOpen","activitySidebarProps","additionalTabs","className","currentUser","detailsSidebarProps","getPreview","getViewer","hasAdditionalTabs","hasVersions","isDefaultOpen","isLoading","metadataEditors","metadataSidebarProps","onVersionChange","versionsSidebarProps","isForcedSet","isForcedOpen","hasActivity","canHaveActivitySidebar","hasDetails","canHaveDetailsSidebar","hasMetadata","shouldRenderMetadataSidebar","hasSkills","shouldRenderSkillsSidebar","onVersionHistoryClick","handleVersionHistoryClick","styleClassName","Component","SidebarComponent"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Content Sidebar Component\n * @author Box\n */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport flow from 'lodash/flow';\nimport getProp from 'lodash/get';\nimport uniqueid from 'lodash/uniqueId';\nimport { withRouter } from 'react-router-dom';\nimport type { Location, RouterHistory } from 'react-router-dom';\nimport LoadingIndicator from '../../components/loading-indicator/LoadingIndicator';\nimport LocalStore from '../../utils/LocalStore';\nimport SidebarNav from './SidebarNav';\nimport SidebarPanels from './SidebarPanels';\nimport SidebarUtils from './SidebarUtils';\nimport { withFeatureConsumer } from '../common/feature-checking';\nimport type { FeatureConfig } from '../common/feature-checking';\nimport type { ActivitySidebarProps } from './ActivitySidebar';\nimport type { DetailsSidebarProps } from './DetailsSidebar';\nimport type { MetadataSidebarProps } from './MetadataSidebar';\nimport type { VersionsSidebarProps } from './versions';\n\ntype Props = {\n    activitySidebarProps: ActivitySidebarProps,\n    additionalTabs?: Array<AdditionalSidebarTab>,\n    className: string,\n    currentUser?: User,\n    detailsSidebarProps: DetailsSidebarProps,\n    features: FeatureConfig,\n    file: BoxItem,\n    fileId: string,\n    getPreview: Function,\n    getViewer: Function,\n    hasActivityFeed: boolean,\n    hasAdditionalTabs: boolean,\n    hasMetadata: boolean,\n    hasSkills: boolean,\n    hasVersions: boolean,\n    history: RouterHistory,\n    isDefaultOpen?: boolean,\n    isLoading?: boolean,\n    location: Location,\n    metadataEditors?: Array<MetadataEditor>,\n    metadataSidebarProps: MetadataSidebarProps,\n    onVersionChange?: Function,\n    onVersionHistoryClick?: Function,\n    versionsSidebarProps: VersionsSidebarProps,\n};\n\ntype State = {\n    isDirty: boolean,\n};\n\nexport const SIDEBAR_FORCE_KEY: 'bcs.force' = 'bcs.force';\nexport const SIDEBAR_FORCE_VALUE_CLOSED: 'closed' = 'closed';\nexport const SIDEBAR_FORCE_VALUE_OPEN: 'open' = 'open';\n\nclass Sidebar extends React.Component<Props, State> {\n    static defaultProps = {\n        isDefaultOpen: true,\n        isLoading: false,\n    };\n\n    id: string = uniqueid('bcs_');\n\n    props: Props;\n\n    sidebarPanels: { current: null | SidebarPanels } = React.createRef();\n\n    state: State;\n\n    store: LocalStore = new LocalStore();\n\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            isDirty: this.getLocationState('open') || false,\n        };\n\n        this.setForcedByLocation();\n    }\n\n    componentDidUpdate(prevProps: Props): void {\n        const { fileId, history, location }: Props = this.props;\n        const { fileId: prevFileId, location: prevLocation }: Props = prevProps;\n        const { isDirty }: State = this.state;\n\n        // User navigated to a different file without ever navigating the sidebar\n        if (!isDirty && fileId !== prevFileId && location.pathname !== '/') {\n            history.replace({ pathname: '/', state: { silent: true } });\n        }\n\n        // User navigated or toggled the sidebar intentionally, internally or externally\n        if (location !== prevLocation && !this.getLocationState('silent')) {\n            this.setForcedByLocation();\n            this.setState({ isDirty: true });\n        }\n    }\n\n    getUrlPrefix = (pathname: string) => {\n        const basePath = pathname.substring(1).split('/')[0];\n        return basePath;\n    };\n\n    /**\n     * Handle version history click\n     *\n     * @param {SyntheticEvent} event - The event\n     * @return {void}\n     */\n    handleVersionHistoryClick = (event: SyntheticEvent<>): void => {\n        const { file, history } = this.props;\n        const { file_version: currentVersion } = file;\n        const fileVersionSlug = currentVersion ? `/${currentVersion.id}` : '';\n\n        const urlPrefix = this.getUrlPrefix(history.location.pathname);\n\n        if (event.preventDefault) {\n            event.preventDefault();\n        }\n\n        history.push(`/${urlPrefix}/versions${fileVersionSlug}`);\n    };\n\n    /**\n     * Getter for location state properties.\n     *\n     * NOTE: Each location on the history stack has its own optional state object that is wholly separate from\n     * this component's internal state. Values on the location state object can persist even between refreshes\n     * when using certain history contexts, such as BrowserHistory.\n     *\n     * @param key - Optionally get a specific key value from state\n     * @returns {any} - The location state or state key value\n     */\n    getLocationState(key?: string): any {\n        const { location } = this.props;\n        const { state: locationState = {} } = location;\n        return getProp(locationState, key);\n    }\n\n    /**\n     * Getter/setter for sidebar forced state\n     *\n     * @param isOpen - Optionally set the sidebar to open/closed\n     * @returns {string|null} - The sidebar open/closed state\n     */\n    isForced(isOpen?: boolean): ?(typeof SIDEBAR_FORCE_VALUE_CLOSED | typeof SIDEBAR_FORCE_VALUE_OPEN) {\n        if (isOpen !== undefined) {\n            this.store.setItem(SIDEBAR_FORCE_KEY, isOpen ? SIDEBAR_FORCE_VALUE_OPEN : SIDEBAR_FORCE_VALUE_CLOSED);\n        }\n\n        return this.store.getItem(SIDEBAR_FORCE_KEY);\n    }\n\n    /**\n     * Getter for whether the sidebar has been forced open\n     * @returns {boolean} - True if the sidebar has been forced open\n     */\n    isForcedOpen(): boolean {\n        return this.isForced() === SIDEBAR_FORCE_VALUE_OPEN;\n    }\n\n    /**\n     * Getter for whether the sidebar has been forced open/closed previously\n     * @returns {boolean} - True if the sidebar has been forced open/closed previously\n     */\n    isForcedSet(): boolean {\n        return this.isForced() !== null;\n    }\n\n    /**\n     * Refreshes the sidebar panel\n     * @returns {void}\n     */\n    refresh(): void {\n        const { current: sidebarPanels } = this.sidebarPanels;\n\n        if (sidebarPanels) {\n            sidebarPanels.refresh();\n        }\n    }\n\n    /**\n     * Helper to set the local store open state based on the location open state, if defined\n     */\n    setForcedByLocation(): void {\n        const isLocationOpen: ?boolean = this.getLocationState('open');\n\n        if (isLocationOpen !== undefined && isLocationOpen !== null) {\n            this.isForced(isLocationOpen);\n        }\n    }\n\n    render() {\n        const {\n            activitySidebarProps,\n            additionalTabs,\n            className,\n            currentUser,\n            detailsSidebarProps,\n            file,\n            fileId,\n            getPreview,\n            getViewer,\n            hasAdditionalTabs,\n            hasVersions,\n            isDefaultOpen,\n            isLoading,\n            metadataEditors,\n            metadataSidebarProps,\n            onVersionChange,\n            versionsSidebarProps,\n        }: Props = this.props;\n        const isOpen = this.isForcedSet() ? this.isForcedOpen() : !!isDefaultOpen;\n        const hasActivity = SidebarUtils.canHaveActivitySidebar(this.props);\n        const hasDetails = SidebarUtils.canHaveDetailsSidebar(this.props);\n        const hasMetadata = SidebarUtils.shouldRenderMetadataSidebar(this.props, metadataEditors);\n        const hasSkills = SidebarUtils.shouldRenderSkillsSidebar(this.props, file);\n        const onVersionHistoryClick = hasVersions ? this.handleVersionHistoryClick : this.props.onVersionHistoryClick;\n        const styleClassName = classNames('be bcs', className, {\n            'bcs-is-open': isOpen,\n        });\n\n        return (\n            <aside id={this.id} className={styleClassName}>\n                {isLoading ? (\n                    <div className=\"bcs-loading\">\n                        <LoadingIndicator />\n                    </div>\n                ) : (\n                    <>\n                        <SidebarNav\n                            additionalTabs={additionalTabs}\n                            elementId={this.id}\n                            fileId={fileId}\n                            hasActivity={hasActivity}\n                            hasAdditionalTabs={hasAdditionalTabs}\n                            hasDetails={hasDetails}\n                            hasMetadata={hasMetadata}\n                            hasSkills={hasSkills}\n                            isOpen={isOpen}\n                        />\n                        <SidebarPanels\n                            activitySidebarProps={activitySidebarProps}\n                            currentUser={currentUser}\n                            elementId={this.id}\n                            detailsSidebarProps={detailsSidebarProps}\n                            file={file}\n                            fileId={fileId}\n                            getPreview={getPreview}\n                            getViewer={getViewer}\n                            hasActivity={hasActivity}\n                            hasDetails={hasDetails}\n                            hasMetadata={hasMetadata}\n                            hasSkills={hasSkills}\n                            hasVersions={hasVersions}\n                            isOpen={isOpen}\n                            key={file.id}\n                            metadataSidebarProps={metadataSidebarProps}\n                            onVersionChange={onVersionChange}\n                            onVersionHistoryClick={onVersionHistoryClick}\n                            ref={this.sidebarPanels}\n                            versionsSidebarProps={versionsSidebarProps}\n                        />\n                    </>\n                )}\n            </aside>\n        );\n    }\n}\n\nexport { Sidebar as SidebarComponent };\nexport default flow([withFeatureConsumer, withRouter])(Sidebar);\n"],"file":"Sidebar.js"}