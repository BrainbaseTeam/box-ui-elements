{"version":3,"sources":["../../../src/elements/content-sidebar/ActivitySidebar.js"],"names":["React","debounce","flow","noop","FormattedMessage","ActivityFeed","AddTaskButton","API","messages","SidebarContent","EVENT_JS_READY","getBadUserError","getBadItemError","mark","withAPIContext","withErrorBoundary","withFeatureConsumer","isFeatureEnabled","withLogger","DEFAULT_COLLAB_DEBOUNCE","ORIGIN_ACTIVITY_SIDEBAR","SIDEBAR_VIEW_ACTIVITY","TASK_COMPLETION_RULE_ALL","activityFeedInlineError","inlineError","title","errorOccured","content","activityFeedItemApiError","MARK_NAME_JS_READY","ActivitySidebar","props","fetchFeedItems","e","code","contextInfo","errorCallback","message","assignees","taskType","dueAt","completionRule","onSuccess","onError","currentUser","state","file","api","feedErrorCallback","successCallback","feedSuccessCallback","getFeedAPI","createTaskNew","task","onTaskDelete","deleteTaskNew","taskId","onTaskUpdate","updateTaskNew","taskAssignmentId","status","updateTaskCollaborator","id","permissions","onCommentDelete","deleteComment","comment","text","hasMention","onCommentUpdate","updateComment","onCommentCreate","createComment","deleteAppActivity","feedItems","setState","activityFeedError","undefined","error","console","currentUserError","collaborators","entries","approverSelectorContacts","mentionSelectorContacts","getCollaborators","bind","getApproverContactsSuccessCallback","getMentionContactsSuccessCallback","maskError","errorHeader","currentUserErrorHeaderMessage","errorSubHeader","defaultErrorMaskSubHeaderMessage","userId","getUsersAPI","getAvatarUrlWithAccessToken","isDisabled","getApproverWithQuery","getAvatarUrl","createTask","onTaskModalClose","taskFormProps","approvers","logger","onReadyMetric","endMarkName","fetchCurrentUser","user","shouldDestroy","getUser","fetchCurrentUserSuccessCallback","fetchCurrentUserErrorCallback","shouldRefreshCache","features","shouldShowAppActivity","fetchFeedItemsSuccessCallback","fetchFeedItemsErrorCallback","searchStr","trim","getFileCollaboratorsAPI","getFileCollaborators","filter_term","elementId","onVersionHistoryClick","getUserProfileUrl","activeFeedEntryId","activeFeedEntryType","renderAddTaskButton","sidebarActivityTitle","deleteTask","updateTask","updateTaskAssignment","getMentionWithQuery","PureComponent","onTaskAssignmentUpdate","onTaskCreate","ActivitySidebarComponent"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Activity feed sidebar component\n * @author Box\n */\n\nimport * as React from 'react';\nimport debounce from 'lodash/debounce';\nimport flow from 'lodash/flow';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport ActivityFeed from './activity-feed';\nimport AddTaskButton from './AddTaskButton';\nimport API from '../../api';\nimport messages from '../common/messages';\nimport SidebarContent from './SidebarContent';\nimport { EVENT_JS_READY } from '../common/logger/constants';\nimport { getBadUserError, getBadItemError } from '../../utils/error';\nimport { mark } from '../../utils/performance';\nimport { withAPIContext } from '../common/api-context';\nimport { withErrorBoundary } from '../common/error-boundary';\nimport { withFeatureConsumer, isFeatureEnabled } from '../common/feature-checking';\nimport { withLogger } from '../common/logger';\nimport {\n    DEFAULT_COLLAB_DEBOUNCE,\n    ORIGIN_ACTIVITY_SIDEBAR,\n    SIDEBAR_VIEW_ACTIVITY,\n    TASK_COMPLETION_RULE_ALL,\n} from '../../constants';\nimport type { TaskCompletionRule, TaskType, TaskNew, TaskUpdatePayload } from '../../common/types/tasks';\nimport type { FocusableFeedItemType } from '../../common/types/feed';\nimport './ActivitySidebar.scss';\n\ntype ExternalProps = {\n    activeFeedEntryId?: string,\n    activeFeedEntryType?: FocusableFeedItemType,\n    currentUser?: User,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    onCommentCreate: Function,\n    onCommentDelete: (comment: Comment) => any,\n    onCommentUpdate: () => any,\n    onTaskAssignmentUpdate: Function,\n    onTaskCreate: Function,\n    onTaskDelete: (id: string) => any,\n    onTaskUpdate: () => any,\n} & ErrorContextProps;\n\ntype PropsWithoutContext = {\n    elementId: string,\n    file: BoxItem,\n    isDisabled: boolean,\n    onVersionHistoryClick?: Function,\n    translations?: Translations,\n} & ExternalProps &\n    WithLoggerProps;\n\ntype Props = {\n    api: API,\n    features: FeatureConfig,\n} & PropsWithoutContext;\n\ntype State = {\n    activityFeedError?: Errors,\n    approverSelectorContacts: SelectorItems,\n    currentUser?: User,\n    currentUserError?: Errors,\n    feedItems?: FeedItems,\n    mentionSelectorContacts?: SelectorItems,\n};\n\nexport const activityFeedInlineError: Errors = {\n    inlineError: {\n        title: messages.errorOccured,\n        content: messages.activityFeedItemApiError,\n    },\n};\n\nconst MARK_NAME_JS_READY = `${ORIGIN_ACTIVITY_SIDEBAR}_${EVENT_JS_READY}`;\n\nmark(MARK_NAME_JS_READY);\n\nclass ActivitySidebar extends React.PureComponent<Props, State> {\n    static defaultProps = {\n        isDisabled: false,\n        onCommentCreate: noop,\n        onCommentDelete: noop,\n        onCommentUpdate: noop,\n        onTaskAssignmentUpdate: noop,\n        onTaskCreate: noop,\n        onTaskDelete: noop,\n        onTaskUpdate: noop,\n    };\n\n    constructor(props: Props) {\n        super(props);\n        // eslint-disable-next-line react/prop-types\n        const { logger } = this.props;\n        logger.onReadyMetric({\n            endMarkName: MARK_NAME_JS_READY,\n        });\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { currentUser } = this.props;\n        this.fetchFeedItems(true);\n        this.fetchCurrentUser(currentUser);\n    }\n\n    /**\n     * Fetches a Users info\n     *\n     * @private\n     * @param {User} [user] - Box User. If missing, gets user that the current token was generated for.\n     * @return {void}\n     */\n    fetchCurrentUser(user?: User, shouldDestroy?: boolean = false): void {\n        const { api, file } = this.props;\n\n        if (!file) {\n            throw getBadItemError();\n        }\n\n        if (typeof user === 'undefined') {\n            api.getUsersAPI(shouldDestroy).getUser(\n                file.id,\n                this.fetchCurrentUserSuccessCallback,\n                this.fetchCurrentUserErrorCallback,\n            );\n        } else {\n            this.setState({ currentUser: user, currentUserError: undefined });\n        }\n    }\n\n    /**\n     * Success callback for fetching feed items\n     */\n    feedSuccessCallback = (): void => {\n        this.fetchFeedItems();\n    };\n\n    /**\n     * Error callback for fetching feed items\n     *\n     * @param {Error} e - the error which occured\n     * @param {Error} code - the code for the error\n     * @param {Object} contextInfo - the context info for the error\n     */\n    feedErrorCallback = (e: ElementsXhrError, code: string, contextInfo?: Object) => {\n        this.errorCallback(e, code, contextInfo);\n        this.fetchFeedItems();\n    };\n\n    createTask = (\n        message: string,\n        assignees: SelectorItems,\n        taskType: TaskType,\n        dueAt: ?string,\n        completionRule: TaskCompletionRule,\n        onSuccess: ?Function,\n        onError: ?Function,\n    ): void => {\n        const { currentUser } = this.state;\n        const { file, api } = this.props;\n\n        if (!currentUser) {\n            throw getBadUserError();\n        }\n        const errorCallback = (e, code, contextInfo) => {\n            if (onError) {\n                onError(e, code, contextInfo);\n            }\n            this.feedErrorCallback(e, code, contextInfo);\n        };\n        const successCallback = () => {\n            if (onSuccess) {\n                onSuccess();\n            }\n            this.feedSuccessCallback();\n        };\n\n        api.getFeedAPI(false).createTaskNew(\n            file,\n            currentUser,\n            message,\n            assignees,\n            taskType,\n            dueAt,\n            completionRule,\n            successCallback,\n            errorCallback,\n        );\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    deleteTask = (task: TaskNew): void => {\n        const { file, api, onTaskDelete } = this.props;\n        api.getFeedAPI(false).deleteTaskNew(\n            file,\n            task,\n            (taskId: string) => {\n                this.feedSuccessCallback();\n                onTaskDelete(taskId);\n            },\n            this.feedErrorCallback,\n        );\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    updateTask = (task: TaskUpdatePayload, onSuccess: ?Function, onError: ?Function): void => {\n        const { file, api, onTaskUpdate } = this.props;\n        const errorCallback = (e, code) => {\n            if (onError) {\n                onError(e, code);\n            }\n            this.feedErrorCallback(e, code);\n        };\n        const successCallback = () => {\n            this.feedSuccessCallback();\n\n            if (onSuccess) {\n                onSuccess();\n            }\n\n            onTaskUpdate();\n        };\n\n        api.getFeedAPI(false).updateTaskNew(file, task, successCallback, errorCallback);\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    updateTaskAssignment = (taskId: string, taskAssignmentId: string, status: TaskAssignmentStatus): void => {\n        const { file, api } = this.props;\n\n        api.getFeedAPI(false).updateTaskCollaborator(\n            file,\n            taskId,\n            taskAssignmentId,\n            status,\n            this.feedSuccessCallback,\n            this.feedErrorCallback,\n        );\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    /**\n     * Deletes a comment via the API.\n     *\n     * @param {Object} args - A subset of the comment\n     * @return void\n     */\n    deleteComment = ({ id, permissions }: { id: string, permissions: BoxItemPermission }): void => {\n        const { file, api, onCommentDelete } = this.props;\n\n        api.getFeedAPI(false).deleteComment(\n            file,\n            id,\n            permissions,\n            (comment: Comment) => {\n                this.feedSuccessCallback();\n                onCommentDelete(comment);\n            },\n            this.feedErrorCallback,\n        );\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    updateComment = (\n        id: string,\n        text: string,\n        hasMention: boolean,\n        permissions: BoxItemPermission,\n        onSuccess: ?Function,\n        onError: ?Function,\n    ): void => {\n        const { file, api, onCommentUpdate } = this.props;\n\n        const errorCallback = (e, code) => {\n            if (onError) {\n                onError(e, code);\n            }\n            this.feedErrorCallback(e, code);\n        };\n\n        const successCallback = () => {\n            this.feedSuccessCallback();\n            if (onSuccess) {\n                onSuccess();\n            }\n            onCommentUpdate();\n        };\n\n        api.getFeedAPI(false).updateComment(file, id, text, hasMention, permissions, successCallback, errorCallback);\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    /**\n     * Posts a new comment to the API\n     *\n     * @param {string} text - The comment's text\n     * @param {boolean} hasMention - The comment's text\n     * @return {void}\n     */\n    createComment = (text: string, hasMention: boolean): void => {\n        const { file, api, onCommentCreate } = this.props;\n        const { currentUser } = this.state;\n\n        if (!currentUser) {\n            throw getBadUserError();\n        }\n\n        api.getFeedAPI(false).createComment(\n            file,\n            currentUser,\n            text,\n            hasMention,\n            (comment: Comment) => {\n                onCommentCreate(comment);\n                this.feedSuccessCallback();\n            },\n            this.feedErrorCallback,\n        );\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    /**\n     * Deletes an app activity item via the API.\n     *\n     * @param {Object} args - A subset of the app activity\n     * @return void\n     */\n    deleteAppActivity = ({ id }: { id: string }): void => {\n        const { file, api } = this.props;\n\n        api.getFeedAPI(false).deleteAppActivity(file, id, this.feedSuccessCallback, this.feedErrorCallback);\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    /**\n     * Fetches the feed items for the sidebar\n     *\n     * @param {boolean} shouldDestroy true if the api factory should be destroyed\n     */\n    fetchFeedItems(shouldRefreshCache: boolean = false, shouldDestroy: boolean = false) {\n        const { file, api, features } = this.props;\n        const shouldShowAppActivity = isFeatureEnabled(features, 'activityFeed.appActivity.enabled');\n        api.getFeedAPI(shouldDestroy).feedItems(\n            file,\n            shouldRefreshCache,\n            this.fetchFeedItemsSuccessCallback,\n            this.fetchFeedItemsErrorCallback,\n            this.errorCallback,\n            { shouldShowAppActivity },\n        );\n    }\n\n    /**\n     * Handles a successful feed API fetch\n     *\n     * @private\n     * @param {Array} feedItems - the feed items\n     * @return {void}\n     */\n    fetchFeedItemsSuccessCallback = (feedItems: FeedItems): void => {\n        this.setState({ feedItems, activityFeedError: undefined });\n    };\n\n    /**\n     * Handles a failed feed item fetch\n     *\n     * @private\n     * @param {Error} e - API error\n     * @return {void}\n     */\n    fetchFeedItemsErrorCallback = (feedItems: FeedItems): void => {\n        this.setState({\n            feedItems,\n            activityFeedError: activityFeedInlineError,\n        });\n    };\n\n    /**\n     * Network error callback\n     *\n     * @private\n     * @param {Error} error - Error object\n     * @param {Error} code - the code for the error\n     * @param {Object} contextInfo - the context info for the error\n     * @return {void}\n     */\n    errorCallback = (error: ElementsXhrError, code: string, contextInfo: Object = {}): void => {\n        /* eslint-disable no-console */\n        console.error(error);\n        /* eslint-enable no-console */\n\n        // eslint-disable-next-line react/prop-types\n        this.props.onError(error, code, contextInfo);\n    };\n\n    /**\n     * User fetch success callback\n     *\n     * @private\n     * @param {Object} currentUser - User info object\n     * @return {void}\n     */\n    fetchCurrentUserSuccessCallback = (currentUser: User): void => {\n        this.setState({ currentUser, currentUserError: undefined });\n    };\n\n    /**\n     * File approver contacts fetch success callback\n     *\n     * @private\n     * @param {BoxItemCollection} collaborators - Collaborators response data\n     * @return {void}\n     */\n    getApproverContactsSuccessCallback = (collaborators: Collaborators): void => {\n        const { entries } = collaborators;\n        this.setState({ approverSelectorContacts: entries });\n    };\n\n    /**\n     * File @mention contacts fetch success callback\n     *\n     * @private\n     * @param {BoxItemCollection} collaborators - Collaborators response data\n     * @return {void}\n     */\n    getMentionContactsSuccessCallback = (collaborators: Collaborators): void => {\n        const { entries } = collaborators;\n        this.setState({ mentionSelectorContacts: entries });\n    };\n\n    /**\n     * File @mention contacts fetch success callback\n     *\n     * @private\n     * @param {string} searchStr - Search string to filter file collaborators by\n     * @return {void}\n     */\n    getApproverWithQuery = debounce(\n        this.getCollaborators.bind(this, this.getApproverContactsSuccessCallback, this.errorCallback),\n        DEFAULT_COLLAB_DEBOUNCE,\n    );\n\n    /**\n     * Fetches file @mention's\n     *\n     * @private\n     * @param {string} searchStr - Search string to filter file collaborators by\n     * @return {void}\n     */\n    getMentionWithQuery = debounce(\n        this.getCollaborators.bind(this, this.getMentionContactsSuccessCallback, this.errorCallback),\n        DEFAULT_COLLAB_DEBOUNCE,\n    );\n\n    /**\n     * Fetches file collaborators\n     *\n     * @param {Function} successCallback - the success callback\n     * @param {Function} errorCallback - the error callback\n     * @param {string} searchStr - the search string\n     * @return {void}\n     */\n    getCollaborators(successCallback: Function, errorCallback: ElementsErrorCallback, searchStr: string): void {\n        // Do not fetch without filter\n        const { file, api } = this.props;\n        if (!searchStr || searchStr.trim() === '') {\n            return;\n        }\n\n        api.getFileCollaboratorsAPI(true).getFileCollaborators(file.id, successCallback, errorCallback, {\n            filter_term: searchStr,\n        });\n    }\n\n    /**\n     * Handles a failed file user info fetch\n     *\n     * @private\n     * @param {ElementsXhrError} e - API error\n     * @return {void}\n     */\n    fetchCurrentUserErrorCallback = (e: ElementsXhrError, code: string) => {\n        this.setState({\n            currentUser: undefined,\n            currentUserError: {\n                maskError: {\n                    errorHeader: messages.currentUserErrorHeaderMessage,\n                    errorSubHeader: messages.defaultErrorMaskSubHeaderMessage,\n                },\n            },\n        });\n\n        this.errorCallback(e, code, {\n            error: e,\n        });\n    };\n\n    /**\n     * Gets the user avatar URL\n     *\n     * @param {string} userId the user id\n     * @param {string} fileId the file id\n     * @return the user avatar URL string for a given user with access token attached\n     */\n    getAvatarUrl = async (userId: string): Promise<?string> => {\n        const { file, api } = this.props;\n\n        return api.getUsersAPI(false).getAvatarUrlWithAccessToken(userId, file.id);\n    };\n\n    onTaskModalClose = () => {\n        this.setState({\n            approverSelectorContacts: [],\n        });\n    };\n\n    refresh(): void {\n        this.fetchFeedItems(true);\n    }\n\n    renderAddTaskButton = () => {\n        const { isDisabled } = this.props;\n        const { approverSelectorContacts } = this.state;\n        const { getApproverWithQuery, getAvatarUrl, createTask, onTaskModalClose } = this;\n        const taskFormProps = {\n            approverSelectorContacts,\n            completionRule: TASK_COMPLETION_RULE_ALL,\n            createTask,\n            getApproverWithQuery,\n            getAvatarUrl,\n            id: '',\n            message: '',\n            approvers: [],\n        };\n        return (\n            <AddTaskButton isDisabled={isDisabled} onTaskModalClose={onTaskModalClose} taskFormProps={taskFormProps} />\n        );\n    };\n\n    render() {\n        const {\n            elementId,\n            file,\n            isDisabled = false,\n            onVersionHistoryClick,\n            getUserProfileUrl,\n            activeFeedEntryId,\n            activeFeedEntryType,\n        } = this.props;\n        const {\n            currentUser,\n            approverSelectorContacts,\n            mentionSelectorContacts,\n            feedItems,\n            activityFeedError,\n            currentUserError,\n        } = this.state;\n\n        return (\n            <SidebarContent\n                actions={this.renderAddTaskButton()}\n                className=\"bcs-activity\"\n                elementId={elementId}\n                sidebarView={SIDEBAR_VIEW_ACTIVITY}\n                title={<FormattedMessage {...messages.sidebarActivityTitle} />}\n            >\n                <ActivityFeed\n                    file={file}\n                    activityFeedError={activityFeedError}\n                    approverSelectorContacts={approverSelectorContacts}\n                    mentionSelectorContacts={mentionSelectorContacts}\n                    currentUser={currentUser}\n                    isDisabled={isDisabled}\n                    onAppActivityDelete={this.deleteAppActivity}\n                    onCommentCreate={this.createComment}\n                    onCommentDelete={this.deleteComment}\n                    onCommentUpdate={this.updateComment}\n                    onTaskCreate={this.createTask}\n                    onTaskDelete={this.deleteTask}\n                    onTaskUpdate={this.updateTask}\n                    onTaskModalClose={this.onTaskModalClose}\n                    onTaskAssignmentUpdate={this.updateTaskAssignment}\n                    getApproverWithQuery={this.getApproverWithQuery}\n                    getMentionWithQuery={this.getMentionWithQuery}\n                    onVersionHistoryClick={onVersionHistoryClick}\n                    getAvatarUrl={this.getAvatarUrl}\n                    getUserProfileUrl={getUserProfileUrl}\n                    feedItems={feedItems}\n                    currentUserError={currentUserError}\n                    activeFeedEntryId={activeFeedEntryId}\n                    activeFeedEntryType={activeFeedEntryType}\n                />\n            </SidebarContent>\n        );\n    }\n}\n\nexport type ActivitySidebarProps = ExternalProps;\nexport { ActivitySidebar as ActivitySidebarComponent };\nexport default flow([\n    withLogger(ORIGIN_ACTIVITY_SIDEBAR),\n    withErrorBoundary(ORIGIN_ACTIVITY_SIDEBAR),\n    withAPIContext,\n    withFeatureConsumer,\n])(ActivitySidebar);\n"],"file":"ActivitySidebar.js"}