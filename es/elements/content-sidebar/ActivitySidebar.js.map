{"version":3,"sources":["../../../src/elements/content-sidebar/ActivitySidebar.js"],"names":["React","debounce","flow","getProp","noop","FormattedMessage","ActivityFeed","AddTaskButton","API","messages","SidebarContent","WithAnnotatorContextProps","withAnnotatorContext","EVENT_JS_READY","getBadUserError","getBadItemError","mark","withAPIContext","withErrorBoundary","withFeatureConsumer","isFeatureEnabled","withLogger","withRouterAndRef","DEFAULT_COLLAB_DEBOUNCE","ERROR_CODE_FETCH_ACTIVITY","ORIGIN_ACTIVITY_SIDEBAR","SIDEBAR_VIEW_ACTIVITY","TASK_COMPLETION_RULE_ALL","activityFeedInlineError","inlineError","title","errorOccured","content","activityFeedItemApiError","MARK_NAME_JS_READY","ActivitySidebar","props","id","permissions","api","file","getFeedAPI","deleteAnnotation","deleteAnnotationSuccess","bind","feedErrorCallback","fetchFeedItems","text","updateAnnotation","feedSuccessCallback","e","code","contextInfo","errorCallback","message","assignees","taskType","dueAt","completionRule","onSuccess","onError","currentUser","state","successCallback","createTaskNew","task","onTaskDelete","deleteTaskNew","taskId","onTaskUpdate","updateTaskNew","taskAssignmentId","status","onTaskAssignmentUpdate","updateTaskCollaborator","onCommentDelete","deleteComment","comment","hasMention","onCommentUpdate","updateComment","onCommentCreate","createComment","deleteAppActivity","feedItems","setState","activityFeedError","undefined","errors","Array","isArray","length","Error","showNotification","map","error","console","currentUserError","collaborators","entries","approverSelectorContacts","contactsLoaded","mentionSelectorContacts","searchStr","getCollaborators","getApproverContactsSuccessCallback","includeGroups","getMentionContactsSuccessCallback","maskError","errorHeader","currentUserErrorHeaderMessage","errorSubHeader","defaultErrorMaskSubHeaderMessage","userId","getUsersAPI","getAvatarUrlWithAccessToken","annotation","file_version","nextActiveAnnotationId","emitAnnotatorActiveChangeEvent","getAnnotationsMatchPath","getAnnotationsPath","history","location","onAnnotationSelect","annotationFileVersionId","currentFileVersionId","match","selectedFileVersionId","push","isDisabled","getApproverWithQuery","getAvatarUrl","createTask","onTaskModalClose","taskFormProps","approvers","logger","onReadyMetric","endMarkName","fetchCurrentUser","emitRemoveEvent","user","shouldDestroy","getUser","fetchCurrentUserSuccessCallback","fetchCurrentUserErrorCallback","shouldRefreshCache","features","shouldShowAppActivity","shouldShowAnnotations","fetchFeedItemsSuccessCallback","fetchFeedItemsErrorCallback","trim","getFileCollaboratorsAPI","getFileCollaborators","filter_term","include_groups","include_uploader_collabs","elementId","onVersionHistoryClick","getUserProfileUrl","activeFeedEntryId","activeFeedEntryType","onTaskView","renderAddTaskButton","sidebarActivityTitle","getMentionWithQuery","handleAnnotationDelete","handleAnnotationEdit","handleAnnotationSelect","updateTaskAssignment","deleteTask","updateTask","PureComponent","annotatorState","onTaskCreate","onVersionChange","ActivitySidebarComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAMA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,yBAAT,EAAoCC,oBAApC,QAAgE,6BAAhE;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,mBAAjD;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,mBAAT,EAA8BC,gBAA9B,QAAsD,4BAAtD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SACIC,uBADJ,EAEIC,yBAFJ,EAGIC,uBAHJ,EAIIC,qBAJJ,EAKIC,wBALJ,QAMO,iBANP;AAqBA,OAAO,wBAAP;AA8CA,OAAO,IAAMC,uBAA+B,GAAG;AAC3CC,EAAAA,WAAW,EAAE;AACTC,IAAAA,KAAK,EAAErB,QAAQ,CAACsB,YADP;AAETC,IAAAA,OAAO,EAAEvB,QAAQ,CAACwB;AAFT;AAD8B,CAAxC;AAOP,IAAMC,kBAAkB,aAAMT,uBAAN,cAAiCZ,cAAjC,CAAxB;AAEAG,IAAI,CAACkB,kBAAD,CAAJ;;IAEMC,e;;;;;AAmBF,2BAAYC,KAAZ,EAA0B;AAAA;;AAAA;;AACtB,yFAAMA,KAAN,GADsB,CAEtB;;AAFsB,6EAiBD,gBAA4E;AAAA,UAAzEC,EAAyE,QAAzEA,EAAyE;AAAA,UAArEC,WAAqE,QAArEA,WAAqE;AAAA,wBAC3E,MAAKF,KADsE;AAAA,UACzFG,GADyF,eACzFA,GADyF;AAAA,UACpFC,IADoF,eACpFA,IADoF;AAGjGD,MAAAA,GAAG,CAACE,UAAJ,CAAe,KAAf,EAAsBC,gBAAtB,CACIF,IADJ,EAEIH,EAFJ,EAGIC,WAHJ,EAII,MAAKK,uBAAL,CAA6BC,IAA7B,gCAAwCP,EAAxC,CAJJ,EAKI,MAAKQ,iBALT;;AAQA,YAAKC,cAAL;AACH,KA7ByB;;AAAA,2EA+BH,UAACT,EAAD,EAAaU,IAAb,EAA2BT,WAA3B,EAAiE;AAAA,yBAC9D,MAAKF,KADyD;AAAA,UAC5EG,GAD4E,gBAC5EA,GAD4E;AAAA,UACvEC,IADuE,gBACvEA,IADuE;AAGpFD,MAAAA,GAAG,CAACE,UAAJ,CAAe,KAAf,EAAsBO,gBAAtB,CACIR,IADJ,EAEIH,EAFJ,EAGIU,IAHJ,EAIIT,WAJJ,EAKI,MAAKW,mBALT,EAMI,MAAKJ,iBANT;;AASA,YAAKC,cAAL;AACH,KA5CyB;;AAAA,0EAkFJ,YAAY;AAC9B,YAAKA,cAAL;AACH,KApFyB;;AAAA,wEA6FN,UAACI,CAAD,EAAsBC,IAAtB,EAAoCC,WAApC,EAA6D;AAC7E,YAAKC,aAAL,CAAmBH,CAAnB,EAAsBC,IAAtB,EAA4BC,WAA5B;;AACA,YAAKN,cAAL;AACH,KAhGyB;;AAAA,iEAkGb,UACTQ,OADS,EAETC,SAFS,EAGTC,QAHS,EAITC,KAJS,EAKTC,cALS,EAMTC,SANS,EAOTC,OAPS,EAQF;AAAA,UACCC,WADD,GACiB,MAAKC,KADtB,CACCD,WADD;AAAA,yBAEe,MAAKzB,KAFpB;AAAA,UAECI,IAFD,gBAECA,IAFD;AAAA,UAEOD,GAFP,gBAEOA,GAFP;;AAIP,UAAI,CAACsB,WAAL,EAAkB;AACd,cAAM/C,eAAe,EAArB;AACH;;AACD,UAAMuC,aAAa,GAAG,SAAhBA,aAAgB,CAACH,CAAD,EAAIC,IAAJ,EAAUC,WAAV,EAA0B;AAC5C,YAAIQ,OAAJ,EAAa;AACTA,UAAAA,OAAO,CAACV,CAAD,EAAIC,IAAJ,EAAUC,WAAV,CAAP;AACH;;AACD,cAAKP,iBAAL,CAAuBK,CAAvB,EAA0BC,IAA1B,EAAgCC,WAAhC;AACH,OALD;;AAMA,UAAMW,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1B,YAAIJ,SAAJ,EAAe;AACXA,UAAAA,SAAS;AACZ;;AACD,cAAKV,mBAAL;AACH,OALD;;AAOAV,MAAAA,GAAG,CAACE,UAAJ,CAAe,KAAf,EAAsBuB,aAAtB,CACIxB,IADJ,EAEIqB,WAFJ,EAGIP,OAHJ,EAIIC,SAJJ,EAKIC,QALJ,EAMIC,KANJ,EAOIC,cAPJ,EAQIK,eARJ,EASIV,aATJ,EApBO,CAgCP;;AACA,YAAKP,cAAL;AACH,KA5IyB;;AAAA,iEA8Ib,UAACmB,IAAD,EAAyB;AAAA,yBACE,MAAK7B,KADP;AAAA,UAC1BI,IAD0B,gBAC1BA,IAD0B;AAAA,UACpBD,GADoB,gBACpBA,GADoB;AAAA,UACf2B,YADe,gBACfA,YADe;AAElC3B,MAAAA,GAAG,CAACE,UAAJ,CAAe,KAAf,EAAsB0B,aAAtB,CACI3B,IADJ,EAEIyB,IAFJ,EAGI,UAACG,MAAD,EAAoB;AAChB,cAAKnB,mBAAL;;AACAiB,QAAAA,YAAY,CAACE,MAAD,CAAZ;AACH,OANL,EAOI,MAAKvB,iBAPT,EAFkC,CAYlC;;AACA,YAAKC,cAAL;AACH,KA5JyB;;AAAA,iEA8Jb,UAACmB,IAAD,EAA0BN,SAA1B,EAAgDC,OAAhD,EAA6E;AAAA,yBAClD,MAAKxB,KAD6C;AAAA,UAC9EI,IAD8E,gBAC9EA,IAD8E;AAAA,UACxED,GADwE,gBACxEA,GADwE;AAAA,UACnE8B,YADmE,gBACnEA,YADmE;;AAEtF,UAAMhB,aAAa,GAAG,SAAhBA,aAAgB,CAACH,CAAD,EAAIC,IAAJ,EAAa;AAC/B,YAAIS,OAAJ,EAAa;AACTA,UAAAA,OAAO,CAACV,CAAD,EAAIC,IAAJ,CAAP;AACH;;AACD,cAAKN,iBAAL,CAAuBK,CAAvB,EAA0BC,IAA1B;AACH,OALD;;AAMA,UAAMY,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1B,cAAKd,mBAAL;;AAEA,YAAIU,SAAJ,EAAe;AACXA,UAAAA,SAAS;AACZ;;AAEDU,QAAAA,YAAY;AACf,OARD;;AAUA9B,MAAAA,GAAG,CAACE,UAAJ,CAAe,KAAf,EAAsB6B,aAAtB,CAAoC9B,IAApC,EAA0CyB,IAA1C,EAAgDF,eAAhD,EAAiEV,aAAjE,EAlBsF,CAoBtF;;AACA,YAAKP,cAAL;AACH,KApLyB;;AAAA,2EAsLH,UAACsB,MAAD,EAAiBG,gBAAjB,EAA2CC,MAA3C,EAA8E;AAAA,yBACnD,MAAKpC,KAD8C;AAAA,UACzFI,IADyF,gBACzFA,IADyF;AAAA,UACnFD,GADmF,gBACnFA,GADmF;AAAA,UAC9EkC,sBAD8E,gBAC9EA,sBAD8E;AAAA,kCAEpE,MAAKX,KAF+D,CAEzFD,WAFyF;AAAA,UAEzFA,WAFyF,sCAE3E,EAF2E;;AAIjG,UAAME,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1B,cAAKd,mBAAL;;AACAwB,QAAAA,sBAAsB,CAACL,MAAD,EAASG,gBAAT,EAA2BC,MAA3B,EAAmCX,WAAW,CAACxB,EAA/C,CAAtB;AACH,OAHD;;AAKAE,MAAAA,GAAG,CAACE,UAAJ,CAAe,KAAf,EAAsBiC,sBAAtB,CACIlC,IADJ,EAEI4B,MAFJ,EAGIG,gBAHJ,EAIIC,MAJJ,EAKIT,eALJ,EAMI,MAAKlB,iBANT,EATiG,CAkBjG;;AACA,YAAKC,cAAL;AACH,KA1MyB;;AAAA,oEAkNV,iBAA+E;AAAA,UAA5ET,EAA4E,SAA5EA,EAA4E;AAAA,UAAxEC,WAAwE,SAAxEA,WAAwE;AAAA,yBACpD,MAAKF,KAD+C;AAAA,UACnFI,IADmF,gBACnFA,IADmF;AAAA,UAC7ED,GAD6E,gBAC7EA,GAD6E;AAAA,UACxEoC,eADwE,gBACxEA,eADwE;AAG3FpC,MAAAA,GAAG,CAACE,UAAJ,CAAe,KAAf,EAAsBmC,aAAtB,CACIpC,IADJ,EAEIH,EAFJ,EAGIC,WAHJ,EAII,UAACuC,OAAD,EAAsB;AAClB,cAAK5B,mBAAL;;AACA0B,QAAAA,eAAe,CAACE,OAAD,CAAf;AACH,OAPL,EAQI,MAAKhC,iBART,EAH2F,CAc3F;;AACA,YAAKC,cAAL;AACH,KAlOyB;;AAAA,oEAoOV,UACZT,EADY,EAEZU,IAFY,EAGZ+B,UAHY,EAIZxC,WAJY,EAKZqB,SALY,EAMZC,OANY,EAOL;AAAA,yBACgC,MAAKxB,KADrC;AAAA,UACCI,IADD,gBACCA,IADD;AAAA,UACOD,GADP,gBACOA,GADP;AAAA,UACYwC,eADZ,gBACYA,eADZ;;AAGP,UAAM1B,aAAa,GAAG,SAAhBA,aAAgB,CAACH,CAAD,EAAIC,IAAJ,EAAa;AAC/B,YAAIS,OAAJ,EAAa;AACTA,UAAAA,OAAO,CAACV,CAAD,EAAIC,IAAJ,CAAP;AACH;;AACD,cAAKN,iBAAL,CAAuBK,CAAvB,EAA0BC,IAA1B;AACH,OALD;;AAOA,UAAMY,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1B,cAAKd,mBAAL;;AACA,YAAIU,SAAJ,EAAe;AACXA,UAAAA,SAAS;AACZ;;AACDoB,QAAAA,eAAe;AAClB,OAND;;AAQAxC,MAAAA,GAAG,CAACE,UAAJ,CAAe,KAAf,EAAsBuC,aAAtB,CAAoCxC,IAApC,EAA0CH,EAA1C,EAA8CU,IAA9C,EAAoD+B,UAApD,EAAgExC,WAAhE,EAA6EyB,eAA7E,EAA8FV,aAA9F,EAlBO,CAoBP;;AACA,YAAKP,cAAL;AACH,KAjQyB;;AAAA,oEA0QV,UAACC,IAAD,EAAe+B,UAAf,EAA6C;AAAA,yBAClB,MAAK1C,KADa;AAAA,UACjDI,IADiD,gBACjDA,IADiD;AAAA,UAC3CD,GAD2C,gBAC3CA,GAD2C;AAAA,UACtC0C,eADsC,gBACtCA,eADsC;AAAA,UAEjDpB,WAFiD,GAEjC,MAAKC,KAF4B,CAEjDD,WAFiD;;AAIzD,UAAI,CAACA,WAAL,EAAkB;AACd,cAAM/C,eAAe,EAArB;AACH;;AAEDyB,MAAAA,GAAG,CAACE,UAAJ,CAAe,KAAf,EAAsByC,aAAtB,CACI1C,IADJ,EAEIqB,WAFJ,EAGId,IAHJ,EAII+B,UAJJ,EAKI,UAACD,OAAD,EAAsB;AAClBI,QAAAA,eAAe,CAACJ,OAAD,CAAf;;AACA,cAAK5B,mBAAL;AACH,OARL,EASI,MAAKJ,iBATT,EARyD,CAoBzD;;AACA,YAAKC,cAAL;AACH,KAhSyB;;AAAA,wEAwSN,iBAAkC;AAAA,UAA/BT,EAA+B,SAA/BA,EAA+B;AAAA,0BAC5B,MAAKD,KADuB;AAAA,UAC1CI,IAD0C,iBAC1CA,IAD0C;AAAA,UACpCD,GADoC,iBACpCA,GADoC;AAGlDA,MAAAA,GAAG,CAACE,UAAJ,CAAe,KAAf,EAAsB0C,iBAAtB,CAAwC3C,IAAxC,EAA8CH,EAA9C,EAAkD,MAAKY,mBAAvD,EAA4E,MAAKJ,iBAAjF,EAHkD,CAKlD;;AACA,YAAKC,cAAL;AACH,KA/SyB;;AAAA,oFA4UM,UAACsC,SAAD,EAAgC;AAC5D,YAAKC,QAAL,CAAc;AAAED,QAAAA,SAAS,EAATA,SAAF;AAAaE,QAAAA,iBAAiB,EAAEC;AAAhC,OAAd;AACH,KA9UyB;;AAAA,kFAuVI,UAACH,SAAD,EAAuBI,MAAvB,EAA4D;AAAA,UAC9E5B,OAD8E,GAClE,MAAKxB,KAD6D,CAC9EwB,OAD8E;;AAGtF,YAAKyB,QAAL,CAAc;AACVD,QAAAA,SAAS,EAATA,SADU;AAEVE,QAAAA,iBAAiB,EAAE1D;AAFT,OAAd;;AAKA,UAAI6D,KAAK,CAACC,OAAN,CAAcF,MAAd,KAAyBA,MAAM,CAACG,MAApC,EAA4C;AACxC/B,QAAAA,OAAO,CAAC,IAAIgC,KAAJ,CAAU,wBAAV,CAAD,EAAsCpE,yBAAtC,EAAiE;AACpEqE,UAAAA,gBAAgB,EAAE,IADkD;AAEpEL,UAAAA,MAAM,EAAEA,MAAM,CAACM,GAAP,CAAW;AAAA,gBAAG3C,IAAH,SAAGA,IAAH;AAAA,mBAAcA,IAAd;AAAA,WAAX;AAF4D,SAAjE,CAAP;AAIH;AACJ,KArWyB;;AAAA,oEAgXV,UAAC4C,KAAD,EAA0B5C,IAA1B,EAA2E;AAAA,UAAnCC,WAAmC,uEAAb,EAAa;;AACvF;AACA4C,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA;AAEA;;AACA,YAAK3D,KAAL,CAAWwB,OAAX,CAAmBmC,KAAnB,EAA0B5C,IAA1B,EAAgCC,WAAhC;AACH,KAvXyB;;AAAA,sFAgYQ,UAACS,WAAD,EAA6B;AAC3D,YAAKwB,QAAL,CAAc;AAAExB,QAAAA,WAAW,EAAXA,WAAF;AAAeoC,QAAAA,gBAAgB,EAAEV;AAAjC,OAAd;AACH,KAlYyB;;AAAA,yFA2YW,UAACW,aAAD,EAAuD;AAAA,UAChFC,OADgF,GACpED,aADoE,CAChFC,OADgF;;AAExF,YAAKd,QAAL,CAAc;AAAEe,QAAAA,wBAAwB,EAAED;AAA5B,OAAd;AACH,KA9YyB;;AAAA,wFAuZU,UAACD,aAAD,EAAuD;AAAA,UAC/EC,OAD+E,GACnED,aADmE,CAC/EC,OAD+E;;AAEvF,YAAKd,QAAL,CAAc;AAAEgB,QAAAA,cAAc,EAAE;AAAlB,OAAd,EAAyC;AAAA,eACrC,MAAKhB,QAAL,CAAc;AACVgB,UAAAA,cAAc,EAAE,IADN;AAEVC,UAAAA,uBAAuB,EAAEH;AAFf,SAAd,CADqC;AAAA,OAAzC;AAMH,KA/ZyB;;AAAA,2EAwaHlG,QAAQ,CAC3B,UAACsG,SAAD;AAAA,aACI,MAAKC,gBAAL,CAAsB,MAAKC,kCAA3B,EAA+D,MAAKpD,aAApE,EAAmFkD,SAAnF,EAA8F;AAC1FG,QAAAA,aAAa,EAAE;AAD2E,OAA9F,CADJ;AAAA,KAD2B,EAK3BnF,uBAL2B,CAxaL;;AAAA,0EAubJtB,QAAQ,CAC1B,UAACsG,SAAD;AAAA,aACI,MAAKC,gBAAL,CAAsB,MAAKG,iCAA3B,EAA8D,MAAKtD,aAAnE,EAAkFkD,SAAlF,CADJ;AAAA,KAD0B,EAG1BhF,uBAH0B,CAvbJ;;AAAA,oFAieM,UAAC2B,CAAD,EAAsBC,IAAtB,EAAuC;AACnE,YAAKkC,QAAL,CAAc;AACVxB,QAAAA,WAAW,EAAE0B,SADH;AAEVU,QAAAA,gBAAgB,EAAE;AACdW,UAAAA,SAAS,EAAE;AACPC,YAAAA,WAAW,EAAEpG,QAAQ,CAACqG,6BADf;AAEPC,YAAAA,cAAc,EAAEtG,QAAQ,CAACuG;AAFlB;AADG;AAFR,OAAd;;AAUA,YAAK3D,aAAL,CAAmBH,CAAnB,EAAsBC,IAAtB,EAA4B;AACxB4C,QAAAA,KAAK,EAAE7C;AADiB,OAA5B;AAGH,KA/eyB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAwfX,iBAAO+D,MAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gCACW,MAAK7E,KADhB,EACHI,IADG,iBACHA,IADG,EACGD,GADH,iBACGA,GADH;AAAA,iDAGJA,GAAG,CAAC2E,WAAJ,CAAgB,KAAhB,EAAuBC,2BAAvB,CAAmDF,MAAnD,EAA2DzE,IAAI,CAACH,EAAhE,CAHI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAxfW;;AAAA;AAAA;AAAA;AAAA;;AAAA,6EA8fD,UAAC+E,UAAD,EAAkC;AAAA,UAC/CC,YAD+C,GACFD,UADE,CAC/CC,YAD+C;AAAA,UAC7BC,sBAD6B,GACFF,UADE,CACjC/E,EADiC;AAAA,0BAUnD,MAAKD,KAV8C;AAAA,UAGnDmF,8BAHmD,iBAGnDA,8BAHmD;AAAA,UAInD/E,IAJmD,iBAInDA,IAJmD;AAAA,UAKnDgF,uBALmD,iBAKnDA,uBALmD;AAAA,UAMnDC,kBANmD,iBAMnDA,kBANmD;AAAA,UAOnDC,OAPmD,iBAOnDA,OAPmD;AAAA,UAQnDC,QARmD,iBAQnDA,QARmD;AAAA,UASnDC,kBATmD,iBASnDA,kBATmD;AAWvD,UAAMC,uBAAuB,GAAG1H,OAAO,CAACkH,YAAD,EAAe,IAAf,CAAvC;AACA,UAAMS,oBAAoB,GAAG3H,OAAO,CAACqC,IAAD,EAAO,iBAAP,CAApC;AACA,UAAMuF,KAAK,GAAGP,uBAAuB,CAACG,QAAD,CAArC;AACA,UAAMK,qBAAqB,GAAG7H,OAAO,CAAC4H,KAAD,EAAQ,sBAAR,EAAgCD,oBAAhC,CAArC;AAEAP,MAAAA,8BAA8B,CAACD,sBAAD,CAA9B;;AAEA,UAAIO,uBAAuB,IAAIA,uBAAuB,KAAKG,qBAA3D,EAAkF;AAC9EN,QAAAA,OAAO,CAACO,IAAR,CAAaR,kBAAkB,CAACI,uBAAD,EAA0BP,sBAA1B,CAA/B;AACH;;AAEDM,MAAAA,kBAAkB,CAACR,UAAD,CAAlB;AACH,KArhByB;;AAAA,uEAuhBP,YAAM;AACrB,YAAK/B,QAAL,CAAc;AACVe,QAAAA,wBAAwB,EAAE;AADhB,OAAd;AAGH,KA3hByB;;AAAA,0EAiiBJ,YAAM;AAAA,UAChB8B,UADgB,GACD,MAAK9F,KADJ,CAChB8F,UADgB;AAAA,UAEhB9B,wBAFgB,GAEa,MAAKtC,KAFlB,CAEhBsC,wBAFgB;;AAAA;AAAA,UAGhB+B,oBAHgB,yBAGhBA,oBAHgB;AAAA,UAGMC,YAHN,yBAGMA,YAHN;AAAA,UAGoBC,UAHpB,yBAGoBA,UAHpB;AAAA,UAGgCC,gBAHhC,yBAGgCA,gBAHhC;;AAIxB,UAAMC,aAAa,GAAG;AAClBnC,QAAAA,wBAAwB,EAAxBA,wBADkB;AAElB1C,QAAAA,cAAc,EAAE/B,wBAFE;AAGlB0G,QAAAA,UAAU,EAAVA,UAHkB;AAIlBF,QAAAA,oBAAoB,EAApBA,oBAJkB;AAKlBC,QAAAA,YAAY,EAAZA,YALkB;AAMlB/F,QAAAA,EAAE,EAAE,EANc;AAOlBiB,QAAAA,OAAO,EAAE,EAPS;AAQlBkF,QAAAA,SAAS,EAAE;AARO,OAAtB;AAUA,aACI,oBAAC,aAAD;AAAe,QAAA,UAAU,EAAEN,UAA3B;AAAuC,QAAA,gBAAgB,EAAEI,gBAAzD;AAA2E,QAAA,aAAa,EAAEC;AAA1F,QADJ;AAGH,KAljByB;;AAAA,QAGdE,MAHc,GAGH,MAAKrG,KAHF,CAGdqG,MAHc;AAKtBA,IAAAA,MAAM,CAACC,aAAP,CAAqB;AACjBC,MAAAA,WAAW,EAAEzG;AADI,KAArB;AAGA,UAAK4B,KAAL,GAAa,EAAb;AARsB;AASzB;;;;wCAEmB;AAAA,UACRD,WADQ,GACQ,KAAKzB,KADb,CACRyB,WADQ;AAEhB,WAAKf,cAAL,CAAoB,IAApB;AACA,WAAK8F,gBAAL,CAAsB/E,WAAtB;AACH;;;4CA+BuBxB,E,EAAY;AAAA,UACxBwG,eADwB,GACJ,KAAKzG,KADD,CACxByG,eADwB;AAGhC,WAAK5F,mBAAL;AACA4F,MAAAA,eAAe,CAACxG,EAAD,CAAf;AACH;AAED;;;;;;;;;;;qCAQiByG,I,EAAoD;AAAA,UAAvCC,aAAuC,uEAAb,KAAa;AAAA,0BAC3C,KAAK3G,KADsC;AAAA,UACzDG,GADyD,iBACzDA,GADyD;AAAA,UACpDC,IADoD,iBACpDA,IADoD;;AAGjE,UAAI,CAACA,IAAL,EAAW;AACP,cAAMzB,eAAe,EAArB;AACH;;AAED,UAAI,OAAO+H,IAAP,KAAgB,WAApB,EAAiC;AAC7BvG,QAAAA,GAAG,CAAC2E,WAAJ,CAAgB6B,aAAhB,EAA+BC,OAA/B,CACIxG,IAAI,CAACH,EADT,EAEI,KAAK4G,+BAFT,EAGI,KAAKC,6BAHT;AAKH,OAND,MAMO;AACH,aAAK7D,QAAL,CAAc;AAAExB,UAAAA,WAAW,EAAEiF,IAAf;AAAqB7C,UAAAA,gBAAgB,EAAEV;AAAvC,SAAd;AACH;AACJ;AAED;;;;;;;AAkOA;;;;;qCAKoF;AAAA,UAArE4D,kBAAqE,uEAAvC,KAAuC;AAAA,UAAhCJ,aAAgC,uEAAP,KAAO;AAAA,0BAChD,KAAK3G,KAD2C;AAAA,UACxEI,IADwE,iBACxEA,IADwE;AAAA,UAClED,GADkE,iBAClEA,GADkE;AAAA,UAC7D6G,QAD6D,iBAC7DA,QAD6D;AAEhF,UAAMC,qBAAqB,GAAGjI,gBAAgB,CAACgI,QAAD,EAAW,kCAAX,CAA9C;AACA,UAAME,qBAAqB,GAAGlI,gBAAgB,CAACgI,QAAD,EAAW,kCAAX,CAA9C;AAEA7G,MAAAA,GAAG,CAACE,UAAJ,CAAesG,aAAf,EAA8B3D,SAA9B,CACI5C,IADJ,EAEI2G,kBAFJ,EAGI,KAAKI,6BAHT,EAII,KAAKC,2BAJT,EAKI,KAAKnG,aALT,EAMI;AAAEiG,QAAAA,qBAAqB,EAArBA,qBAAF;AAAyBD,QAAAA,qBAAqB,EAArBA;AAAzB,OANJ;AAQH;AAED;;;;;;;;;;;AAwHA;;;;;;;;;;qCAWItF,e,EACAV,a,EACAkD,S,EAEI;AAAA,sFADoD,EACpD;AAAA,sCADFG,aACE;AAAA,UADFA,aACE,oCADc,KACd;;AACJ;AADI,0BAEkB,KAAKtE,KAFvB;AAAA,UAEII,IAFJ,iBAEIA,IAFJ;AAAA,UAEUD,GAFV,iBAEUA,GAFV;;AAGJ,UAAI,CAACgE,SAAD,IAAcA,SAAS,CAACkD,IAAV,OAAqB,EAAvC,EAA2C;AACvC;AACH;;AAEDlH,MAAAA,GAAG,CAACmH,uBAAJ,CAA4B,IAA5B,EAAkCC,oBAAlC,CAAuDnH,IAAI,CAACH,EAA5D,EAAgE0B,eAAhE,EAAiFV,aAAjF,EAAgG;AAC5FuG,QAAAA,WAAW,EAAErD,SAD+E;AAE5FsD,QAAAA,cAAc,EAAEnD,aAF4E;AAG5FoD,QAAAA,wBAAwB,EAAE;AAHkE,OAAhG;AAKH;AAED;;;;;;;;;;8BAmEkD;AAAA,UAA1CX,kBAA0C,uEAAZ,IAAY;AAC9C,WAAKrG,cAAL,CAAoBqG,kBAApB;AACH;;;6BAqBQ;AAAA,0BAUD,KAAK/G,KAVJ;AAAA,UAED2H,SAFC,iBAEDA,SAFC;AAAA,UAGDvH,IAHC,iBAGDA,IAHC;AAAA,gDAID0F,UAJC;AAAA,UAIDA,UAJC,sCAIY,KAJZ;AAAA,UAKD8B,qBALC,iBAKDA,qBALC;AAAA,UAMDC,iBANC,iBAMDA,iBANC;AAAA,UAODC,iBAPC,iBAODA,iBAPC;AAAA,UAQDC,mBARC,iBAQDA,mBARC;AAAA,UASDC,UATC,iBASDA,UATC;AAAA,wBAmBD,KAAKtG,KAnBJ;AAAA,UAYDD,WAZC,eAYDA,WAZC;AAAA,UAaDuC,wBAbC,eAaDA,wBAbC;AAAA,UAcDE,uBAdC,eAcDA,uBAdC;AAAA,UAeDD,cAfC,eAeDA,cAfC;AAAA,UAgBDjB,SAhBC,eAgBDA,SAhBC;AAAA,UAiBDE,iBAjBC,eAiBDA,iBAjBC;AAAA,UAkBDW,gBAlBC,eAkBDA,gBAlBC;AAqBL,aACI,oBAAC,cAAD;AACI,QAAA,OAAO,EAAE,KAAKoE,mBAAL,EADb;AAEI,QAAA,SAAS,EAAC,cAFd;AAGI,QAAA,SAAS,EAAEN,SAHf;AAII,QAAA,WAAW,EAAErI,qBAJjB;AAKI,QAAA,KAAK,EAAE,oBAAC,gBAAD,EAAsBjB,QAAQ,CAAC6J,oBAA/B;AALX,SAOI,oBAAC,YAAD;AACI,QAAA,iBAAiB,EAAEJ,iBADvB;AAEI,QAAA,mBAAmB,EAAEC,mBAFzB;AAGI,QAAA,iBAAiB,EAAE7E,iBAHvB;AAII,QAAA,wBAAwB,EAAEc,wBAJ9B;AAKI,QAAA,WAAW,EAAEvC,WALjB;AAMI,QAAA,gBAAgB,EAAEoC,gBANtB;AAOI,QAAA,SAAS,EAAEb,SAPf;AAQI,QAAA,IAAI,EAAE5C,IARV;AASI,QAAA,oBAAoB,EAAE,KAAK2F,oBAT/B;AAUI,QAAA,YAAY,EAAE,KAAKC,YAVvB;AAWI,QAAA,mBAAmB,EAAE,KAAKmC,mBAX9B;AAYI,QAAA,iBAAiB,EAAEN,iBAZvB;AAaI,QAAA,UAAU,EAAE/B,UAbhB;AAcI,QAAA,uBAAuB,EAAE5B,uBAd7B;AAeI,QAAA,cAAc,EAAED,cAfpB;AAgBI,QAAA,kBAAkB,EAAE,KAAKmE,sBAhB7B;AAiBI,QAAA,gBAAgB,EAAE,KAAKC,oBAjB3B;AAkBI,QAAA,kBAAkB,EAAE,KAAKC,sBAlB7B;AAmBI,QAAA,mBAAmB,EAAE,KAAKvF,iBAnB9B;AAoBI,QAAA,eAAe,EAAE,KAAKD,aApB1B;AAqBI,QAAA,eAAe,EAAE,KAAKN,aArB1B;AAsBI,QAAA,eAAe,EAAE,KAAKI,aAtB1B;AAuBI,QAAA,sBAAsB,EAAE,KAAK2F,oBAvBjC;AAwBI,QAAA,YAAY,EAAE,KAAKtC,UAxBvB;AAyBI,QAAA,YAAY,EAAE,KAAKuC,UAzBvB;AA0BI,QAAA,gBAAgB,EAAE,KAAKtC,gBA1B3B;AA2BI,QAAA,YAAY,EAAE,KAAKuC,UA3BvB;AA4BI,QAAA,UAAU,EAAET,UA5BhB;AA6BI,QAAA,qBAAqB,EAAEJ;AA7B3B,QAPJ,CADJ;AAyCH;;;;EAroByBhK,KAAK,CAAC8K,a;;gBAA9B3I,e,kBACoB;AAClB4I,EAAAA,cAAc,EAAE,EADE;AAElBxD,EAAAA,8BAA8B,EAAEnH,IAFd;AAGlBoH,EAAAA,uBAAuB,EAAEpH,IAHP;AAIlBqH,EAAAA,kBAAkB,EAAErH,IAJF;AAKlB8H,EAAAA,UAAU,EAAE,KALM;AAMlBN,EAAAA,kBAAkB,EAAExH,IANF;AAOlB6E,EAAAA,eAAe,EAAE7E,IAPC;AAQlBuE,EAAAA,eAAe,EAAEvE,IARC;AASlB2E,EAAAA,eAAe,EAAE3E,IATC;AAUlBqE,EAAAA,sBAAsB,EAAErE,IAVN;AAWlB4K,EAAAA,YAAY,EAAE5K,IAXI;AAYlB8D,EAAAA,YAAY,EAAE9D,IAZI;AAalBiE,EAAAA,YAAY,EAAEjE,IAbI;AAclB6K,EAAAA,eAAe,EAAE7K,IAdC;AAelB4J,EAAAA,qBAAqB,EAAE5J;AAfL,C;;AAwoB1B,SAAS+B,eAAe,IAAI+I,wBAA5B;AACA,eAAehL,IAAI,CAAC,CAChBmB,UAAU,CAACI,uBAAD,CADM,EAEhBP,iBAAiB,CAACO,uBAAD,CAFD,EAGhBR,cAHgB,EAIhBE,mBAJgB,EAKhBP,oBALgB,EAMhBU,gBANgB,CAAD,CAAJ,CAOZa,eAPY,CAAf","sourcesContent":["/**\n * @flow\n * @file Activity feed sidebar component\n * @author Box\n */\n\nimport * as React from 'react';\nimport debounce from 'lodash/debounce';\nimport flow from 'lodash/flow';\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport { type ContextRouter } from 'react-router-dom';\nimport ActivityFeed from './activity-feed';\nimport AddTaskButton from './AddTaskButton';\nimport API from '../../api';\nimport messages from '../common/messages';\nimport SidebarContent from './SidebarContent';\nimport { WithAnnotatorContextProps, withAnnotatorContext } from '../common/annotator-context';\nimport { EVENT_JS_READY } from '../common/logger/constants';\nimport { getBadUserError, getBadItemError } from '../../utils/error';\nimport { mark } from '../../utils/performance';\nimport { withAPIContext } from '../common/api-context';\nimport { withErrorBoundary } from '../common/error-boundary';\nimport { withFeatureConsumer, isFeatureEnabled } from '../common/feature-checking';\nimport { withLogger } from '../common/logger';\nimport { withRouterAndRef } from '../common/routing';\nimport {\n    DEFAULT_COLLAB_DEBOUNCE,\n    ERROR_CODE_FETCH_ACTIVITY,\n    ORIGIN_ACTIVITY_SIDEBAR,\n    SIDEBAR_VIEW_ACTIVITY,\n    TASK_COMPLETION_RULE_ALL,\n} from '../../constants';\nimport type {\n    TaskCompletionRule,\n    TaskType,\n    TaskNew,\n    TaskUpdatePayload,\n    TaskCollabStatus,\n} from '../../common/types/tasks';\nimport type { Annotation, AnnotationPermission, FocusableFeedItemType, FeedItems } from '../../common/types/feed';\nimport type { ElementsErrorCallback, ErrorContextProps, ElementsXhrError } from '../../common/types/api';\nimport type { WithLoggerProps } from '../../common/types/logging';\nimport type { SelectorItems, User, UserMini, GroupMini, BoxItem, BoxItemPermission } from '../../common/types/core';\nimport type { GetProfileUrlCallback } from '../common/flowTypes';\nimport type { Translations, Collaborators, Errors } from './flowTypes';\nimport type { FeatureConfig } from '../common/feature-checking';\nimport './ActivitySidebar.scss';\n\ntype ExternalProps = {\n    activeFeedEntryId?: string,\n    activeFeedEntryType?: FocusableFeedItemType,\n    currentUser?: User,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    onCommentCreate: Function,\n    onCommentDelete: (comment: Comment) => any,\n    onCommentUpdate: () => any,\n    onTaskAssignmentUpdate: Function,\n    onTaskCreate: Function,\n    onTaskDelete: (id: string) => any,\n    onTaskUpdate: () => any,\n    onTaskView: (id: string, isCreator: boolean) => any,\n} & ErrorContextProps &\n    WithAnnotatorContextProps;\n\ntype PropsWithoutContext = {\n    elementId: string,\n    file: BoxItem,\n    hasSidebarInitialized?: boolean,\n    isDisabled: boolean,\n    onAnnotationSelect: Function,\n    onVersionChange: Function,\n    onVersionHistoryClick?: Function,\n    translations?: Translations,\n} & ExternalProps &\n    WithLoggerProps &\n    ContextRouter;\n\ntype Props = {\n    api: API,\n    features: FeatureConfig,\n} & PropsWithoutContext;\n\ntype State = {\n    activityFeedError?: Errors,\n    approverSelectorContacts: SelectorItems<UserMini | GroupMini>,\n    contactsLoaded?: boolean,\n    currentUser?: User,\n    currentUserError?: Errors,\n    feedItems?: FeedItems,\n    mentionSelectorContacts?: SelectorItems<UserMini>,\n};\n\nexport const activityFeedInlineError: Errors = {\n    inlineError: {\n        title: messages.errorOccured,\n        content: messages.activityFeedItemApiError,\n    },\n};\n\nconst MARK_NAME_JS_READY = `${ORIGIN_ACTIVITY_SIDEBAR}_${EVENT_JS_READY}`;\n\nmark(MARK_NAME_JS_READY);\n\nclass ActivitySidebar extends React.PureComponent<Props, State> {\n    static defaultProps = {\n        annotatorState: {},\n        emitAnnotatorActiveChangeEvent: noop,\n        getAnnotationsMatchPath: noop,\n        getAnnotationsPath: noop,\n        isDisabled: false,\n        onAnnotationSelect: noop,\n        onCommentCreate: noop,\n        onCommentDelete: noop,\n        onCommentUpdate: noop,\n        onTaskAssignmentUpdate: noop,\n        onTaskCreate: noop,\n        onTaskDelete: noop,\n        onTaskUpdate: noop,\n        onVersionChange: noop,\n        onVersionHistoryClick: noop,\n    };\n\n    constructor(props: Props) {\n        super(props);\n        // eslint-disable-next-line react/prop-types\n        const { logger } = this.props;\n\n        logger.onReadyMetric({\n            endMarkName: MARK_NAME_JS_READY,\n        });\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { currentUser } = this.props;\n        this.fetchFeedItems(true);\n        this.fetchCurrentUser(currentUser);\n    }\n\n    handleAnnotationDelete = ({ id, permissions }: { id: string, permissions: AnnotationPermission }) => {\n        const { api, file } = this.props;\n\n        api.getFeedAPI(false).deleteAnnotation(\n            file,\n            id,\n            permissions,\n            this.deleteAnnotationSuccess.bind(this, id),\n            this.feedErrorCallback,\n        );\n\n        this.fetchFeedItems();\n    };\n\n    handleAnnotationEdit = (id: string, text: string, permissions: AnnotationPermission) => {\n        const { api, file } = this.props;\n\n        api.getFeedAPI(false).updateAnnotation(\n            file,\n            id,\n            text,\n            permissions,\n            this.feedSuccessCallback,\n            this.feedErrorCallback,\n        );\n\n        this.fetchFeedItems();\n    };\n\n    deleteAnnotationSuccess(id: string) {\n        const { emitRemoveEvent } = this.props;\n\n        this.feedSuccessCallback();\n        emitRemoveEvent(id);\n    }\n\n    /**\n     * Fetches a Users info\n     *\n     * @private\n     * @param {User} [user] - Box User. If missing, gets user that the current token was generated for.\n     * @param {boolean} shouldDestroy\n     * @return {void}\n     */\n    fetchCurrentUser(user?: User, shouldDestroy?: boolean = false): void {\n        const { api, file } = this.props;\n\n        if (!file) {\n            throw getBadItemError();\n        }\n\n        if (typeof user === 'undefined') {\n            api.getUsersAPI(shouldDestroy).getUser(\n                file.id,\n                this.fetchCurrentUserSuccessCallback,\n                this.fetchCurrentUserErrorCallback,\n            );\n        } else {\n            this.setState({ currentUser: user, currentUserError: undefined });\n        }\n    }\n\n    /**\n     * Success callback for fetching feed items\n     */\n    feedSuccessCallback = (): void => {\n        this.fetchFeedItems();\n    };\n\n    /**\n     * Error callback for fetching feed items\n     *\n     * @param {Error} e - the error which occured\n     * @param {Error} code - the code for the error\n     * @param {Object} contextInfo - the context info for the error\n     */\n    feedErrorCallback = (e: ElementsXhrError, code: string, contextInfo?: Object) => {\n        this.errorCallback(e, code, contextInfo);\n        this.fetchFeedItems();\n    };\n\n    createTask = (\n        message: string,\n        assignees: SelectorItems<>,\n        taskType: TaskType,\n        dueAt: ?string,\n        completionRule: TaskCompletionRule,\n        onSuccess: ?Function,\n        onError: ?Function,\n    ): void => {\n        const { currentUser } = this.state;\n        const { file, api } = this.props;\n\n        if (!currentUser) {\n            throw getBadUserError();\n        }\n        const errorCallback = (e, code, contextInfo) => {\n            if (onError) {\n                onError(e, code, contextInfo);\n            }\n            this.feedErrorCallback(e, code, contextInfo);\n        };\n        const successCallback = () => {\n            if (onSuccess) {\n                onSuccess();\n            }\n            this.feedSuccessCallback();\n        };\n\n        api.getFeedAPI(false).createTaskNew(\n            file,\n            currentUser,\n            message,\n            assignees,\n            taskType,\n            dueAt,\n            completionRule,\n            successCallback,\n            errorCallback,\n        );\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    deleteTask = (task: TaskNew): void => {\n        const { file, api, onTaskDelete } = this.props;\n        api.getFeedAPI(false).deleteTaskNew(\n            file,\n            task,\n            (taskId: string) => {\n                this.feedSuccessCallback();\n                onTaskDelete(taskId);\n            },\n            this.feedErrorCallback,\n        );\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    updateTask = (task: TaskUpdatePayload, onSuccess: ?Function, onError: ?Function): void => {\n        const { file, api, onTaskUpdate } = this.props;\n        const errorCallback = (e, code) => {\n            if (onError) {\n                onError(e, code);\n            }\n            this.feedErrorCallback(e, code);\n        };\n        const successCallback = () => {\n            this.feedSuccessCallback();\n\n            if (onSuccess) {\n                onSuccess();\n            }\n\n            onTaskUpdate();\n        };\n\n        api.getFeedAPI(false).updateTaskNew(file, task, successCallback, errorCallback);\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    updateTaskAssignment = (taskId: string, taskAssignmentId: string, status: TaskCollabStatus): void => {\n        const { file, api, onTaskAssignmentUpdate } = this.props;\n        const { currentUser = {} } = this.state;\n\n        const successCallback = () => {\n            this.feedSuccessCallback();\n            onTaskAssignmentUpdate(taskId, taskAssignmentId, status, currentUser.id);\n        };\n\n        api.getFeedAPI(false).updateTaskCollaborator(\n            file,\n            taskId,\n            taskAssignmentId,\n            status,\n            successCallback,\n            this.feedErrorCallback,\n        );\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    /**\n     * Deletes a comment via the API.\n     *\n     * @param {Object} args - A subset of the comment\n     * @return void\n     */\n    deleteComment = ({ id, permissions }: { id: string, permissions: BoxItemPermission }): void => {\n        const { file, api, onCommentDelete } = this.props;\n\n        api.getFeedAPI(false).deleteComment(\n            file,\n            id,\n            permissions,\n            (comment: Comment) => {\n                this.feedSuccessCallback();\n                onCommentDelete(comment);\n            },\n            this.feedErrorCallback,\n        );\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    updateComment = (\n        id: string,\n        text: string,\n        hasMention: boolean,\n        permissions: BoxItemPermission,\n        onSuccess: ?Function,\n        onError: ?Function,\n    ): void => {\n        const { file, api, onCommentUpdate } = this.props;\n\n        const errorCallback = (e, code) => {\n            if (onError) {\n                onError(e, code);\n            }\n            this.feedErrorCallback(e, code);\n        };\n\n        const successCallback = () => {\n            this.feedSuccessCallback();\n            if (onSuccess) {\n                onSuccess();\n            }\n            onCommentUpdate();\n        };\n\n        api.getFeedAPI(false).updateComment(file, id, text, hasMention, permissions, successCallback, errorCallback);\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    /**\n     * Posts a new comment to the API\n     *\n     * @param {string} text - The comment's text\n     * @param {boolean} hasMention - The comment's text\n     * @return {void}\n     */\n    createComment = (text: string, hasMention: boolean): void => {\n        const { file, api, onCommentCreate } = this.props;\n        const { currentUser } = this.state;\n\n        if (!currentUser) {\n            throw getBadUserError();\n        }\n\n        api.getFeedAPI(false).createComment(\n            file,\n            currentUser,\n            text,\n            hasMention,\n            (comment: Comment) => {\n                onCommentCreate(comment);\n                this.feedSuccessCallback();\n            },\n            this.feedErrorCallback,\n        );\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    /**\n     * Deletes an app activity item via the API.\n     *\n     * @param {Object} args - A subset of the app activity\n     * @return void\n     */\n    deleteAppActivity = ({ id }: { id: string }): void => {\n        const { file, api } = this.props;\n\n        api.getFeedAPI(false).deleteAppActivity(file, id, this.feedSuccessCallback, this.feedErrorCallback);\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    /**\n     * Fetches the feed items for the sidebar\n     *\n     * @param {boolean} shouldDestroy true if the api factory should be destroyed\n     */\n    fetchFeedItems(shouldRefreshCache: boolean = false, shouldDestroy: boolean = false) {\n        const { file, api, features } = this.props;\n        const shouldShowAppActivity = isFeatureEnabled(features, 'activityFeed.appActivity.enabled');\n        const shouldShowAnnotations = isFeatureEnabled(features, 'activityFeed.annotations.enabled');\n\n        api.getFeedAPI(shouldDestroy).feedItems(\n            file,\n            shouldRefreshCache,\n            this.fetchFeedItemsSuccessCallback,\n            this.fetchFeedItemsErrorCallback,\n            this.errorCallback,\n            { shouldShowAnnotations, shouldShowAppActivity },\n        );\n    }\n\n    /**\n     * Handles a successful feed API fetch\n     *\n     * @private\n     * @param {Array} feedItems - the feed items\n     * @return {void}\n     */\n    fetchFeedItemsSuccessCallback = (feedItems: FeedItems): void => {\n        this.setState({ feedItems, activityFeedError: undefined });\n    };\n\n    /**\n     * Handles a failed feed item fetch\n     *\n     * @private\n     * @param {Error} e - API error\n     * @return {void}\n     */\n    fetchFeedItemsErrorCallback = (feedItems: FeedItems, errors: ElementsXhrError[]): void => {\n        const { onError } = this.props;\n\n        this.setState({\n            feedItems,\n            activityFeedError: activityFeedInlineError,\n        });\n\n        if (Array.isArray(errors) && errors.length) {\n            onError(new Error('Fetch feed items error'), ERROR_CODE_FETCH_ACTIVITY, {\n                showNotification: true,\n                errors: errors.map(({ code }) => code),\n            });\n        }\n    };\n\n    /**\n     * Network error callback\n     *\n     * @private\n     * @param {Error} error - Error object\n     * @param {Error} code - the code for the error\n     * @param {Object} contextInfo - the context info for the error\n     * @return {void}\n     */\n    errorCallback = (error: ElementsXhrError, code: string, contextInfo: Object = {}): void => {\n        /* eslint-disable no-console */\n        console.error(error);\n        /* eslint-enable no-console */\n\n        // eslint-disable-next-line react/prop-types\n        this.props.onError(error, code, contextInfo);\n    };\n\n    /**\n     * User fetch success callback\n     *\n     * @private\n     * @param {Object} currentUser - User info object\n     * @return {void}\n     */\n    fetchCurrentUserSuccessCallback = (currentUser: User): void => {\n        this.setState({ currentUser, currentUserError: undefined });\n    };\n\n    /**\n     * File approver contacts fetch success callback\n     *\n     * @private\n     * @param {BoxItemCollection} collaborators - Collaborators response data\n     * @return {void}\n     */\n    getApproverContactsSuccessCallback = (collaborators: { entries: SelectorItems<> }): void => {\n        const { entries } = collaborators;\n        this.setState({ approverSelectorContacts: entries });\n    };\n\n    /**\n     * File @mention contacts fetch success callback\n     *\n     * @private\n     * @param {BoxItemCollection} collaborators - Collaborators response data\n     * @return {void}\n     */\n    getMentionContactsSuccessCallback = (collaborators: { entries: SelectorItems<> }): void => {\n        const { entries } = collaborators;\n        this.setState({ contactsLoaded: false }, () =>\n            this.setState({\n                contactsLoaded: true,\n                mentionSelectorContacts: entries,\n            }),\n        );\n    };\n\n    /**\n     * File @mention contacts fetch success callback\n     *\n     * @private\n     * @param {string} searchStr - Search string to filter file collaborators by\n     * @return {void}\n     */\n    getApproverWithQuery = debounce(\n        (searchStr: string) =>\n            this.getCollaborators(this.getApproverContactsSuccessCallback, this.errorCallback, searchStr, {\n                includeGroups: true,\n            }),\n        DEFAULT_COLLAB_DEBOUNCE,\n    );\n\n    /**\n     * Fetches file @mention's\n     *\n     * @private\n     * @param {string} searchStr - Search string to filter file collaborators by\n     * @return {void}\n     */\n    getMentionWithQuery = debounce(\n        (searchStr: string) =>\n            this.getCollaborators(this.getMentionContactsSuccessCallback, this.errorCallback, searchStr),\n        DEFAULT_COLLAB_DEBOUNCE,\n    );\n\n    /**\n     * Fetches file collaborators\n     *\n     * @param {Function} successCallback - the success callback\n     * @param {Function} errorCallback - the error callback\n     * @param {string} searchStr - the search string\n     * @param {Object} [options]\n     * @param {boolean} [options.includeGroups] - return groups as well as users\n     * @return {void}\n     */\n    getCollaborators(\n        successCallback: Collaborators => void,\n        errorCallback: ElementsErrorCallback,\n        searchStr: string,\n        { includeGroups = false }: { includeGroups: boolean } = {},\n    ): void {\n        // Do not fetch without filter\n        const { file, api } = this.props;\n        if (!searchStr || searchStr.trim() === '') {\n            return;\n        }\n\n        api.getFileCollaboratorsAPI(true).getFileCollaborators(file.id, successCallback, errorCallback, {\n            filter_term: searchStr,\n            include_groups: includeGroups,\n            include_uploader_collabs: false,\n        });\n    }\n\n    /**\n     * Handles a failed file user info fetch\n     *\n     * @private\n     * @param {ElementsXhrError} e - API error\n     * @return {void}\n     */\n    fetchCurrentUserErrorCallback = (e: ElementsXhrError, code: string) => {\n        this.setState({\n            currentUser: undefined,\n            currentUserError: {\n                maskError: {\n                    errorHeader: messages.currentUserErrorHeaderMessage,\n                    errorSubHeader: messages.defaultErrorMaskSubHeaderMessage,\n                },\n            },\n        });\n\n        this.errorCallback(e, code, {\n            error: e,\n        });\n    };\n\n    /**\n     * Gets the user avatar URL\n     *\n     * @param {string} userId the user id\n     * @param {string} fileId the file id\n     * @return the user avatar URL string for a given user with access token attached\n     */\n    getAvatarUrl = async (userId: string): Promise<?string> => {\n        const { file, api } = this.props;\n\n        return api.getUsersAPI(false).getAvatarUrlWithAccessToken(userId, file.id);\n    };\n\n    handleAnnotationSelect = (annotation: Annotation): void => {\n        const { file_version, id: nextActiveAnnotationId } = annotation;\n        const {\n            emitAnnotatorActiveChangeEvent,\n            file,\n            getAnnotationsMatchPath,\n            getAnnotationsPath,\n            history,\n            location,\n            onAnnotationSelect,\n        } = this.props;\n        const annotationFileVersionId = getProp(file_version, 'id');\n        const currentFileVersionId = getProp(file, 'file_version.id');\n        const match = getAnnotationsMatchPath(location);\n        const selectedFileVersionId = getProp(match, 'params.fileVersionId', currentFileVersionId);\n\n        emitAnnotatorActiveChangeEvent(nextActiveAnnotationId);\n\n        if (annotationFileVersionId && annotationFileVersionId !== selectedFileVersionId) {\n            history.push(getAnnotationsPath(annotationFileVersionId, nextActiveAnnotationId));\n        }\n\n        onAnnotationSelect(annotation);\n    };\n\n    onTaskModalClose = () => {\n        this.setState({\n            approverSelectorContacts: [],\n        });\n    };\n\n    refresh(shouldRefreshCache: boolean = true): void {\n        this.fetchFeedItems(shouldRefreshCache);\n    }\n\n    renderAddTaskButton = () => {\n        const { isDisabled } = this.props;\n        const { approverSelectorContacts } = this.state;\n        const { getApproverWithQuery, getAvatarUrl, createTask, onTaskModalClose } = this;\n        const taskFormProps = {\n            approverSelectorContacts,\n            completionRule: TASK_COMPLETION_RULE_ALL,\n            createTask,\n            getApproverWithQuery,\n            getAvatarUrl,\n            id: '',\n            message: '',\n            approvers: [],\n        };\n        return (\n            <AddTaskButton isDisabled={isDisabled} onTaskModalClose={onTaskModalClose} taskFormProps={taskFormProps} />\n        );\n    };\n\n    render() {\n        const {\n            elementId,\n            file,\n            isDisabled = false,\n            onVersionHistoryClick,\n            getUserProfileUrl,\n            activeFeedEntryId,\n            activeFeedEntryType,\n            onTaskView,\n        } = this.props;\n        const {\n            currentUser,\n            approverSelectorContacts,\n            mentionSelectorContacts,\n            contactsLoaded,\n            feedItems,\n            activityFeedError,\n            currentUserError,\n        } = this.state;\n\n        return (\n            <SidebarContent\n                actions={this.renderAddTaskButton()}\n                className=\"bcs-activity\"\n                elementId={elementId}\n                sidebarView={SIDEBAR_VIEW_ACTIVITY}\n                title={<FormattedMessage {...messages.sidebarActivityTitle} />}\n            >\n                <ActivityFeed\n                    activeFeedEntryId={activeFeedEntryId}\n                    activeFeedEntryType={activeFeedEntryType}\n                    activityFeedError={activityFeedError}\n                    approverSelectorContacts={approverSelectorContacts}\n                    currentUser={currentUser}\n                    currentUserError={currentUserError}\n                    feedItems={feedItems}\n                    file={file}\n                    getApproverWithQuery={this.getApproverWithQuery}\n                    getAvatarUrl={this.getAvatarUrl}\n                    getMentionWithQuery={this.getMentionWithQuery}\n                    getUserProfileUrl={getUserProfileUrl}\n                    isDisabled={isDisabled}\n                    mentionSelectorContacts={mentionSelectorContacts}\n                    contactsLoaded={contactsLoaded}\n                    onAnnotationDelete={this.handleAnnotationDelete}\n                    onAnnotationEdit={this.handleAnnotationEdit}\n                    onAnnotationSelect={this.handleAnnotationSelect}\n                    onAppActivityDelete={this.deleteAppActivity}\n                    onCommentCreate={this.createComment}\n                    onCommentDelete={this.deleteComment}\n                    onCommentUpdate={this.updateComment}\n                    onTaskAssignmentUpdate={this.updateTaskAssignment}\n                    onTaskCreate={this.createTask}\n                    onTaskDelete={this.deleteTask}\n                    onTaskModalClose={this.onTaskModalClose}\n                    onTaskUpdate={this.updateTask}\n                    onTaskView={onTaskView}\n                    onVersionHistoryClick={onVersionHistoryClick}\n                />\n            </SidebarContent>\n        );\n    }\n}\n\nexport type ActivitySidebarProps = ExternalProps;\nexport { ActivitySidebar as ActivitySidebarComponent };\nexport default flow([\n    withLogger(ORIGIN_ACTIVITY_SIDEBAR),\n    withErrorBoundary(ORIGIN_ACTIVITY_SIDEBAR),\n    withAPIContext,\n    withFeatureConsumer,\n    withAnnotatorContext,\n    withRouterAndRef,\n])(ActivitySidebar);\n"],"file":"ActivitySidebar.js"}