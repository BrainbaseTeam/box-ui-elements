{"version":3,"sources":["../../../src/elements/content-sidebar/withErrorHandling.js"],"names":["React","FormattedMessage","ErrorMask","InlineError","SidebarSection","withErrorHandling","WrappedComponent","maskError","inlineError","errorCode","rest","errorHeader","errorSubHeader","undefined","title","content"],"mappings":";;;;AAAA;;;;;AAMA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;;AAQA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,gBAAD;AAAA,SAAgD,gBAK7D;AAAA,QAJTC,SAIS,QAJTA,SAIS;AAAA,QAHTC,WAGS,QAHTA,WAGS;AAAA,QAFTC,SAES,QAFTA,SAES;AAAA,QADNC,IACM;;AACT,QAAIH,SAAJ,EAAe;AACX,aACI,oBAAC,cAAD,QACI,oBAAC,SAAD;AACI,QAAA,WAAW,EAAE,oBAAC,gBAAD,EAAsBA,SAAS,CAACI,WAAhC,CADjB;AAEI,QAAA,cAAc,EACVJ,SAAS,CAACK,cAAV,GAA2B,oBAAC,gBAAD,EAAsBL,SAAS,CAACK,cAAhC,CAA3B,GAAgFC;AAHxF,QADJ,CADJ;AAUH;;AACD,QAAIL,WAAJ,EAAiB;AACb,aACI,0CACI,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAE,oBAAC,gBAAD,EAAsBA,WAAW,CAACM,KAAlC;AAApB,SACI,oBAAC,gBAAD,EAAsBN,WAAW,CAACO,OAAlC,CADJ,CADJ,EAII,oBAAC,gBAAD,EAAsBL,IAAtB,CAJJ,CADJ;AAQH;;AAED,WAAO,oBAAC,gBAAD,EAAsBA,IAAtB,CAAP;AACH,GA9ByB;AAAA,CAA1B;;AAgCA,eAAeL,iBAAf","sourcesContent":["/**\n * @flow\n * @file withErrorHandling higher order component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ErrorMask from '../../components/error-mask/ErrorMask';\nimport InlineError from '../../components/inline-error/InlineError';\n\nimport SidebarSection from './SidebarSection';\n\nimport type { Errors } from './flowTypes';\n\ntype Props = {\n    errorCode?: string,\n} & Errors;\n\nconst withErrorHandling = (WrappedComponent: React.ComponentType<any>) => ({\n    maskError,\n    inlineError,\n    errorCode,\n    ...rest\n}: Props) => {\n    if (maskError) {\n        return (\n            <SidebarSection>\n                <ErrorMask\n                    errorHeader={<FormattedMessage {...maskError.errorHeader} />}\n                    errorSubHeader={\n                        maskError.errorSubHeader ? <FormattedMessage {...maskError.errorSubHeader} /> : undefined\n                    }\n                />\n            </SidebarSection>\n        );\n    }\n    if (inlineError) {\n        return (\n            <>\n                <InlineError title={<FormattedMessage {...inlineError.title} />}>\n                    <FormattedMessage {...inlineError.content} />\n                </InlineError>\n                <WrappedComponent {...rest} />\n            </>\n        );\n    }\n\n    return <WrappedComponent {...rest} />;\n};\n\nexport default withErrorHandling;\n"],"file":"withErrorHandling.js"}