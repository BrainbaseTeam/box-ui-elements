{"version":3,"sources":["../../../../../src/elements/content-sidebar/activity-feed/app-activity/AppActivity.js"],"names":["React","classNames","getProp","noop","TetherComponent","FormattedMessage","injectIntl","ActivityCard","ActivityTimestamp","DeleteConfirmation","IconTrash","Media","messages","bdlGray80","Link","MenuItem","mapActivityNodes","node","dataset","href","tagName","textContent","resinTarget","resinAction","AppActivity","DOMParser","isConfirmingDelete","setState","props","id","onDelete","permissions","renderedText","rendered_text","doc","parser","parseFromString","childNodes","Array","from","templateId","activity_template","app","name","icon_url","createdAt","created_at","createdBy","created_by","currentUser","error","intl","isPending","canDelete","createdAtTimestamp","Date","getTime","isMenuVisible","state","formatMessage","appActivityAltIcon","appActivityName","to","attachment","handleDeleteClick","appActivityDeleteMenuItem","appActivityDeletePrompt","handleDeleteCancel","handleDeleteConfirm","parseActivity","map","PureComponent"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file AppActivity component\n */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport TetherComponent from 'react-tether';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport ActivityCard from '../ActivityCard';\nimport ActivityTimestamp from '../common/activity-timestamp';\nimport DeleteConfirmation from '../common/delete-confirmation';\nimport IconTrash from '../../../../icons/general/IconTrash';\nimport Media from '../../../../components/media';\nimport messages from './messages';\nimport { bdlGray80 } from '../../../../styles/variables';\nimport { Link } from '../../../../components/link';\nimport { MenuItem } from '../../../../components/menu';\nimport type { AppItem, ActivityTemplateItem, ActionItemError } from '../../../../common/types/feed';\nimport type { User, BoxItemPermission } from '../../../../common/types/core';\nimport './AppActivity.scss';\n\ntype Props = {\n    activity_template: ActivityTemplateItem,\n    app: AppItem,\n    created_at: string,\n    created_by: User,\n    currentUser?: User,\n    error?: ActionItemError,\n    id: string,\n    intl: any,\n    isPending?: boolean,\n    onDelete: ({ id: string, permissions?: {} }) => void,\n    permissions?: BoxItemPermission,\n    rendered_text: string,\n};\n\ntype State = {\n    isConfirmingDelete: boolean,\n};\n\nfunction mapActivityNodes(node: HTMLLinkElement): React.Node {\n    const { dataset = {}, href = '#', tagName, textContent } = node;\n\n    switch (tagName) {\n        case 'A':\n            return (\n                <Link\n                    href={href}\n                    data-resin-target={dataset.resinTarget}\n                    data-resin-action={dataset.resinAction}\n                    key={`app_actvity_link_${href}`}\n                    rel=\"roreferrer noopener\"\n                    className=\"bcs-AppActivity-link\"\n                    target=\"_blank\"\n                >\n                    {textContent}\n                </Link>\n            );\n        default:\n            return textContent;\n    }\n}\n\nclass AppActivity extends React.PureComponent<Props, State> {\n    static defaultProps = {\n        onDelete: noop,\n        permissions: {},\n    };\n\n    parser = new DOMParser();\n\n    state: State = {\n        isConfirmingDelete: false,\n    };\n\n    handleDeleteCancel = (): void => {\n        this.setState({ isConfirmingDelete: false });\n    };\n\n    handleDeleteClick = () => {\n        this.setState({ isConfirmingDelete: true });\n    };\n\n    handleDeleteConfirm = (): void => {\n        const { id, onDelete, permissions } = this.props;\n\n        onDelete({ id, permissions });\n    };\n\n    parseActivity = (): Array<HTMLLinkElement> => {\n        const { rendered_text: renderedText } = this.props;\n        const doc: Document = this.parser.parseFromString(renderedText, 'text/html');\n        if (!doc) {\n            return [];\n        }\n\n        const childNodes = getProp(doc, 'body.childNodes', []);\n        return Array.from(childNodes);\n    };\n\n    render() {\n        const {\n            activity_template: { id: templateId },\n            app: { name, icon_url },\n            created_at: createdAt,\n            created_by: createdBy,\n            currentUser,\n            error,\n            intl,\n            isPending,\n            permissions,\n        } = this.props;\n\n        const canDelete = getProp(permissions, 'can_delete', false) || (currentUser && currentUser.id === createdBy.id);\n        const createdAtTimestamp = new Date(createdAt).getTime();\n        const isMenuVisible = canDelete && !isPending;\n        const { isConfirmingDelete } = this.state;\n\n        return (\n            <ActivityCard\n                className=\"bcs-AppActivity\"\n                data-resin-target=\"loaded\"\n                data-resin-feature={`appActivityCard${templateId}`}\n            >\n                <Media\n                    className={classNames({\n                        'bcs-is-pending': isPending || error,\n                    })}\n                >\n                    <Media.Figure>\n                        <img\n                            className=\"bcs-AppActivity-icon\"\n                            alt={intl.formatMessage(messages.appActivityAltIcon, { appActivityName: name })}\n                            src={icon_url}\n                        />\n                    </Media.Figure>\n\n                    <Media.Body className=\"bcs-AppActivity-body\">\n                        {isMenuVisible && (\n                            <TetherComponent\n                                attachment=\"top right\"\n                                className=\"bcs-AppActivity-confirm\"\n                                constraints={[{ to: 'scrollParent', attachment: 'together' }]}\n                                targetAttachment=\"bottom right\"\n                            >\n                                <Media.Menu isDisabled={isConfirmingDelete}>\n                                    <MenuItem onClick={this.handleDeleteClick}>\n                                        <IconTrash color={bdlGray80} />\n                                        <FormattedMessage {...messages.appActivityDeleteMenuItem} />\n                                    </MenuItem>\n                                </Media.Menu>\n\n                                {isConfirmingDelete && (\n                                    <DeleteConfirmation\n                                        isOpen={isConfirmingDelete}\n                                        message={messages.appActivityDeletePrompt}\n                                        onDeleteCancel={this.handleDeleteCancel}\n                                        onDeleteConfirm={this.handleDeleteConfirm}\n                                    />\n                                )}\n                            </TetherComponent>\n                        )}\n\n                        <figcaption className=\"bcs-AppActivity-headline\">{name}</figcaption>\n\n                        <div>\n                            <ActivityTimestamp date={createdAtTimestamp} />\n                        </div>\n\n                        {this.parseActivity().map(mapActivityNodes)}\n                    </Media.Body>\n                </Media>\n            </ActivityCard>\n        );\n    }\n}\n\nexport default injectIntl(AppActivity);\n"],"file":"AppActivity.js"}