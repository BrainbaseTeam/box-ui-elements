{"version":3,"sources":["../../../../../src/elements/content-sidebar/activity-feed/annotations/AnnotationActivityLink.tsx"],"names":["React","classNames","noop","injectIntl","PlainButton","ButtonType","AnnotationActivityLink","className","id","intl","isDisabled","message","onClick","rest","values","messageDescriptor","translatedMessage","formatMessage","handleClick","event","preventDefault","stopPropagation","currentTarget","focus","handleMouseDown","nativeEvent","stopImmediatePropagation","BUTTON","AnnotationActivityLinkBase"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,UAAT,QAAqE,YAArE;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,SAASC,UAAT,QAA2B,+BAA3B;AACA,OAAO,+BAAP;;AAaA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,OAQiB;AAAA,MAP5CC,SAO4C,QAP5CA,SAO4C;AAAA,MAN5CC,EAM4C,QAN5CA,EAM4C;AAAA,MAL5CC,IAK4C,QAL5CA,IAK4C;AAAA,6BAJ5CC,UAI4C;AAAA,MAJ5CA,UAI4C,gCAJ/B,KAI+B;AAAA,MAH5CC,OAG4C,QAH5CA,OAG4C;AAAA,0BAF5CC,OAE4C;AAAA,MAF5CA,OAE4C,6BAFlCV,IAEkC;AAAA,MADzCW,IACyC;;AAAA,MACpCC,MADoC,GACHH,OADG,CACpCG,MADoC;AAAA,MACzBC,iBADyB,4BACHJ,OADG;;AAE5C,MAAMK,iBAAiB,GAAGP,IAAI,CAACQ,aAAL,CAAmBF,iBAAnB,EAAsCD,MAAtC,CAA1B;;AAEA,MAAMI,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAoD;AACpEA,IAAAA,KAAK,CAACC,cAAN;AACAD,IAAAA,KAAK,CAACE,eAAN;AACAF,IAAAA,KAAK,CAACG,aAAN,CAAoBC,KAApB,GAHoE,CAGvC;;AAE7BX,IAAAA,OAAO,CAACJ,EAAD,CAAP;AACH,GAND;;AAQA,MAAMgB,eAAe,GAAG,SAAlBA,eAAkB,CAACL,KAAD,EAAgD;AACpE,QAAIT,UAAJ,EAAgB;AACZ;AACH,KAHmE,CAKpE;AACA;AACA;;;AACAS,IAAAA,KAAK,CAACM,WAAN,CAAkBC,wBAAlB;AACH,GATD;;AAWA,SACI,oBAAC,WAAD;AACI,IAAA,SAAS,EAAEzB,UAAU,CAAC,4BAAD,EAA+BM,SAA/B,CADzB;AAEI,mBAAY,6BAFhB;AAGI,IAAA,UAAU,EAAEG,UAHhB;AAII,IAAA,OAAO,EAAEQ,WAJb;AAKI,IAAA,WAAW,EAAEM,eALjB;AAMI,IAAA,KAAK,EAAER,iBANX;AAOI,IAAA,IAAI,EAAEX,UAAU,CAACsB;AAPrB,KAQQd,IARR,GAUI;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAsDG,iBAAtD,CAVJ,CADJ;AAcH,CA7CD;;AA+CA,SAASV,sBAAsB,IAAIsB,0BAAnC;AAEA,eAAezB,UAAU,CAACG,sBAAD,CAAzB","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport noop from 'lodash/noop';\nimport { injectIntl, MessageDescriptor, WrappedComponentProps } from 'react-intl';\nimport PlainButton from '../../../../components/plain-button';\nimport { ButtonType } from '../../../../components/button';\nimport './AnnotationActivityLink.scss';\n\ntype MessageDescriptorWithValues = {\n    values?: Record<string, number>;\n} & MessageDescriptor;\nexport interface AnnotationActivityLinkProps extends WrappedComponentProps {\n    className?: string;\n    id: string;\n    isDisabled: boolean;\n    message: MessageDescriptorWithValues;\n    onClick: (id: string) => void;\n}\n\nconst AnnotationActivityLink = ({\n    className,\n    id,\n    intl,\n    isDisabled = false,\n    message,\n    onClick = noop,\n    ...rest\n}: AnnotationActivityLinkProps): JSX.Element => {\n    const { values, ...messageDescriptor } = message;\n    const translatedMessage = intl.formatMessage(messageDescriptor, values);\n\n    const handleClick = (event: React.SyntheticEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n        event.stopPropagation();\n        event.currentTarget.focus(); // Buttons do not receive focus in Firefox and Safari on MacOS\n\n        onClick(id);\n    };\n\n    const handleMouseDown = (event: React.MouseEvent<HTMLButtonElement>) => {\n        if (isDisabled) {\n            return;\n        }\n\n        // Prevents document event handlers from executing because box-annotations relies on\n        // detecting mouse events on the document outside of annotation targets to determine when to\n        // deselect annotations. This link also may represent that annotation target in the sidebar.\n        event.nativeEvent.stopImmediatePropagation();\n    };\n\n    return (\n        <PlainButton\n            className={classNames('bcs-AnnotationActivityLink', className)}\n            data-testid=\"bcs-AnnotationActivity-link\"\n            isDisabled={isDisabled}\n            onClick={handleClick}\n            onMouseDown={handleMouseDown}\n            title={translatedMessage}\n            type={ButtonType.BUTTON}\n            {...rest}\n        >\n            <span className=\"bcs-AnnotationActivityLink-message\">{translatedMessage}</span>\n        </PlainButton>\n    );\n};\n\nexport { AnnotationActivityLink as AnnotationActivityLinkBase };\n\nexport default injectIntl(AnnotationActivityLink);\n"],"file":"AnnotationActivityLink.js"}