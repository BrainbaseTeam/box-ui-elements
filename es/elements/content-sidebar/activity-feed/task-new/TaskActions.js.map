{"version":3,"sources":["../../../../../src/elements/content-sidebar/activity-feed/task-new/TaskActions.js"],"names":["React","FormattedMessage","ACTIVITY_TARGETS","messages","Button","TASK_TYPE_APPROVAL","TASK_TYPE_GENERAL","TaskActions","onTaskApproval","onTaskReject","onTaskComplete","taskType","action","TASK_APPROVE","tasksFeedApproveAction","TASK_REJECT","tasksFeedRejectAction","TASK_COMPLETE","tasksFeedCompleteAction"],"mappings":"AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,SAASC,gBAAT,QAAiC,oCAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,SAASC,kBAAT,EAA6BC,iBAA7B,QAAsD,uBAAtD;AAGA,OAAO,oBAAP;;AASA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAmF;AAAA,MAAhFC,cAAgF,QAAhFA,cAAgF;AAAA,MAAhEC,YAAgE,QAAhEA,YAAgE;AAAA,MAAlDC,cAAkD,QAAlDA,cAAkD;AAAA,MAAlCC,QAAkC,QAAlCA,QAAkC;AACnG,MAAIC,MAAM,GAAG,IAAb;;AACA,MAAID,QAAQ,KAAKN,kBAAjB,EAAqC;AACjCO,IAAAA,MAAM,gBACF,uDACI,oBAAC,MAAD;AACI,MAAA,SAAS,EAAC,wBADd;AAGI,MAAA,OAAO,EAAEJ,cAHb;AAII,2BAAmBN,gBAAgB,CAACW;AAJxC,oBAMI,oBAAC,gBAAD,EAAsBV,QAAQ,CAACW,sBAA/B,CANJ,CADJ,eASI,oBAAC,MAAD;AACI,MAAA,SAAS,EAAC,wBADd;AAGI,MAAA,OAAO,EAAEL,YAHb;AAII,2BAAmBP,gBAAgB,CAACa;AAJxC,oBAMI,oBAAC,gBAAD,EAAsBZ,QAAQ,CAACa,qBAA/B,CANJ,CATJ,CADJ;AAoBH,GArBD,MAqBO,IAAIL,QAAQ,KAAKL,iBAAjB,EAAoC;AACvCM,IAAAA,MAAM,gBACF,oBAAC,MAAD;AACI,MAAA,SAAS,EAAC,wBADd;AAGI,MAAA,OAAO,EAAEF,cAHb;AAII,2BAAmBR,gBAAgB,CAACe;AAJxC,oBAMI,oBAAC,gBAAD,EAAsBd,QAAQ,CAACe,uBAA/B,CANJ,CADJ;AAUH;;AACD,sBAAO;AAAK,IAAA,SAAS,EAAC;AAAf,KAAkCN,MAAlC,CAAP;AACH,CApCD;;AAsCA,eAAeL,WAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { ACTIVITY_TARGETS } from '../../../common/interactionTargets';\nimport messages from './messages';\nimport Button from '../../../../components/button';\nimport { TASK_TYPE_APPROVAL, TASK_TYPE_GENERAL } from '../../../../constants';\nimport type { TaskType } from '../../../../common/types/tasks';\n\nimport './TaskActions.scss';\n\ntype Props = {|\n    onTaskApproval: Function,\n    onTaskComplete: Function,\n    onTaskReject: Function,\n    taskType: TaskType,\n|};\n\nconst TaskActions = ({ onTaskApproval, onTaskReject, onTaskComplete, taskType }: Props): React.Node => {\n    let action = null;\n    if (taskType === TASK_TYPE_APPROVAL) {\n        action = (\n            <>\n                <Button\n                    className=\"bcs-TaskActions-button\"\n                    data-testid=\"approve-task\"\n                    onClick={onTaskApproval}\n                    data-resin-target={ACTIVITY_TARGETS.TASK_APPROVE}\n                >\n                    <FormattedMessage {...messages.tasksFeedApproveAction} />\n                </Button>\n                <Button\n                    className=\"bcs-TaskActions-button\"\n                    data-testid=\"reject-task\"\n                    onClick={onTaskReject}\n                    data-resin-target={ACTIVITY_TARGETS.TASK_REJECT}\n                >\n                    <FormattedMessage {...messages.tasksFeedRejectAction} />\n                </Button>\n            </>\n        );\n    } else if (taskType === TASK_TYPE_GENERAL) {\n        action = (\n            <Button\n                className=\"bcs-TaskActions-button\"\n                data-testid=\"complete-task\"\n                onClick={onTaskComplete}\n                data-resin-target={ACTIVITY_TARGETS.TASK_COMPLETE}\n            >\n                <FormattedMessage {...messages.tasksFeedCompleteAction} />\n            </Button>\n        );\n    }\n    return <div className=\"bcs-TaskActions\">{action}</div>;\n};\n\nexport default TaskActions;\n"],"file":"TaskActions.js"}