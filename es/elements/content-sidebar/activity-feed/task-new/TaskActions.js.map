{"version":3,"sources":["../../../../../src/elements/content-sidebar/activity-feed/task-new/TaskActions.js"],"names":["React","FormattedMessage","ACTIVITY_TARGETS","messages","Button","PrimaryButton","TASK_TYPE_APPROVAL","TASK_TYPE_GENERAL","TaskActions","isMultiFile","onTaskApproval","onTaskReject","onTaskComplete","onTaskView","taskType","action","TASK_VIEW_DETAILS","tasksFeedViewDetailsAction","TASK_REJECT","tasksFeedRejectAction","TASK_APPROVE","tasksFeedApproveAction","TASK_COMPLETE","tasksFeedCompleteAction"],"mappings":"AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,SAASC,gBAAT,QAAiC,oCAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,SAASC,kBAAT,EAA6BC,iBAA7B,QAAsD,uBAAtD;AAGA,OAAO,oBAAP;;AAWA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAOK;AAAA,MANrBC,WAMqB,QANrBA,WAMqB;AAAA,MALrBC,cAKqB,QALrBA,cAKqB;AAAA,MAJrBC,YAIqB,QAJrBA,YAIqB;AAAA,MAHrBC,cAGqB,QAHrBA,cAGqB;AAAA,MAFrBC,UAEqB,QAFrBA,UAEqB;AAAA,MADrBC,QACqB,QADrBA,QACqB;AACrB,MAAIC,MAAM,GAAG,IAAb;;AACA,MAAIN,WAAJ,EAAiB;AACbM,IAAAA,MAAM,GAAGF,UAAU,IACf,oBAAC,aAAD;AACI,MAAA,SAAS,EAAC,wBADd;AAEI,qBAAY,WAFhB;AAGI,MAAA,OAAO,EAAEA,UAHb;AAII,2BAAmBX,gBAAgB,CAACc;AAJxC,OAMI,oBAAC,gBAAD,EAAsBb,QAAQ,CAACc,0BAA/B,CANJ,CADJ;AAUH,GAXD,MAWO,IAAIH,QAAQ,KAAKR,kBAAjB,EAAqC;AACxCS,IAAAA,MAAM,GACF,0CACI,oBAAC,MAAD;AACI,MAAA,SAAS,EAAC,wBADd;AAEI,qBAAY,aAFhB;AAGI,MAAA,OAAO,EAAEJ,YAHb;AAII,2BAAmBT,gBAAgB,CAACgB;AAJxC,OAMI,oBAAC,gBAAD,EAAsBf,QAAQ,CAACgB,qBAA/B,CANJ,CADJ,EASI,oBAAC,aAAD;AACI,MAAA,SAAS,EAAC,wBADd;AAEI,qBAAY,cAFhB;AAGI,MAAA,OAAO,EAAET,cAHb;AAII,2BAAmBR,gBAAgB,CAACkB;AAJxC,OAMI,oBAAC,gBAAD,EAAsBjB,QAAQ,CAACkB,sBAA/B,CANJ,CATJ,CADJ;AAoBH,GArBM,MAqBA,IAAIP,QAAQ,KAAKP,iBAAjB,EAAoC;AACvCQ,IAAAA,MAAM,GACF,oBAAC,aAAD;AACI,MAAA,SAAS,EAAC,wBADd;AAEI,qBAAY,eAFhB;AAGI,MAAA,OAAO,EAAEH,cAHb;AAII,2BAAmBV,gBAAgB,CAACoB;AAJxC,OAMI,oBAAC,gBAAD,EAAsBnB,QAAQ,CAACoB,uBAA/B,CANJ,CADJ;AAUH;;AACD,SAAO;AAAK,IAAA,SAAS,EAAC;AAAf,KAAkCR,MAAlC,CAAP;AACH,CAtDD;;AAwDA,eAAeP,WAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { ACTIVITY_TARGETS } from '../../../common/interactionTargets';\nimport messages from './messages';\nimport Button from '../../../../components/button';\nimport PrimaryButton from '../../../../components/primary-button';\nimport { TASK_TYPE_APPROVAL, TASK_TYPE_GENERAL } from '../../../../constants';\nimport type { TaskType } from '../../../../common/types/tasks';\n\nimport './TaskActions.scss';\n\ntype Props = {|\n    isMultiFile: boolean,\n    onTaskApproval: Function,\n    onTaskComplete: Function,\n    onTaskReject: Function,\n    onTaskView: Function,\n    taskType: TaskType,\n|};\n\nconst TaskActions = ({\n    isMultiFile,\n    onTaskApproval,\n    onTaskReject,\n    onTaskComplete,\n    onTaskView,\n    taskType,\n}: Props): React.Node => {\n    let action = null;\n    if (isMultiFile) {\n        action = onTaskView && (\n            <PrimaryButton\n                className=\"bcs-TaskActions-button\"\n                data-testid=\"view-task\"\n                onClick={onTaskView}\n                data-resin-target={ACTIVITY_TARGETS.TASK_VIEW_DETAILS}\n            >\n                <FormattedMessage {...messages.tasksFeedViewDetailsAction} />\n            </PrimaryButton>\n        );\n    } else if (taskType === TASK_TYPE_APPROVAL) {\n        action = (\n            <>\n                <Button\n                    className=\"bcs-TaskActions-button\"\n                    data-testid=\"reject-task\"\n                    onClick={onTaskReject}\n                    data-resin-target={ACTIVITY_TARGETS.TASK_REJECT}\n                >\n                    <FormattedMessage {...messages.tasksFeedRejectAction} />\n                </Button>\n                <PrimaryButton\n                    className=\"bcs-TaskActions-button\"\n                    data-testid=\"approve-task\"\n                    onClick={onTaskApproval}\n                    data-resin-target={ACTIVITY_TARGETS.TASK_APPROVE}\n                >\n                    <FormattedMessage {...messages.tasksFeedApproveAction} />\n                </PrimaryButton>\n            </>\n        );\n    } else if (taskType === TASK_TYPE_GENERAL) {\n        action = (\n            <PrimaryButton\n                className=\"bcs-TaskActions-button\"\n                data-testid=\"complete-task\"\n                onClick={onTaskComplete}\n                data-resin-target={ACTIVITY_TARGETS.TASK_COMPLETE}\n            >\n                <FormattedMessage {...messages.tasksFeedCompleteAction} />\n            </PrimaryButton>\n        );\n    }\n    return <div className=\"bcs-TaskActions\">{action}</div>;\n};\n\nexport default TaskActions;\n"],"file":"TaskActions.js"}