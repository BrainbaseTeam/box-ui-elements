{"version":3,"sources":["../../../../../src/elements/content-sidebar/activity-feed/task-new/AssigneeDetails.js"],"names":["React","FormattedMessage","classNames","ActivityDatestamp","commonMessages","messages","TASK_NEW_APPROVED","TASK_NEW_REJECTED","TASK_NEW_COMPLETED","TASK_NEW_NOT_STARTED","statusMessages","tasksFeedStatusApproved","tasksFeedStatusRejected","tasksFeedStatusCompleted","AssigneeDetails","memo","user","status","completedAt","className","statusMessage","name","priorCollaborator","dateTime"],"mappings":";;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,EAA+CC,kBAA/C,EAAmEC,oBAAnE,QAA+F,uBAA/F;AAGA,OAAO,wBAAP;AAEA,IAAMC,cAAc,2DACfJ,iBADe,EACKD,QAAQ,CAACM,uBADd,oCAEfJ,iBAFe,EAEKF,QAAQ,CAACO,uBAFd,oCAGfJ,kBAHe,EAGMH,QAAQ,CAACQ,wBAHf,oCAIfJ,oBAJe,EAIQ,IAJR,mBAApB;AAcA,IAAMK,eAAe,GAAGd,KAAK,CAACe,IAAN,CAAkB,gBAAqD;AAAA,MAAlDC,IAAkD,QAAlDA,IAAkD;AAAA,MAA5CC,MAA4C,QAA5CA,MAA4C;AAAA,MAApCC,WAAoC,QAApCA,WAAoC;AAAA,MAAvBC,SAAuB,QAAvBA,SAAuB;AAC3F,MAAMC,aAAa,GAAGV,cAAc,CAACO,MAAD,CAAd,IAA0B,IAAhD;AACA,SACI;AAAK,IAAA,SAAS,EAAEf,UAAU,CAACiB,SAAD,EAAY,qBAAZ;AAA1B,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACKH,IAAI,CAACK,IAAL,GAAYL,IAAI,CAACK,IAAjB,GAAwB,oBAAC,gBAAD,EAAsBjB,cAAc,CAACkB,iBAArC,CAD7B,CADJ,EAIKF,aAAa,IAAIF,WAAjB,IACG;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,oBAAC,gBAAD,eACQE,aADR;AAEI,IAAA,MAAM,EAAE;AAAEG,MAAAA,QAAQ,EAAE,oBAAC,iBAAD;AAAmB,QAAA,IAAI,EAAEL;AAAzB;AAAZ;AAFZ,KADJ,CALR,CADJ;AAeH,CAjBuB,CAAxB;AAmBA,eAAeJ,eAAf","sourcesContent":["// @flow strict\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport ActivityDatestamp from '../common/activity-datestamp';\nimport commonMessages from '../../../common/messages';\nimport messages from './messages';\nimport { TASK_NEW_APPROVED, TASK_NEW_REJECTED, TASK_NEW_COMPLETED, TASK_NEW_NOT_STARTED } from '../../../../constants';\nimport type { ISODate } from '../../../../common/types/core';\n\nimport './AssigneeDetails.scss';\n\nconst statusMessages = {\n    [TASK_NEW_APPROVED]: messages.tasksFeedStatusApproved,\n    [TASK_NEW_REJECTED]: messages.tasksFeedStatusRejected,\n    [TASK_NEW_COMPLETED]: messages.tasksFeedStatusCompleted,\n    [TASK_NEW_NOT_STARTED]: null,\n};\n\ntype Props = {\n    className?: string,\n    completedAt?: ?ISODate | Date,\n    status: $Keys<typeof statusMessages>,\n    user: { name: string },\n};\n\nconst AssigneeDetails = React.memo<Props>(({ user, status, completedAt, className }: Props) => {\n    const statusMessage = statusMessages[status] || null;\n    return (\n        <div className={classNames(className, 'bcs-AssigneeDetails')}>\n            <div className=\"bcs-AssigneeDetails-name\">\n                {user.name ? user.name : <FormattedMessage {...commonMessages.priorCollaborator} />}\n            </div>\n            {statusMessage && completedAt && (\n                <div className=\"bcs-AssigneeDetails-status\">\n                    <FormattedMessage\n                        {...statusMessage}\n                        values={{ dateTime: <ActivityDatestamp date={completedAt} /> }}\n                    />\n                </div>\n            )}\n        </div>\n    );\n});\n\nexport default AssigneeDetails;\n"],"file":"AssigneeDetails.js"}