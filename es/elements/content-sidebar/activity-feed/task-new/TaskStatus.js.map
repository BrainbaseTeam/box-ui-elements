{"version":3,"sources":["../../../../../src/elements/content-sidebar/activity-feed/task-new/TaskStatus.js"],"names":["React","FormattedMessage","camelCase","TASK_NEW_APPROVED","TASK_NEW_REJECTED","TASK_NEW_COMPLETED","TASK_NEW_NOT_STARTED","TASK_NEW_IN_PROGRESS","messages","statusMessageKeyMap","tasksFeedApprovedLabel","tasksFeedCompletedLabel","tasksFeedRejectedLabel","tasksFeedInProgressLabel","Status","memo","status","tasksFeedStatusLabel","taskStatus","msg"],"mappings":";;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SACIC,iBADJ,EAEIC,iBAFJ,EAGIC,kBAHJ,EAIIC,oBAJJ,EAKIC,oBALJ,QAMO,uBANP;AAOA,OAAOC,QAAP,MAAqB,YAArB;AAGA,OAAO,mBAAP;AAMA,IAAMC,mBAAmB,qEACpBN,iBADoB,EACAK,QAAQ,CAACE,sBADT,yCAEpBL,kBAFoB,EAECG,QAAQ,CAACG,uBAFV,yCAGpBP,iBAHoB,EAGAI,QAAQ,CAACI,sBAHT,yCAIpBN,oBAJoB,EAIGE,QAAQ,CAACK,wBAJZ,yCAKpBN,oBALoB,EAKGC,QAAQ,CAACK,wBALZ,wBAAzB;AAQA,IAAMC,MAAM,gBAAGd,KAAK,CAACe,IAAN,CAAkB;AAAA,MAAGC,MAAH,QAAGA,MAAH;AAAA,sBAC7B,oBAAC,gBAAD,eACQR,QAAQ,CAACS,oBADjB;AAEI,IAAA,MAAM,EAAE;AACJC,MAAAA,UAAU,eACN;AAAM,QAAA,SAAS,mCAA4BhB,SAAS,CAACc,MAAD,CAArC;AAAf,sBACI,oBAAC,gBAAD,EAAsBP,mBAAmB,CAACO,MAAD,CAAzC,CADJ;AAFA;AAFZ,MAUK;AAAA,sCAAIG,GAAJ;AAAIA,MAAAA,GAAJ;AAAA;;AAAA,wBAA2C;AAAK,MAAA,SAAS,EAAC;AAAf,OAAiCA,GAAjC,CAA3C;AAAA,GAVL,CAD6B;AAAA,CAAlB,CAAf;AAeA,eAAeL,MAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport camelCase from 'lodash/camelCase';\nimport {\n    TASK_NEW_APPROVED,\n    TASK_NEW_REJECTED,\n    TASK_NEW_COMPLETED,\n    TASK_NEW_NOT_STARTED,\n    TASK_NEW_IN_PROGRESS,\n} from '../../../../constants';\nimport messages from './messages';\nimport type { TaskStatus } from '../../../../common/types/tasks';\n\nimport './TaskStatus.scss';\n\ntype Props = {|\n    status: TaskStatus,\n|};\n\nconst statusMessageKeyMap = {\n    [TASK_NEW_APPROVED]: messages.tasksFeedApprovedLabel,\n    [TASK_NEW_COMPLETED]: messages.tasksFeedCompletedLabel,\n    [TASK_NEW_REJECTED]: messages.tasksFeedRejectedLabel,\n    [TASK_NEW_NOT_STARTED]: messages.tasksFeedInProgressLabel,\n    [TASK_NEW_IN_PROGRESS]: messages.tasksFeedInProgressLabel,\n};\n\nconst Status = React.memo<Props>(({ status }: Props) => (\n    <FormattedMessage\n        {...messages.tasksFeedStatusLabel}\n        values={{\n            taskStatus: (\n                <span className={`bcs-TaskStatus-message ${camelCase(status)}`}>\n                    <FormattedMessage {...statusMessageKeyMap[status]} />\n                </span>\n            ),\n        }}\n    >\n        {(...msg: Array<React.Node>): React.Node => <div className=\"bcs-TaskStatus\">{msg}</div>}\n    </FormattedMessage>\n));\n\nexport default Status;\n"],"file":"TaskStatus.js"}