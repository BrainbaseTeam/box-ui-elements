{"version":3,"sources":["../../../../../src/elements/content-sidebar/activity-feed/task-new/TaskStatus.js"],"names":["React","FormattedMessage","TASK_NEW_APPROVED","TASK_NEW_REJECTED","TASK_NEW_COMPLETED","TASK_NEW_NOT_STARTED","TASK_NEW_IN_PROGRESS","messages","LabelPill","statusMessageKeyMap","taskFeedApprovedUppercaseLabel","taskFeedCompletedUppercaseLabel","taskFeedRejectedUppercaseLabel","taskFeedInProgressUppercaseLabel","typeKeyMap","Status","memo","status"],"mappings":";;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,SACIC,iBADJ,EAEIC,iBAFJ,EAGIC,kBAHJ,EAIIC,oBAJJ,EAKIC,oBALJ,QAMO,uBANP;AAOA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AAOA,IAAMC,mBAAmB,qEACpBP,iBADoB,EACAK,QAAQ,CAACG,8BADT,yCAEpBN,kBAFoB,EAECG,QAAQ,CAACI,+BAFV,yCAGpBR,iBAHoB,EAGAI,QAAQ,CAACK,8BAHT,yCAIpBP,oBAJoB,EAIGE,QAAQ,CAACM,gCAJZ,yCAKpBP,oBALoB,EAKGC,QAAQ,CAACM,gCALZ,wBAAzB;AAQA,IAAMC,UAAU,mDACXZ,iBADW,EACS,SADT,gCAEXE,kBAFW,EAEU,SAFV,gCAGXD,iBAHW,EAGS,OAHT,gCAIXE,oBAJW,EAIY,SAJZ,gCAKXC,oBALW,EAKY,SALZ,eAAhB;AAQA,IAAMS,MAAM,GAAGf,KAAK,CAACgB,IAAN,CAAkB;AAAA,MAAGC,MAAH,QAAGA,MAAH;AAAA,SAC7B,oBAAC,SAAD,CAAW,IAAX;AAAgB,IAAA,IAAI,EAAEH,UAAU,CAACG,MAAD;AAAhC,KACI,oBAAC,SAAD,CAAW,IAAX,QACI,oBAAC,gBAAD,EAAsBR,mBAAmB,CAACQ,MAAD,CAAzC,CADJ,CADJ,CAD6B;AAAA,CAAlB,CAAf;AAQA,eAAeF,MAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport {\n    TASK_NEW_APPROVED,\n    TASK_NEW_REJECTED,\n    TASK_NEW_COMPLETED,\n    TASK_NEW_NOT_STARTED,\n    TASK_NEW_IN_PROGRESS,\n} from '../../../../constants';\nimport messages from './messages';\n// $FlowFixMe LabelPill is in typescript\nimport LabelPill from '../../../../components/label-pill';\nimport type { TaskStatus } from '../../../../common/types/tasks';\n\ntype Props = {|\n    status: TaskStatus,\n|};\n\nconst statusMessageKeyMap = {\n    [TASK_NEW_APPROVED]: messages.taskFeedApprovedUppercaseLabel,\n    [TASK_NEW_COMPLETED]: messages.taskFeedCompletedUppercaseLabel,\n    [TASK_NEW_REJECTED]: messages.taskFeedRejectedUppercaseLabel,\n    [TASK_NEW_NOT_STARTED]: messages.taskFeedInProgressUppercaseLabel,\n    [TASK_NEW_IN_PROGRESS]: messages.taskFeedInProgressUppercaseLabel,\n};\n\nconst typeKeyMap = {\n    [TASK_NEW_APPROVED]: 'success',\n    [TASK_NEW_COMPLETED]: 'success',\n    [TASK_NEW_REJECTED]: 'error',\n    [TASK_NEW_NOT_STARTED]: 'default',\n    [TASK_NEW_IN_PROGRESS]: 'default',\n};\n\nconst Status = React.memo<Props>(({ status }: Props) => (\n    <LabelPill.Pill type={typeKeyMap[status]}>\n        <LabelPill.Text>\n            <FormattedMessage {...statusMessageKeyMap[status]} />\n        </LabelPill.Text>\n    </LabelPill.Pill>\n));\n\nexport default Status;\n"],"file":"TaskStatus.js"}