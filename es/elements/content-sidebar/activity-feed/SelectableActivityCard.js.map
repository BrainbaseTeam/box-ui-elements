{"version":3,"sources":["../../../../src/elements/content-sidebar/activity-feed/SelectableActivityCard.tsx"],"names":["React","classNames","ActivityCard","decode","ALLOWABLE_NODENAMES","isAllowableNode","target","HTMLElement","includes","nodeName","SelectableActivityCard","children","className","isDisabled","onSelect","rest","ref","useRef","handleClick","event","preventDefault","stopPropagation","currentTarget","focus","handleKeyDown","key"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyD,gBAAzD,C,CACA;;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAO,+BAAP;AAOA,IAAMC,mBAAmB,GAAG,CAAC,GAAD,EAAM,QAAN,CAA5B;;AAEA,SAASC,eAAT,OAA2E;AAAA,MAAhDC,MAAgD,QAAhDA,MAAgD;AACvE,SAAOA,MAAM,YAAYC,WAAlB,IAAiCH,mBAAmB,CAACI,QAApB,CAA6BF,MAAM,CAACG,QAApC,CAAxC;AACH;;AAED,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,QAAwF;AAAA,MAArFC,QAAqF,SAArFA,QAAqF;AAAA,MAA3EC,SAA2E,SAA3EA,SAA2E;AAAA,+BAAhEC,UAAgE;AAAA,MAAhEA,UAAgE,iCAAnD,KAAmD;AAAA,MAA5CC,QAA4C,SAA5CA,QAA4C;AAAA,MAA/BC,IAA+B;;AACnH,MAAMC,GAAG,GAAGhB,KAAK,CAACiB,MAAN,CAAoC,IAApC,CAAZ;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAuD;AACvE,QAAIN,UAAU,IAAIR,eAAe,CAACc,KAAD,CAAjC,EAA0C;AACtC;AACH;;AAEDA,IAAAA,KAAK,CAACC,cAAN;AACAD,IAAAA,KAAK,CAACE,eAAN;AACAF,IAAAA,KAAK,CAACG,aAAN,CAAoBC,KAApB,GAPuE,CAO1C;;AAE7BT,IAAAA,QAAQ;AACX,GAVD;;AAYA,MAAMU,aAAa,GAAG,SAAhBA,aAAgB,CAACL,KAAD,EAAsD;AACxE,QAAIN,UAAU,IAAIR,eAAe,CAACc,KAAD,CAAjC,EAA0C;AACtC;AACH;;AAED,QAAMM,GAAG,GAAGtB,MAAM,CAACgB,KAAD,CAAlB;;AAEA,QAAIM,GAAG,KAAK,OAAR,IAAmBA,GAAG,KAAK,OAA/B,EAAwC;AACpCX,MAAAA,QAAQ;AACX;AACJ,GAVD;;AAYA,SACI,oBAAC,YAAD;AACI,IAAA,GAAG,EAAEE,GADT;AAEI,qBAAeH,UAFnB;AAGI,IAAA,SAAS,EAAEZ,UAAU,CAAC,4BAAD,EAA+BW,SAA/B,CAHzB;AAII,IAAA,OAAO,EAAEM,WAJb;AAKI,IAAA,SAAS,EAAEM,aALf;AAMI,IAAA,IAAI,EAAC,QANT;AAOI,IAAA,QAAQ,EAAE;AAPd,KAQQT,IARR,GAUKJ,QAVL,CADJ;AAcH,CAzCD;;AA2CA,eAAeD,sBAAf","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport ActivityCard, { Props as ActivityCardProps } from './ActivityCard';\n// @ts-ignore flow import\nimport { decode } from '../../../utils/keys';\nimport './SelectableActivityCard.scss';\n\nexport type Props = {\n    isDisabled?: boolean;\n    onSelect: () => void;\n} & ActivityCardProps;\n\nconst ALLOWABLE_NODENAMES = ['A', 'BUTTON'];\n\nfunction isAllowableNode({ target }: React.SyntheticEvent<HTMLDivElement>) {\n    return target instanceof HTMLElement && ALLOWABLE_NODENAMES.includes(target.nodeName);\n}\n\nconst SelectableActivityCard = ({ children, className, isDisabled = false, onSelect, ...rest }: Props): JSX.Element => {\n    const ref = React.useRef<HTMLDivElement | null>(null);\n\n    const handleClick = (event: React.SyntheticEvent<HTMLDivElement>): void => {\n        if (isDisabled || isAllowableNode(event)) {\n            return;\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n        event.currentTarget.focus(); // Buttons do not receive focus in Firefox and Safari on MacOS\n\n        onSelect();\n    };\n\n    const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>): void => {\n        if (isDisabled || isAllowableNode(event)) {\n            return;\n        }\n\n        const key = decode(event);\n\n        if (key === 'Space' || key === 'Enter') {\n            onSelect();\n        }\n    };\n\n    return (\n        <ActivityCard\n            ref={ref}\n            aria-disabled={isDisabled}\n            className={classNames('bcs-SelectableActivityCard', className)}\n            onClick={handleClick}\n            onKeyDown={handleKeyDown}\n            role=\"button\"\n            tabIndex={0}\n            {...rest}\n        >\n            {children}\n        </ActivityCard>\n    );\n};\n\nexport default SelectableActivityCard;\n"],"file":"SelectableActivityCard.js"}