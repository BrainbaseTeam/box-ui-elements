{"version":3,"sources":["../../../../../../src/elements/content-sidebar/activity-feed/common/user-link/UserLink.js"],"names":["React","classnames","Link","UserLink","profileUrl","setState","props","id","getUserProfileUrl","Promise","resolve","then","getProfileUrlHandler","name","className","rest","state","PureComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,IAAT,QAAqB,gCAArB;AAEA,OAAO,iBAAP;;IAaMC,Q;;;;;;;;;;;;;;;;;;4DACM,E;;2EAOe,UAACC,UAAD,EAAyB;AAC5C,YAAKC,QAAL,CAAc;AACVD,QAAAA,UAAU,EAAVA;AADU,OAAd;AAGH,K;;;;;;;;AAED;;;;;wCAKoB;AAAA,wBACyB,KAAKE,KAD9B;AAAA,UACRC,EADQ,eACRA,EADQ;AAAA,UACJC,iBADI,eACJA,iBADI;;AAEhB,UAAI,CAACA,iBAAL,EAAwB;AACpB,eAAOC,OAAO,CAACC,OAAR,EAAP;AACH;;AAED,aAAOF,iBAAiB,CAACD,EAAD,CAAjB,CAAsBI,IAAtB,CAA2B,KAAKC,oBAAhC,CAAP;AACH;;;wCAEmB;AAChB,WAAKJ,iBAAL;AACH;;;6BAEQ;AAAA,yBAC0D,KAAKF,KAD/D;AAAA,UACGO,IADH,gBACGA,IADH;AAAA,UACSL,iBADT,gBACSA,iBADT;AAAA,UAC4BM,SAD5B,gBAC4BA,SAD5B;AAAA,UAC0CC,IAD1C;;AAAA,UAEGX,UAFH,GAEyB,KAAKY,KAF9B,CAEGZ,UAFH;AAIL,aAAOA,UAAU,GACb,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAEH,UAAU,CAAC,cAAD,EAAiBa,SAAjB;AAA3B,SAA4DC,IAA5D;AAAkE,QAAA,IAAI,EAAEX;AAAxE,UACKS,IADL,CADa,GAKb,4BAAUE,IAAV,EAAiBF,IAAjB,CALJ;AAOH;;;;EA3CkBb,KAAK,CAACiB,a;;AA8C7B,eAAed,QAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport classnames from 'classnames';\nimport { Link } from '../../../../../components/link';\nimport type { GetProfileUrlCallback } from '../../../../common/flowTypes';\nimport './UserLink.scss';\n\ntype Props = {\n    className?: string,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    id: string,\n    name: string,\n};\n\ntype State = {\n    profileUrl?: string,\n};\n\nclass UserLink extends React.PureComponent<Props, State> {\n    state = {};\n\n    /**\n     * Success handler for getting profile url\n     *\n     * @param {string} profileUrl the user profile url\n     */\n    getProfileUrlHandler = (profileUrl?: string) => {\n        this.setState({\n            profileUrl,\n        });\n    };\n\n    /**\n     * Gets the profile URL for the user from the getUserProfileUrl prop\n     *\n     * @return {Promise} a promise which resolves with the profileUrl string\n     */\n    getUserProfileUrl() {\n        const { id, getUserProfileUrl }: Props = this.props;\n        if (!getUserProfileUrl) {\n            return Promise.resolve();\n        }\n\n        return getUserProfileUrl(id).then(this.getProfileUrlHandler);\n    }\n\n    componentDidMount() {\n        this.getUserProfileUrl();\n    }\n\n    render() {\n        const { name, getUserProfileUrl, className, ...rest }: Props = this.props;\n        const { profileUrl }: State = this.state;\n\n        return profileUrl ? (\n            <Link className={classnames('bcs-UserLink', className)} {...rest} href={profileUrl}>\n                {name}\n            </Link>\n        ) : (\n            <span {...rest}>{name}</span>\n        );\n    }\n}\n\nexport default UserLink;\n"],"file":"UserLink.js"}