{"version":3,"sources":["../../../../../src/elements/content-sidebar/activity-feed/version/CollapsedVersion.js"],"names":["React","FormattedMessage","injectIntl","IconInfoInverted","PlainButton","messages","selectors","ACTIVITY_TARGETS","getMessageForAction","action","collaborators","version_start","version_end","collaboratorIDs","Object","keys","numberOfCollaborators","length","versionRange","collaborator","versionUploadCollapsed","name","versions","versionMultipleUsersUploaded","CollapsedVersion","props","getVersionAction","intl","onInfo","formatMessage","getVersionInfo","VERSION_CARD","CollapsedVersionBase"],"mappings":";;AAAA;AACA;AACA;AACA;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,YAA7C;AACA,OAAOC,gBAAP,MAA6B,4CAA7B;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,SAASC,gBAAT,QAAiC,oCAAjC;AACA,OAAO,gBAAP;;AAEA,SAASC,mBAAT,CACIC,MADJ,EAEIC,aAFJ,EAGIC,aAHJ,EAIIC,WAJJ,EAKc;AACV;AACA,MAAIH,MAAM,KAAK,QAAf,EAAyB;AACrB,WAAO,IAAP;AACH;;AAED,MAAMI,eAAe,GAAGC,MAAM,CAACC,IAAP,CAAYL,aAAZ,CAAxB;AACA,MAAMM,qBAAqB,GAAGH,eAAe,CAACI,MAA9C;AAEA,MAAMC,YAAwB,gBAC1B;AAAM,IAAA,SAAS,EAAC;AAAhB,KACKP,aADL,SACuBC,WADvB,CADJ;;AAMA,MAAII,qBAAqB,KAAK,CAA9B,EAAiC;AAC7B,QAAMG,YAAY,GAAGT,aAAa,CAACG,eAAe,CAAC,CAAD,CAAhB,CAAlC;AACA,wBACI,oBAAC,gBAAD,eACQR,QAAQ,CAACe,sBADjB;AAEI,MAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,eAAE,oCAASF,YAAY,CAACE,IAAtB,CADF;AAEJC,QAAAA,QAAQ,EAAEJ;AAFN;AAFZ,OADJ;AASH;;AAED,sBACI,oBAAC,gBAAD,eACQb,QAAQ,CAACkB,4BADjB;AAEI,IAAA,MAAM,EAAE;AACJP,MAAAA,qBAAqB,EAArBA,qBADI;AAEJM,MAAAA,QAAQ,EAAEJ;AAFN;AAFZ,KADJ;AASH;;AAUD,IAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAA8B;AACnD,MAAMhB,MAAM,GAAGH,SAAS,CAACoB,gBAAV,CAA2BD,KAA3B,CAAf;AADmD,MAE3Cf,aAF2C,GAE2Be,KAF3B,CAE3Cf,aAF2C;AAAA,MAE5BiB,IAF4B,GAE2BF,KAF3B,CAE5BE,IAF4B;AAAA,MAEtBC,MAFsB,GAE2BH,KAF3B,CAEtBG,MAFsB;AAAA,MAEdN,QAFc,GAE2BG,KAF3B,CAEdH,QAFc;AAAA,MAEJX,aAFI,GAE2Bc,KAF3B,CAEJd,aAFI;AAAA,MAEWC,WAFX,GAE2Ba,KAF3B,CAEWb,WAFX;AAInD,sBACI;AAAK,IAAA,SAAS,EAAC;AAAf,kBACI;AAAM,IAAA,SAAS,EAAC;AAAhB,KACKJ,mBAAmB,CAACC,MAAD,EAASC,aAAT,EAAwBC,aAAxB,EAAuCC,WAAvC,CADxB,CADJ,EAIKgB,MAAM,gBACH;AAAM,IAAA,SAAS,EAAC;AAAhB,kBACI,oBAAC,WAAD;AACI,kBAAYD,IAAI,CAACE,aAAL,CAAmBxB,QAAQ,CAACyB,cAA5B,CADhB;AAEI,IAAA,SAAS,EAAC,kBAFd;AAGI,yBAAmBvB,gBAAgB,CAACwB,YAHxC;AAII,IAAA,OAAO,EAAE,mBAAM;AACXH,MAAAA,MAAM,CAAC;AAAEN,QAAAA,QAAQ,EAARA;AAAF,OAAD,CAAN;AACH,KANL;AAOI,IAAA,IAAI,EAAC;AAPT,kBASI,oBAAC,gBAAD;AAAkB,IAAA,MAAM,EAAE,EAA1B;AAA8B,IAAA,KAAK,EAAE;AAArC,IATJ,CADJ,CADG,GAcH,IAlBR,CADJ;AAsBH,CA1BD;;AA4BA,SAASE,gBAAgB,IAAIQ,oBAA7B;AACA,eAAe9B,UAAU,CAACsB,gBAAD,CAAzB","sourcesContent":["/**\n * @flow\n * @file Collapsed Version component\n */\n\nimport * as React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport IconInfoInverted from '../../../../icons/general/IconInfoInverted';\nimport PlainButton from '../../../../components/plain-button';\nimport messages from '../../../common/messages';\nimport selectors from '../../../common/selectors/version';\nimport { ACTIVITY_TARGETS } from '../../../common/interactionTargets';\nimport './Version.scss';\n\nfunction getMessageForAction(\n    action: string,\n    collaborators: { [collaborator_id: string]: User },\n    version_start: number,\n    version_end: number,\n): React.Node {\n    // We only support collapsing for multiple upload versions\n    if (action !== 'upload') {\n        return null;\n    }\n\n    const collaboratorIDs = Object.keys(collaborators);\n    const numberOfCollaborators = collaboratorIDs.length;\n\n    const versionRange: React.Node = (\n        <span className=\"bcs-Version-range\">\n            {version_start} - {version_end}\n        </span>\n    );\n\n    if (numberOfCollaborators === 1) {\n        const collaborator = collaborators[collaboratorIDs[0]];\n        return (\n            <FormattedMessage\n                {...messages.versionUploadCollapsed}\n                values={{\n                    name: <strong>{collaborator.name}</strong>,\n                    versions: versionRange,\n                }}\n            />\n        );\n    }\n\n    return (\n        <FormattedMessage\n            {...messages.versionMultipleUsersUploaded}\n            values={{\n                numberOfCollaborators,\n                versions: versionRange,\n            }}\n        />\n    );\n}\n\ntype Props = {\n    collaborators: { [collaborator_id: string]: User },\n    onInfo?: Function,\n    version_end: number,\n    version_start: number,\n    versions: FileVersions,\n} & InjectIntlProvidedProps;\n\nconst CollapsedVersion = (props: Props): React.Node => {\n    const action = selectors.getVersionAction(props);\n    const { collaborators, intl, onInfo, versions, version_start, version_end } = props;\n\n    return (\n        <div className=\"bcs-Version\">\n            <span className=\"bcs-Version-message\">\n                {getMessageForAction(action, collaborators, version_start, version_end)}\n            </span>\n            {onInfo ? (\n                <span className=\"bcs-Version-actions\">\n                    <PlainButton\n                        aria-label={intl.formatMessage(messages.getVersionInfo)}\n                        className=\"bcs-Version-info\"\n                        data-resin-target={ACTIVITY_TARGETS.VERSION_CARD}\n                        onClick={() => {\n                            onInfo({ versions });\n                        }}\n                        type=\"button\"\n                    >\n                        <IconInfoInverted height={16} width={16} />\n                    </PlainButton>\n                </span>\n            ) : null}\n        </div>\n    );\n};\n\nexport { CollapsedVersion as CollapsedVersionBase };\nexport default injectIntl(CollapsedVersion);\n"],"file":"CollapsedVersion.js"}