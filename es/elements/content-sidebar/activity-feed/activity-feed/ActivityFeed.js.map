{"version":3,"sources":["../../../../../src/elements/content-sidebar/activity-feed/activity-feed/ActivityFeed.js"],"names":["React","getProp","noop","FormattedMessage","classNames","scrollIntoView","ActiveState","CommentForm","EmptyState","collapseFeedState","ItemTypes","InlineError","LoadingIndicator","messages","ActivityFeed","isInputOpen","createRef","props","feedItems","undefined","length","type","fileVersion","currentUser","feedContainer","scrollTop","scrollHeight","event","nativeEvent","stopImmediatePropagation","resetFeedScroll","setState","text","hasMention","onCommentCreate","commentFormSubmitHandler","assignees","dueAt","onTaskCreate","data","versionInfoHandler","onVersionHistoryClick","prevProps","prevState","prevFeedItems","currFeedItems","activeFeedEntryId","prevIsInputOpen","currIsInputOpen","state","hasLoaded","hasMoreItems","didLoadFeedItems","hasInputOpened","scrollToActiveFeedItemOrErrorMessage","activeFeedItemRef","current","translations","approverSelectorContacts","mentionSelectorContacts","isDisabled","getAvatarUrl","getUserProfileUrl","file","onAppActivityDelete","getApproverWithQuery","getMentionWithQuery","activityFeedError","onCommentDelete","onCommentUpdate","onTaskDelete","onTaskUpdate","onTaskAssignmentUpdate","onTaskModalClose","activeFeedEntryType","hasCommentPermission","showCommentForm","isEmpty","isLoading","activeEntry","Array","isArray","find","id","errorMessageByEntryType","comment","commentMissingError","task","taskMissingError","inlineFeedItemErrorMessage","isInlineFeedItemErrorVisible","onKeyDown","ref","openVersionHistoryPopup","feedInlineErrorTitle","commentFormCancelHandler","commentFormFocusHandler","Component"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Component for Activity feed\n */\n\nimport * as React from 'react';\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport { scrollIntoView } from '../../../../utils/dom';\nimport ActiveState from './ActiveState';\nimport CommentForm from '../comment-form';\nimport EmptyState from './EmptyState';\nimport { collapseFeedState, ItemTypes } from './activityFeedUtils';\nimport InlineError from '../../../../components/inline-error/InlineError';\nimport LoadingIndicator from '../../../../components/loading-indicator/LoadingIndicator';\nimport messages from './messages';\nimport type { FocusableFeedItemType } from '../../../../common/types/feed';\nimport './ActivityFeed.scss';\n\ntype Props = {\n    activeFeedEntryId?: string,\n    activeFeedEntryType?: FocusableFeedItemType,\n    activityFeedError: ?Errors,\n    approverSelectorContacts?: SelectorItems,\n    currentUser?: User,\n    feedItems?: FeedItems,\n    file: BoxItem,\n    getApproverWithQuery?: Function,\n    getAvatarUrl: GetAvatarUrlCallback,\n    getMentionWithQuery?: Function,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    isDisabled?: boolean,\n    mentionSelectorContacts?: SelectorItems,\n    onAppActivityDelete?: Function,\n    onCommentCreate?: Function,\n    onCommentDelete?: Function,\n    onCommentUpdate?: Function,\n    onTaskAssignmentUpdate?: Function,\n    onTaskCreate?: Function,\n    onTaskDelete?: Function,\n    onTaskModalClose?: Function,\n    onTaskUpdate?: Function,\n    onVersionHistoryClick?: Function,\n    translations?: Translations,\n};\n\ntype State = {\n    isInputOpen: boolean,\n};\n\nclass ActivityFeed extends React.Component<Props, State> {\n    state = {\n        isInputOpen: false,\n    };\n\n    activeFeedItemRef = React.createRef<null | HTMLElement>();\n\n    feedContainer: null | HTMLElement;\n\n    componentDidMount() {\n        this.resetFeedScroll();\n    }\n\n    componentDidUpdate(prevProps: Props, prevState: State) {\n        const { feedItems: prevFeedItems } = prevProps;\n        const { feedItems: currFeedItems, activeFeedEntryId } = this.props;\n        const { isInputOpen: prevIsInputOpen } = prevState;\n        const { isInputOpen: currIsInputOpen } = this.state;\n\n        const hasLoaded = this.hasLoaded();\n        const hasMoreItems = prevFeedItems && currFeedItems && prevFeedItems.length < currFeedItems.length;\n        const didLoadFeedItems = prevFeedItems === undefined && currFeedItems !== undefined;\n        const hasInputOpened = currIsInputOpen !== prevIsInputOpen;\n\n        if ((hasLoaded || hasMoreItems || didLoadFeedItems || hasInputOpened) && activeFeedEntryId === undefined) {\n            this.resetFeedScroll();\n        }\n\n        // do the scroll only once after first fetch of feed items\n        if (didLoadFeedItems) {\n            this.scrollToActiveFeedItemOrErrorMessage();\n        }\n    }\n\n    scrollToActiveFeedItemOrErrorMessage() {\n        const { current: activeFeedItemRef } = this.activeFeedItemRef;\n        const { activeFeedEntryId } = this.props;\n\n        // if there is no active item, do not scroll\n        if (!activeFeedEntryId) {\n            return;\n        }\n\n        // if there was supposed to be an active feed item but the feed item does not exist\n        // scroll to the bottom to show the inline error message\n        if (activeFeedItemRef === null) {\n            this.resetFeedScroll();\n            return;\n        }\n\n        scrollIntoView(activeFeedItemRef);\n    }\n\n    /**\n     * Detects whether or not the empty state should be shown.\n     * @param {object} currentUser - The user that is logged into the account\n     * @param {object} feedItems - Items in the activity feed\n     */\n    isEmpty = ({ feedItems }: Props = this.props): boolean => {\n        if (feedItems === undefined) {\n            return false;\n        }\n        return feedItems.length === 0 || (feedItems.length === 1 && feedItems[0].type === ItemTypes.fileVersion);\n    };\n\n    hasLoaded = ({ currentUser, feedItems }: Props = this.props): boolean =>\n        currentUser !== undefined && feedItems !== undefined;\n\n    /**\n     * Scrolls the container to the bottom\n     */\n    resetFeedScroll = () => {\n        if (this.feedContainer) {\n            this.feedContainer.scrollTop = this.feedContainer.scrollHeight;\n        }\n    };\n\n    onKeyDown = (event: SyntheticKeyboardEvent<>): void => {\n        const { nativeEvent } = event;\n        nativeEvent.stopImmediatePropagation();\n    };\n\n    commentFormFocusHandler = (): void => {\n        this.resetFeedScroll();\n        this.setState({ isInputOpen: true });\n    };\n\n    commentFormCancelHandler = (): void => this.setState({ isInputOpen: false });\n\n    commentFormSubmitHandler = (): void => this.setState({ isInputOpen: false });\n\n    onCommentCreate = ({ text, hasMention }: { hasMention: boolean, text: string }) => {\n        const { onCommentCreate = noop } = this.props;\n        onCommentCreate(text, hasMention);\n        this.commentFormSubmitHandler();\n    };\n\n    /**\n     * Creates a task.\n     *\n     * @param {string} text - Task text\n     * @param {Array} assignees - List of assignees\n     * @param {number} dueAt - Task's due date\n     * @return {void}\n     */\n    onTaskCreate = ({ text, assignees, dueAt }: { assignees: SelectorItems, dueAt: string, text: string }): void => {\n        const { onTaskCreate = noop } = this.props;\n        onTaskCreate(text, assignees, dueAt);\n        this.commentFormSubmitHandler();\n    };\n\n    /**\n     * Invokes version history popup handler.\n     *\n     * @param {Object} data - Version history data\n     * @return {void}\n     */\n    openVersionHistoryPopup = (data: any): void => {\n        const versionInfoHandler = this.props.onVersionHistoryClick || noop;\n        versionInfoHandler(data);\n    };\n\n    render(): React.Node {\n        const {\n            translations,\n            approverSelectorContacts,\n            mentionSelectorContacts,\n            currentUser,\n            isDisabled,\n            getAvatarUrl,\n            getUserProfileUrl,\n            file,\n            onAppActivityDelete,\n            onCommentCreate,\n            getApproverWithQuery,\n            getMentionWithQuery,\n            activityFeedError,\n            onVersionHistoryClick,\n            onCommentDelete,\n            onCommentUpdate,\n            onTaskDelete,\n            onTaskUpdate,\n            onTaskAssignmentUpdate,\n            onTaskModalClose,\n            feedItems,\n            activeFeedEntryId,\n            activeFeedEntryType,\n        } = this.props;\n        const { isInputOpen } = this.state;\n        const hasCommentPermission = getProp(file, 'permissions.can_comment', false);\n        const showCommentForm = !!(currentUser && hasCommentPermission && onCommentCreate && feedItems);\n\n        const isEmpty = this.isEmpty(this.props);\n        const isLoading = !this.hasLoaded();\n\n        const activeEntry =\n            Array.isArray(feedItems) &&\n            feedItems.find(({ id, type }) => id === activeFeedEntryId && type === activeFeedEntryType);\n\n        const errorMessageByEntryType = {\n            comment: messages.commentMissingError,\n            task: messages.taskMissingError,\n        };\n\n        const inlineFeedItemErrorMessage = activeFeedEntryType\n            ? errorMessageByEntryType[activeFeedEntryType]\n            : undefined;\n\n        const isInlineFeedItemErrorVisible = !isLoading && activeFeedEntryType && !activeEntry;\n\n        return (\n            // eslint-disable-next-line\n            <div className=\"bcs-activity-feed\" data-testid=\"activityfeed\" onKeyDown={this.onKeyDown}>\n                <div\n                    ref={ref => {\n                        this.feedContainer = ref;\n                    }}\n                    className=\"bcs-activity-feed-items-container\"\n                >\n                    {isLoading && (\n                        <div className=\"bcs-activity-feed-loading-state\">\n                            <LoadingIndicator />\n                        </div>\n                    )}\n\n                    {isEmpty && !isLoading && <EmptyState showCommentMessage={showCommentForm} />}\n                    {!isEmpty && !isLoading && (\n                        <ActiveState\n                            {...activityFeedError}\n                            items={collapseFeedState(feedItems)}\n                            isDisabled={isDisabled}\n                            currentUser={currentUser}\n                            onTaskAssignmentUpdate={onTaskAssignmentUpdate}\n                            onAppActivityDelete={onAppActivityDelete}\n                            onCommentDelete={hasCommentPermission ? onCommentDelete : noop}\n                            onCommentEdit={hasCommentPermission ? onCommentUpdate : noop}\n                            // We don't know task edit/delete specific permissions,\n                            // but you must at least be able to comment to do these operations.\n                            onTaskDelete={hasCommentPermission ? onTaskDelete : noop}\n                            onTaskEdit={hasCommentPermission ? onTaskUpdate : noop}\n                            onTaskModalClose={onTaskModalClose}\n                            onVersionInfo={onVersionHistoryClick ? this.openVersionHistoryPopup : null}\n                            translations={translations}\n                            getAvatarUrl={getAvatarUrl}\n                            getUserProfileUrl={getUserProfileUrl}\n                            mentionSelectorContacts={mentionSelectorContacts}\n                            getMentionWithQuery={getMentionWithQuery}\n                            approverSelectorContacts={approverSelectorContacts}\n                            getApproverWithQuery={getApproverWithQuery}\n                            activeFeedEntryId={activeFeedEntryId}\n                            activeFeedEntryType={activeFeedEntryType}\n                            activeFeedItemRef={this.activeFeedItemRef}\n                        />\n                    )}\n                    {isInlineFeedItemErrorVisible && inlineFeedItemErrorMessage && (\n                        <InlineError\n                            title={<FormattedMessage {...messages.feedInlineErrorTitle} />}\n                            className=\"bcs-feedItemInlineError\"\n                        >\n                            <FormattedMessage {...inlineFeedItemErrorMessage} />\n                        </InlineError>\n                    )}\n                </div>\n\n                {showCommentForm ? (\n                    <CommentForm\n                        onSubmit={this.resetFeedScroll}\n                        isDisabled={isDisabled}\n                        mentionSelectorContacts={mentionSelectorContacts}\n                        className={classNames('bcs-activity-feed-comment-input', {\n                            'bcs-is-disabled': isDisabled,\n                        })}\n                        createComment={hasCommentPermission ? this.onCommentCreate : noop}\n                        getMentionWithQuery={getMentionWithQuery}\n                        isOpen={isInputOpen}\n                        user={currentUser}\n                        onCancel={this.commentFormCancelHandler}\n                        onFocus={this.commentFormFocusHandler}\n                        getAvatarUrl={getAvatarUrl}\n                    />\n                ) : null}\n            </div>\n        );\n    }\n}\n\nexport default ActivityFeed;\n"],"file":"ActivityFeed.js"}