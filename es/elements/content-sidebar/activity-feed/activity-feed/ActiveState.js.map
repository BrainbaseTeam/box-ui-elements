{"version":3,"sources":["../../../../../src/elements/content-sidebar/activity-feed/activity-feed/ActiveState.js"],"names":["React","classNames","getProp","AppActivity","Comment","TaskNew","Version","CollapsedVersion","withErrorHandling","ActiveState","activeFeedEntryId","activeFeedEntryType","activeFeedItemRef","approverSelectorContacts","currentUser","items","mentionSelectorContacts","getMentionWithQuery","onAppActivityDelete","onCommentDelete","onCommentEdit","onTaskDelete","onTaskEdit","onTaskAssignmentUpdate","onTaskModalClose","onVersionInfo","translations","getApproverWithQuery","getAvatarUrl","getUserProfileUrl","activeEntry","find","id","type","map","item","isFocused","refValue","undefined","can_delete","permissions","can_edit","versions","ActiveStateComponent"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Active state component for Activity Feed\n */\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport getProp from 'lodash/get';\nimport AppActivity from '../app-activity';\nimport Comment from '../comment';\nimport TaskNew from '../task-new';\nimport Version, { CollapsedVersion } from '../version';\nimport withErrorHandling from '../../withErrorHandling';\nimport type { FocusableFeedItemType } from '../../../../common/types/feed';\n\ntype Props = {\n    activeFeedEntryId?: string,\n    activeFeedEntryType?: FocusableFeedItemType,\n    activeFeedItemRef: { current: null | HTMLElement },\n    approverSelectorContacts?: SelectorItems,\n    currentUser?: User,\n    getApproverWithQuery?: Function,\n    getAvatarUrl: GetAvatarUrlCallback,\n    getMentionWithQuery?: Function,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    items: FeedItems,\n    mentionSelectorContacts?: SelectorItems,\n    onAppActivityDelete?: Function,\n    onCommentDelete?: Function,\n    onCommentEdit?: Function,\n    onTaskAssignmentUpdate?: Function,\n    onTaskDelete?: Function,\n    onTaskEdit?: Function,\n    onTaskModalClose?: Function,\n    onVersionInfo?: Function,\n    translations?: Translations,\n};\n\nconst ActiveState = ({\n    activeFeedEntryId,\n    activeFeedEntryType,\n    activeFeedItemRef,\n    approverSelectorContacts,\n    currentUser,\n    items,\n    mentionSelectorContacts,\n    getMentionWithQuery,\n    onAppActivityDelete,\n    onCommentDelete,\n    onCommentEdit,\n    onTaskDelete,\n    onTaskEdit,\n    onTaskAssignmentUpdate,\n    onTaskModalClose,\n    onVersionInfo,\n    translations,\n    getApproverWithQuery,\n    getAvatarUrl,\n    getUserProfileUrl,\n}: Props): React.Node => {\n    const activeEntry = items.find(({ id, type }) => id === activeFeedEntryId && type === activeFeedEntryType);\n\n    return (\n        <ul className=\"bcs-activity-feed-active-state\">\n            {items.map((item: FeedItem) => {\n                const isFocused = item === activeEntry;\n                const refValue = isFocused ? activeFeedItemRef : undefined;\n\n                switch (item.type) {\n                    case 'comment':\n                        return (\n                            <li\n                                key={item.type + item.id}\n                                className={classNames('bcs-activity-feed-comment', { 'bcs-is-focused': isFocused })}\n                                data-testid=\"comment\"\n                                ref={refValue}\n                            >\n                                <Comment\n                                    {...item}\n                                    currentUser={currentUser}\n                                    getAvatarUrl={getAvatarUrl}\n                                    getMentionWithQuery={getMentionWithQuery}\n                                    getUserProfileUrl={getUserProfileUrl}\n                                    mentionSelectorContacts={mentionSelectorContacts}\n                                    onDelete={onCommentDelete}\n                                    onEdit={onCommentEdit}\n                                    permissions={{\n                                        can_delete: getProp(item.permissions, 'can_delete', false),\n                                        can_edit: getProp(item.permissions, 'can_edit', false),\n                                    }}\n                                    translations={translations}\n                                />\n                            </li>\n                        );\n                    case 'task':\n                        return (\n                            <li\n                                key={item.type + item.id}\n                                className={classNames('bcs-activity-feed-task-new', { 'bcs-is-focused': isFocused })}\n                                data-testid=\"task\"\n                                ref={refValue}\n                            >\n                                <TaskNew\n                                    {...item}\n                                    approverSelectorContacts={approverSelectorContacts}\n                                    currentUser={currentUser}\n                                    getApproverWithQuery={getApproverWithQuery}\n                                    getAvatarUrl={getAvatarUrl}\n                                    getUserProfileUrl={getUserProfileUrl}\n                                    onAssignmentUpdate={onTaskAssignmentUpdate}\n                                    onDelete={onTaskDelete}\n                                    onEdit={onTaskEdit}\n                                    onModalClose={onTaskModalClose}\n                                    translations={translations}\n                                />\n                            </li>\n                        );\n                    case 'file_version':\n                        return (\n                            <li key={item.type + item.id} className=\"bcs-version-item\" data-testid=\"version\">\n                                {item.versions ? (\n                                    <CollapsedVersion {...item} onInfo={onVersionInfo} />\n                                ) : (\n                                    <Version {...item} onInfo={onVersionInfo} />\n                                )}\n                            </li>\n                        );\n                    case 'app_activity':\n                        return (\n                            <li\n                                key={item.type + item.id}\n                                className=\"bcs-activity-feed-app-activity\"\n                                data-testid=\"app-activity\"\n                            >\n                                <AppActivity currentUser={currentUser} onDelete={onAppActivityDelete} {...item} />\n                            </li>\n                        );\n                    default:\n                        return null;\n                }\n            })}\n        </ul>\n    );\n};\n\nexport { ActiveState as ActiveStateComponent };\nexport default withErrorHandling(ActiveState);\n"],"file":"ActiveState.js"}