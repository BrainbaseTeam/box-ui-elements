{"version":3,"sources":["../../../../../src/elements/content-sidebar/activity-feed/activity-feed/ActivityItem.tsx"],"names":["React","classNames","ActivityItem","ref","children","className","isFocused","rest","forwardRef"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAQA,SAASC,YAAT,OAA0EC,GAA1E,EAAyG;AAAA,MAAjFC,QAAiF,QAAjFA,QAAiF;AAAA,MAAvEC,SAAuE,QAAvEA,SAAuE;AAAA,MAA5DC,SAA4D,QAA5DA,SAA4D;AAAA,MAA9CC,IAA8C;;AACrG,SACI;AAAI,IAAA,SAAS,EAAEN,UAAU,CAAC,kBAAD,EAAqBI,SAArB,EAAgC;AAAE,wBAAkBC;AAApB,KAAhC,CAAzB;AAA2F,IAAA,GAAG,EAAEH;AAAhG,KAAyGI,IAAzG,GACKH,QADL,CADJ;AAKH;;AAED,eAAeJ,KAAK,CAACQ,UAAN,CAAiBN,YAAjB,CAAf","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n    children: React.ReactNode;\n    className?: string;\n    isFocused?: boolean;\n};\n\nfunction ActivityItem({ children, className, isFocused, ...rest }: Props, ref: React.Ref<HTMLLIElement>) {\n    return (\n        <li className={classNames('bcs-ActivityItem', className, { 'bcs-is-focused': isFocused })} ref={ref} {...rest}>\n            {children}\n        </li>\n    );\n}\n\nexport default React.forwardRef(ActivityItem);\n"],"file":"ActivityItem.js"}