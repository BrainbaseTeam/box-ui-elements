{"version":3,"sources":["../../../src/elements/content-explorer/PreviewDialog.js"],"names":["React","Modal","injectIntl","cloneDeep","messages","ContentPreview","TYPE_FILE","CLASS_MODAL_CONTENT_FULL_BLEED","CLASS_MODAL_OVERLAY","CLASS_MODAL","PreviewDialog","item","isOpen","parentElement","appElement","token","cache","currentCollection","canDownload","onCancel","onPreview","onDownload","apiHost","appHost","staticHost","sharedLink","sharedLinkPassword","contentPreviewProps","requestInterceptor","responseInterceptor","intl","items","onLoad","data","files","filter","type","formatMessage","preview","id"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,SAASC,SAAT,EAAoBC,8BAApB,EAAoDC,mBAApD,EAAyEC,WAAzE,QAA4F,iBAA5F;;AAyBA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAqBT;AAAA,MApBTC,IAoBS,QApBTA,IAoBS;AAAA,MAnBTC,MAmBS,QAnBTA,MAmBS;AAAA,MAlBTC,aAkBS,QAlBTA,aAkBS;AAAA,MAjBTC,UAiBS,QAjBTA,UAiBS;AAAA,MAhBTC,KAgBS,QAhBTA,KAgBS;AAAA,MAfTC,KAeS,QAfTA,KAeS;AAAA,MAdTC,iBAcS,QAdTA,iBAcS;AAAA,MAbTC,WAaS,QAbTA,WAaS;AAAA,MAZTC,QAYS,QAZTA,QAYS;AAAA,MAXTC,SAWS,QAXTA,SAWS;AAAA,MAVTC,UAUS,QAVTA,UAUS;AAAA,MATTC,OASS,QATTA,OASS;AAAA,MARTC,OAQS,QARTA,OAQS;AAAA,MAPTC,UAOS,QAPTA,UAOS;AAAA,MANTC,UAMS,QANTA,UAMS;AAAA,MALTC,kBAKS,QALTA,kBAKS;AAAA,MAJTC,mBAIS,QAJTA,mBAIS;AAAA,MAHTC,kBAGS,QAHTA,kBAGS;AAAA,MAFTC,mBAES,QAFTA,mBAES;AAAA,MADTC,IACS,QADTA,IACS;AAAA,MACDC,KADC,GACqBd,iBADrB,CACDc,KADC;;AAET,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD,EAAqB;AAChCb,IAAAA,SAAS,CAACjB,SAAS,CAAC8B,IAAD,CAAV,CAAT;AACH,GAFD;;AAIA,MAAI,CAACtB,IAAD,IAAS,CAACoB,KAAd,EAAqB;AACjB,WAAO,IAAP;AACH;;AAED,MAAMG,KAAgB,GAAGH,KAAK,CAACI,MAAN,CAAa;AAAA,QAAGC,IAAH,SAAGA,IAAH;AAAA,WAAcA,IAAI,KAAK9B,SAAvB;AAAA,GAAb,CAAzB;AACA,sBACI,oBAAC,KAAD;AACI,IAAA,MAAM,EAAEM,MADZ;AAEI,IAAA,cAAc,EAAE;AAAA,aAAMC,aAAN;AAAA,KAFpB;AAGI,IAAA,eAAe,YAAKJ,WAAL,sBAHnB;AAII,IAAA,SAAS,EAAEF,8BAJf;AAKI,IAAA,gBAAgB,EAAEC,mBALtB;AAMI,IAAA,YAAY,EAAEsB,IAAI,CAACO,aAAL,CAAmBjC,QAAQ,CAACkC,OAA5B,CANlB;AAOI,IAAA,cAAc,EAAEnB,QAPpB;AAQI,IAAA,UAAU,EAAEL;AARhB,kBAUI,oBAAC,cAAD,eACQa,mBADR;AAEI,IAAA,MAAM,EAAEhB,IAAI,CAAC4B,EAFjB;AAGI,IAAA,OAAO,EAAEjB,OAHb;AAII,IAAA,OAAO,EAAEC,OAJb;AAKI,IAAA,UAAU,EAAEC,UALhB;AAMI,IAAA,KAAK,EAAER,KANX;AAOI,IAAA,KAAK,EAAED,KAPX;AAQI,IAAA,SAAS,MARb;AASI,IAAA,SAAS,MATb;AAUI,IAAA,UAAU,EAAEmB,KAVhB;AAWI,IAAA,MAAM,EAAEF,MAXZ;AAYI,IAAA,OAAO,EAAEb,QAZb;AAaI,IAAA,UAAU,EAAEE,UAbhB;AAcI,IAAA,WAAW,EAAEH,WAdjB;AAeI,IAAA,UAAU,EAAEO,UAfhB;AAgBI,IAAA,kBAAkB,EAAEC,kBAhBxB;AAiBI,IAAA,mBAAmB,EAAEC,mBAjBzB;AAkBI,IAAA,kBAAkB,EAAEC,kBAlBxB;AAmBI,IAAA,mBAAmB,EAAEC;AAnBzB,KAVJ,CADJ;AAkCH,CAlED;;AAoEA,eAAe3B,UAAU,CAACQ,aAAD,CAAzB","sourcesContent":["/**\n * @flow\n * @file Content Explorer Preview dialog\n * @author Box\n */\n\nimport React from 'react';\nimport Modal from 'react-modal';\nimport { injectIntl } from 'react-intl';\nimport cloneDeep from 'lodash/cloneDeep';\nimport messages from '../common/messages';\nimport ContentPreview from '../content-preview';\nimport { TYPE_FILE, CLASS_MODAL_CONTENT_FULL_BLEED, CLASS_MODAL_OVERLAY, CLASS_MODAL } from '../../constants';\n\ntype Props = {\n    apiHost: string,\n    appElement: HTMLElement,\n    appHost: string,\n    cache: APICache,\n    canDownload: boolean,\n    contentPreviewProps: ContentPreviewProps,\n    currentCollection: Collection,\n    isOpen: boolean,\n    isTouch: boolean,\n    item: BoxItem,\n    onCancel: Function,\n    onDownload: Function,\n    onPreview: Function,\n    parentElement: HTMLElement,\n    requestInterceptor?: Function,\n    responseInterceptor?: Function,\n    sharedLink?: string,\n    sharedLinkPassword?: string,\n    staticHost: string,\n    token: Token,\n} & InjectIntlProvidedProps;\n\nconst PreviewDialog = ({\n    item,\n    isOpen,\n    parentElement,\n    appElement,\n    token,\n    cache,\n    currentCollection,\n    canDownload,\n    onCancel,\n    onPreview,\n    onDownload,\n    apiHost,\n    appHost,\n    staticHost,\n    sharedLink,\n    sharedLinkPassword,\n    contentPreviewProps,\n    requestInterceptor,\n    responseInterceptor,\n    intl,\n}: Props) => {\n    const { items }: Collection = currentCollection;\n    const onLoad = (data: any): void => {\n        onPreview(cloneDeep(data));\n    };\n\n    if (!item || !items) {\n        return null;\n    }\n\n    const files: BoxItem[] = items.filter(({ type }) => type === TYPE_FILE);\n    return (\n        <Modal\n            isOpen={isOpen}\n            parentSelector={() => parentElement}\n            portalClassName={`${CLASS_MODAL} be-modal-preview`}\n            className={CLASS_MODAL_CONTENT_FULL_BLEED}\n            overlayClassName={CLASS_MODAL_OVERLAY}\n            contentLabel={intl.formatMessage(messages.preview)}\n            onRequestClose={onCancel}\n            appElement={appElement}\n        >\n            <ContentPreview\n                {...contentPreviewProps}\n                fileId={item.id}\n                apiHost={apiHost}\n                appHost={appHost}\n                staticHost={staticHost}\n                cache={cache}\n                token={token}\n                hasHeader\n                autoFocus\n                collection={files}\n                onLoad={onLoad}\n                onClose={onCancel}\n                onDownload={onDownload}\n                canDownload={canDownload}\n                sharedLink={sharedLink}\n                sharedLinkPassword={sharedLinkPassword}\n                contentPreviewProps={contentPreviewProps}\n                requestInterceptor={requestInterceptor}\n                responseInterceptor={responseInterceptor}\n            />\n        </Modal>\n    );\n};\n\nexport default injectIntl(PreviewDialog);\n"],"file":"PreviewDialog.js"}