{"version":3,"sources":["../../../src/elements/content-explorer/RenameDialog.js"],"names":["React","Modal","injectIntl","FormattedMessage","PrimaryButton","Button","messages","CLASS_MODAL_CONTENT","CLASS_MODAL_OVERLAY","CLASS_MODAL","ERROR_CODE_ITEM_NAME_TOO_LONG","ERROR_CODE_ITEM_NAME_IN_USE","RenameDialog","isOpen","onRename","onCancel","item","isLoading","errorCode","parentElement","appElement","intl","textInput","error","name","extension","ext","nameWithoutExt","replace","rename","value","ref","input","HTMLInputElement","focus","select","onKeyDown","key","renameDialogErrorInUse","renameDialogErrorTooLong","renameDialogErrorInvalid","formatMessage","renameDialogLabel","renameDialogText","cancel"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Content Explorer Rename Dialog\n * @author Box\n */\n\nimport React from 'react';\nimport Modal from 'react-modal';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport type { InjectIntlProvidedProps } from 'react-intl';\nimport PrimaryButton from '../../components/primary-button/PrimaryButton';\nimport Button from '../../components/button/Button';\nimport messages from '../common/messages';\nimport {\n    CLASS_MODAL_CONTENT,\n    CLASS_MODAL_OVERLAY,\n    CLASS_MODAL,\n    ERROR_CODE_ITEM_NAME_TOO_LONG,\n    ERROR_CODE_ITEM_NAME_IN_USE,\n} from '../../constants';\nimport type { BoxItem } from '../../common/types/core';\n\ntype Props = {\n    appElement: HTMLElement,\n    errorCode: string,\n    isLoading: boolean,\n    isOpen: boolean,\n    item: BoxItem,\n    onCancel: Function,\n    onRename: Function,\n    parentElement: HTMLElement,\n} & InjectIntlProvidedProps;\n\n/* eslint-disable jsx-a11y/label-has-for */\nconst RenameDialog = ({\n    isOpen,\n    onRename,\n    onCancel,\n    item,\n    isLoading,\n    errorCode,\n    parentElement,\n    appElement,\n    intl,\n}: Props) => {\n    let textInput = null;\n    let error;\n\n    const { name = '', extension } = item;\n    const ext = extension ? `.${extension}` : '';\n    const nameWithoutExt = extension ? name.replace(ext, '') : name;\n\n    /**\n     * Appends the extension and calls rename function\n     */\n    const rename = () => {\n        if (textInput && textInput.value) {\n            if (textInput.value === nameWithoutExt) {\n                onCancel();\n            } else {\n                onRename(textInput.value, ext);\n            }\n        }\n    };\n\n    /**\n     * Grabs reference to the input element\n     */\n    const ref = input => {\n        textInput = input;\n        if (textInput instanceof HTMLInputElement) {\n            textInput.focus();\n            textInput.select();\n        }\n    };\n\n    /**\n     * Handles enter key down\n     */\n    const onKeyDown = ({ key }) => {\n        switch (key) {\n            case 'Enter':\n                rename();\n                break;\n            default:\n                break;\n        }\n    };\n\n    switch (errorCode) {\n        case ERROR_CODE_ITEM_NAME_IN_USE:\n            error = messages.renameDialogErrorInUse;\n            break;\n        case ERROR_CODE_ITEM_NAME_TOO_LONG:\n            error = messages.renameDialogErrorTooLong;\n            break;\n        default:\n            error = errorCode ? messages.renameDialogErrorInvalid : null;\n            break;\n    }\n\n    return (\n        <Modal\n            appElement={appElement}\n            className={CLASS_MODAL_CONTENT}\n            contentLabel={intl.formatMessage(messages.renameDialogLabel)}\n            isOpen={isOpen}\n            onRequestClose={onCancel}\n            overlayClassName={CLASS_MODAL_OVERLAY}\n            parentSelector={() => parentElement}\n            portalClassName={`${CLASS_MODAL} be-modal-rename`}\n        >\n            <label>\n                {error ? (\n                    <div className=\"be-modal-error\">\n                        <FormattedMessage {...error} values={{ name: nameWithoutExt }} />\n                    </div>\n                ) : null}\n                <FormattedMessage tagName=\"div\" {...messages.renameDialogText} values={{ name: nameWithoutExt }} />\n                <input ref={ref} defaultValue={nameWithoutExt} onKeyDown={onKeyDown} required type=\"text\" />\n            </label>\n            <div className=\"be-modal-btns\">\n                <PrimaryButton isLoading={isLoading} onClick={rename} type=\"button\">\n                    <FormattedMessage {...messages.rename} />\n                </PrimaryButton>\n                <Button isDisabled={isLoading} onClick={onCancel} type=\"button\">\n                    <FormattedMessage {...messages.cancel} />\n                </Button>\n            </div>\n        </Modal>\n    );\n};\n\nexport default injectIntl(RenameDialog);\n"],"file":"RenameDialog.js"}