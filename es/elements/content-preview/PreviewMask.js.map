{"version":3,"sources":["../../../src/elements/content-preview/PreviewMask.tsx"],"names":["React","PreviewError","PreviewLoading","PreviewMask","errorCode","extension","isLoading"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,OAAO,oBAAP;AAQA,eAAe,SAASC,WAAT,OAA4F;AAAA,MAArEC,SAAqE,QAArEA,SAAqE;AAAA,MAA1DC,SAA0D,QAA1DA,SAA0D;AAAA,MAA/CC,SAA+C,QAA/CA,SAA+C;;AACvG,MAAI,CAACF,SAAD,IAAc,CAACE,SAAnB,EAA8B;AAC1B,WAAO,IAAP;AACH;;AAED,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACKF,SAAS,GAAG,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAEA;AAAzB,IAAH,GAA4CE,SAAS,IAAI,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAED;AAA3B,IADvE,CADJ;AAKH","sourcesContent":["import React from 'react';\n// @ts-ignore flow import\nimport PreviewError from './PreviewError';\nimport { PreviewLoading } from '../../components/preview';\nimport './PreviewMask.scss';\n\nexport type Props = {\n    errorCode?: string;\n    extension?: string;\n    isLoading?: boolean;\n};\n\nexport default function PreviewMask({ errorCode, extension, isLoading }: Props): React.ReactElement | null {\n    if (!errorCode && !isLoading) {\n        return null;\n    }\n\n    return (\n        <div className=\"bcpr-PreviewMask\">\n            {errorCode ? <PreviewError errorCode={errorCode} /> : isLoading && <PreviewLoading extension={extension} />}\n        </div>\n    );\n}\n"],"file":"PreviewMask.js"}