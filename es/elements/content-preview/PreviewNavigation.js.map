{"version":3,"sources":["../../../src/elements/content-preview/PreviewNavigation.js"],"names":["React","injectIntl","Route","NavRouter","IconNavigateLeft","IconNavigateRight","PlainButton","messages","PreviewNavigation","collection","currentIndex","intl","onNavigateLeft","onNavigateRight","historyProp","history","hasLeftNavigation","length","hasRightNavigation","match","params","deeplink","push","activeTab","formatMessage","previousFile","nextFile","PreviewNavigationComponent"],"mappings":"AAAA;;;;;AAMA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAGA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AACA,OAAOC,QAAP,MAAqB,oBAArB;;AAUA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAOb;AAAA,6BANTC,UAMS;AAAA,MANTA,UAMS,gCANI,EAMJ;AAAA,MALTC,YAKS,QALTA,YAKS;AAAA,MAJTC,IAIS,QAJTA,IAIS;AAAA,MAHTC,cAGS,QAHTA,cAGS;AAAA,MAFTC,eAES,QAFTA,eAES;AAAA,MADAC,WACA,QADTC,OACS;AACT,MAAMC,iBAAiB,GAAGP,UAAU,CAACQ,MAAX,GAAoB,CAApB,IAAyBP,YAAY,GAAG,CAAxC,IAA6CA,YAAY,GAAGD,UAAU,CAACQ,MAAjG;AACA,MAAMC,kBAAkB,GAAGT,UAAU,CAACQ,MAAX,GAAoB,CAApB,IAAyBP,YAAY,GAAG,CAAC,CAAzC,IAA8CA,YAAY,GAAGD,UAAU,CAACQ,MAAX,GAAoB,CAA5G;;AAEA,MAAI,CAACD,iBAAD,IAAsB,CAACE,kBAA3B,EAA+C;AAC3C,WAAO,IAAP;AACH;;AAED,sBACI,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEJ;AAApB,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAE,CAAC,uBAAD,EAA0B,GAA1B;AAAb,KACK;AAAA,QAAGK,KAAH,SAAGA,KAAH;AAAA,QAAUJ,OAAV,SAAUA,OAAV;AAAA,wBACG,0CACKC,iBAAiB,iBACd,oBAAC,WAAD;AACI,MAAA,SAAS,EAAC,oBADd;AAEI,MAAA,OAAO,EAAE,mBAAM;AACX,YAAIG,KAAK,CAACC,MAAN,CAAaC,QAAjB,EAA2B;AACvBN,UAAAA,OAAO,CAACO,IAAR,YAAiBH,KAAK,CAACC,MAAN,CAAaG,SAA9B;AACH;;AACDX,QAAAA,cAAc;AACjB,OAPL;AAQI,MAAA,KAAK,EAAED,IAAI,CAACa,aAAL,CAAmBjB,QAAQ,CAACkB,YAA5B,CARX;AASI,MAAA,IAAI,EAAC;AATT,oBAWI,oBAAC,gBAAD,OAXJ,CAFR,EAgBKP,kBAAkB,iBACf,oBAAC,WAAD;AACI,MAAA,SAAS,EAAC,qBADd;AAEI,MAAA,OAAO,EAAE,mBAAM;AACX,YAAIC,KAAK,CAACC,MAAN,CAAaC,QAAjB,EAA2B;AACvBN,UAAAA,OAAO,CAACO,IAAR,YAAiBH,KAAK,CAACC,MAAN,CAAaG,SAA9B;AACH;;AACDV,QAAAA,eAAe;AAClB,OAPL;AAQI,MAAA,KAAK,EAAEF,IAAI,CAACa,aAAL,CAAmBjB,QAAQ,CAACmB,QAA5B,CARX;AASI,MAAA,IAAI,EAAC;AATT,oBAWI,oBAAC,iBAAD,OAXJ,CAjBR,CADH;AAAA,GADL,CADJ,CADJ;AAwCH,CAvDD;;AAyDA,SAASlB,iBAAiB,IAAImB,0BAA9B;AACA,eAAe1B,UAAU,CAACO,iBAAD,CAAzB","sourcesContent":["/**\n * @flow\n * @file Preview Navigation\n * @author Box\n */\n\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Route } from 'react-router-dom';\nimport type { RouterHistory } from 'react-router-dom';\nimport type { InjectIntlProvidedProps } from 'react-intl';\nimport NavRouter from '../common/nav-router';\nimport IconNavigateLeft from '../../icons/general/IconNavigateLeft';\nimport IconNavigateRight from '../../icons/general/IconNavigateRight';\nimport PlainButton from '../../components/plain-button/PlainButton';\nimport messages from '../common/messages';\n\ntype Props = {\n    collection: Array<string | BoxItem>,\n    currentIndex: number,\n    history?: ?RouterHistory,\n    onNavigateLeft: Function,\n    onNavigateRight: Function,\n} & InjectIntlProvidedProps;\n\nconst PreviewNavigation = ({\n    collection = [],\n    currentIndex,\n    intl,\n    onNavigateLeft,\n    onNavigateRight,\n    history: historyProp,\n}: Props) => {\n    const hasLeftNavigation = collection.length > 1 && currentIndex > 0 && currentIndex < collection.length;\n    const hasRightNavigation = collection.length > 1 && currentIndex > -1 && currentIndex < collection.length - 1;\n\n    if (!hasLeftNavigation && !hasRightNavigation) {\n        return null;\n    }\n\n    return (\n        <NavRouter history={historyProp}>\n            <Route path={['/:activeTab/:deeplink', '/']}>\n                {({ match, history }) => (\n                    <>\n                        {hasLeftNavigation && (\n                            <PlainButton\n                                className=\"bcpr-navigate-left\"\n                                onClick={() => {\n                                    if (match.params.deeplink) {\n                                        history.push(`/${match.params.activeTab}`);\n                                    }\n                                    onNavigateLeft();\n                                }}\n                                title={intl.formatMessage(messages.previousFile)}\n                                type=\"button\"\n                            >\n                                <IconNavigateLeft />\n                            </PlainButton>\n                        )}\n                        {hasRightNavigation && (\n                            <PlainButton\n                                className=\"bcpr-navigate-right\"\n                                onClick={() => {\n                                    if (match.params.deeplink) {\n                                        history.push(`/${match.params.activeTab}`);\n                                    }\n                                    onNavigateRight();\n                                }}\n                                title={intl.formatMessage(messages.nextFile)}\n                                type=\"button\"\n                            >\n                                <IconNavigateRight />\n                            </PlainButton>\n                        )}\n                    </>\n                )}\n            </Route>\n        </NavRouter>\n    );\n};\n\nexport { PreviewNavigation as PreviewNavigationComponent };\nexport default injectIntl(PreviewNavigation);\n"],"file":"PreviewNavigation.js"}