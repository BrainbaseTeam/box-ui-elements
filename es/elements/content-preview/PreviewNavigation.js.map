{"version":3,"sources":["../../../src/elements/content-preview/PreviewNavigation.js"],"names":["React","injectIntl","Route","IconNavigateLeft","IconNavigateRight","PlainButton","messages","PreviewNavigation","collection","currentIndex","intl","onNavigateLeft","onNavigateRight","hasLeftNavigation","length","hasRightNavigation","match","history","params","deeplink","push","activeTab","formatMessage","previousFile","nextFile","PreviewNavigationComponent"],"mappings":"AAAA;;;;;AAMA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,gBAAP,MAA6B,sCAA7B;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AACA,OAAOC,QAAP,MAAqB,oBAArB;;AAUA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAAqF;AAAA,6BAAlFC,UAAkF;AAAA,MAAlFA,UAAkF,gCAArE,EAAqE;AAAA,MAAjEC,YAAiE,QAAjEA,YAAiE;AAAA,MAAnDC,IAAmD,QAAnDA,IAAmD;AAAA,MAA7CC,cAA6C,QAA7CA,cAA6C;AAAA,MAA7BC,eAA6B,QAA7BA,eAA6B;AAC3G,MAAMC,iBAAiB,GAAGL,UAAU,CAACM,MAAX,GAAoB,CAApB,IAAyBL,YAAY,GAAG,CAAxC,IAA6CA,YAAY,GAAGD,UAAU,CAACM,MAAjG;AACA,MAAMC,kBAAkB,GAAGP,UAAU,CAACM,MAAX,GAAoB,CAApB,IAAyBL,YAAY,GAAG,CAAC,CAAzC,IAA8CA,YAAY,GAAGD,UAAU,CAACM,MAAX,GAAoB,CAA5G;;AAEA,MAAI,CAACD,iBAAD,IAAsB,CAACE,kBAA3B,EAA+C;AAC3C,WAAO,IAAP;AACH;;AAED,SACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAE,CAAC,uBAAD,EAA0B,GAA1B;AAAb,KACK;AAAA,QAAGC,KAAH,SAAGA,KAAH;AAAA,QAAUC,OAAV,SAAUA,OAAV;AAAA,WACG,0CACKJ,iBAAiB,IACd,oBAAC,WAAD;AACI,MAAA,SAAS,EAAC,oBADd;AAEI,MAAA,OAAO,EAAE,mBAAM;AACX,YAAIG,KAAK,CAACE,MAAN,CAAaC,QAAjB,EAA2B;AACvBF,UAAAA,OAAO,CAACG,IAAR,YAAiBJ,KAAK,CAACE,MAAN,CAAaG,SAA9B;AACH;;AACDV,QAAAA,cAAc;AACjB,OAPL;AAQI,MAAA,KAAK,EAAED,IAAI,CAACY,aAAL,CAAmBhB,QAAQ,CAACiB,YAA5B,CARX;AASI,MAAA,IAAI,EAAC;AATT,OAWI,oBAAC,gBAAD,OAXJ,CAFR,EAgBKR,kBAAkB,IACf,oBAAC,WAAD;AACI,MAAA,SAAS,EAAC,qBADd;AAEI,MAAA,OAAO,EAAE,mBAAM;AACX,YAAIC,KAAK,CAACE,MAAN,CAAaC,QAAjB,EAA2B;AACvBF,UAAAA,OAAO,CAACG,IAAR,YAAiBJ,KAAK,CAACE,MAAN,CAAaG,SAA9B;AACH;;AACDT,QAAAA,eAAe;AAClB,OAPL;AAQI,MAAA,KAAK,EAAEF,IAAI,CAACY,aAAL,CAAmBhB,QAAQ,CAACkB,QAA5B,CARX;AASI,MAAA,IAAI,EAAC;AATT,OAWI,oBAAC,iBAAD,OAXJ,CAjBR,CADH;AAAA,GADL,CADJ;AAsCH,CA9CD;;AAgDA,SAASjB,iBAAiB,IAAIkB,0BAA9B;AACA,eAAexB,UAAU,CAACM,iBAAD,CAAzB","sourcesContent":["/**\n * @flow\n * @file Preview Navigation\n * @author Box\n */\n\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Route } from 'react-router-dom';\nimport type { InjectIntlProvidedProps } from 'react-intl';\nimport IconNavigateLeft from '../../icons/general/IconNavigateLeft';\nimport IconNavigateRight from '../../icons/general/IconNavigateRight';\nimport PlainButton from '../../components/plain-button/PlainButton';\nimport messages from '../common/messages';\nimport type { BoxItem } from '../../common/types/core';\n\ntype Props = {\n    collection: Array<string | BoxItem>,\n    currentIndex: number,\n    onNavigateLeft: Function,\n    onNavigateRight: Function,\n} & InjectIntlProvidedProps;\n\nconst PreviewNavigation = ({ collection = [], currentIndex, intl, onNavigateLeft, onNavigateRight }: Props) => {\n    const hasLeftNavigation = collection.length > 1 && currentIndex > 0 && currentIndex < collection.length;\n    const hasRightNavigation = collection.length > 1 && currentIndex > -1 && currentIndex < collection.length - 1;\n\n    if (!hasLeftNavigation && !hasRightNavigation) {\n        return null;\n    }\n\n    return (\n        <Route path={['/:activeTab/:deeplink', '/']}>\n            {({ match, history }) => (\n                <>\n                    {hasLeftNavigation && (\n                        <PlainButton\n                            className=\"bcpr-navigate-left\"\n                            onClick={() => {\n                                if (match.params.deeplink) {\n                                    history.push(`/${match.params.activeTab}`);\n                                }\n                                onNavigateLeft();\n                            }}\n                            title={intl.formatMessage(messages.previousFile)}\n                            type=\"button\"\n                        >\n                            <IconNavigateLeft />\n                        </PlainButton>\n                    )}\n                    {hasRightNavigation && (\n                        <PlainButton\n                            className=\"bcpr-navigate-right\"\n                            onClick={() => {\n                                if (match.params.deeplink) {\n                                    history.push(`/${match.params.activeTab}`);\n                                }\n                                onNavigateRight();\n                            }}\n                            title={intl.formatMessage(messages.nextFile)}\n                            type=\"button\"\n                        >\n                            <IconNavigateRight />\n                        </PlainButton>\n                    )}\n                </>\n            )}\n        </Route>\n    );\n};\n\nexport { PreviewNavigation as PreviewNavigationComponent };\nexport default injectIntl(PreviewNavigation);\n"],"file":"PreviewNavigation.js"}