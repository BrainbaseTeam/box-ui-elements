{"version":3,"sources":["../../../src/elements/content-open-with/OpenWithButton.js"],"names":["React","FormattedMessage","noop","Button","IconOpenWith","Tooltip","messages","OpenWithButtonContents","utils","CLASS_INTEGRATION_ICON","OPEN_WITH_BUTTON_ICON_SIZE","getIcon","getTooltip","displayDescription","isLoading","error","disabledReasons","message","emptyOpenWithDescription","length","errorOpenWithDescription","OpenWithButton","onClick","displayIntegration","displayName","isDisplayIntegrationDisabled","isDisabled","extension","Icon","tooltipDisplayProps","isDisabledBecauseBoxToolsIsNotInstalled","isShown","showCloseButton"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Open With button\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport noop from 'lodash/noop';\nimport Button from '../../components/button/Button';\nimport IconOpenWith from '../../icons/general/IconOpenWith';\nimport Tooltip from '../common/Tooltip';\nimport messages from '../common/messages';\nimport OpenWithButtonContents from './OpenWithButtonContents';\nimport utils from './openWithUtils';\nimport { CLASS_INTEGRATION_ICON, OPEN_WITH_BUTTON_ICON_SIZE } from '../../constants';\nimport getIcon from './IconFileMap';\nimport type { DisabledReason, Integration } from '../../common/types/integrations';\n\ntype Props = {\n    displayIntegration?: ?Integration,\n    error: ?any,\n    icon?: string,\n    isLoading: boolean,\n    onClick?: Integration => void,\n    tooltipText?: string | Object,\n};\n\n/**\n * Gets the tooltip text for the ContentOpenWith button\n *\n * @private\n * @return {?(string | Element)} the tooltip message\n */\nexport const getTooltip = (\n    displayDescription: string,\n    isLoading: boolean,\n    error: ?Error,\n    disabledReasons: Array<DisabledReason> = [],\n): ?DisabledReason => {\n    if (isLoading) {\n        return null;\n    }\n\n    let message = <FormattedMessage {...messages.emptyOpenWithDescription} />;\n    if (disabledReasons.length > 0) {\n        [message] = disabledReasons;\n    } else if (error) {\n        message = <FormattedMessage {...messages.errorOpenWithDescription} />;\n    } else if (displayDescription) {\n        message = displayDescription;\n    }\n\n    return message;\n};\n\nconst OpenWithButton = ({ error, onClick = noop, displayIntegration, isLoading }: Props) => {\n    const { displayName, isDisabled: isDisplayIntegrationDisabled, extension, disabledReasons, displayDescription } =\n        displayIntegration || {};\n\n    const isDisabled = !!isDisplayIntegrationDisabled || !displayName;\n    const Icon = displayName ? getIcon(displayName) : IconOpenWith;\n\n    const tooltipDisplayProps = utils.isDisabledBecauseBoxToolsIsNotInstalled(displayIntegration)\n        ? { isShown: true, showCloseButton: true }\n        : {};\n\n    return (\n        <Tooltip\n            className=\"bcow-tooltip\"\n            position=\"bottom-center\"\n            text={getTooltip(displayDescription, isLoading, error, disabledReasons)}\n            {...tooltipDisplayProps}\n        >\n            <Button\n                data-testid=\"singleintegrationbutton\"\n                isDisabled={isDisabled}\n                onClick={() => (displayIntegration ? onClick(displayIntegration) : noop)}\n            >\n                <OpenWithButtonContents>\n                    <Icon\n                        className={CLASS_INTEGRATION_ICON}\n                        dimension={OPEN_WITH_BUTTON_ICON_SIZE}\n                        extension={extension}\n                        height={OPEN_WITH_BUTTON_ICON_SIZE}\n                        width={OPEN_WITH_BUTTON_ICON_SIZE}\n                    />\n                </OpenWithButtonContents>\n            </Button>\n        </Tooltip>\n    );\n};\n\nexport default OpenWithButton;\n"],"file":"OpenWithButton.js"}