{"version":3,"sources":["../../../src/elements/content-open-with/OpenWithDropdownMenuItem.js"],"names":["React","FormattedMessage","classNames","MenuItem","messages","OPEN_WITH_MENU_ITEM_ICON_SIZE","getIcon","utils","getErrorMessage","disabledReasons","message","code","defaultErrorMessage","errorOpenWithDescription","boxEditErrorBlockedByPolicy","OpenWithDropdownMenuItem","integration","onClick","displayName","displayDescription","isDisabled","extension","Icon","description","className","isDisabledBecauseBoxToolsIsNotInstalled"],"mappings":"AAAA;;;;;AAMA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,6BAAT,QAA8C,iBAA9C;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAO,iCAAP;;AAOA,SAASC,eAAT,GAA0E;AAAA,MAAjDC,eAAiD,uEAAhB,EAAgB;AACtE,MAAIC,OAAJ,CADsE,CAEtE;;AACA,MAAMC,IAAI,GAAGF,eAAe,CAAC,CAAD,CAA5B;AACA,MAAMG,mBAAmB,gBAAG,oBAAC,gBAAD,EAAsBR,QAAQ,CAACS,wBAA/B,CAA5B;;AAEA,UAAQF,IAAR;AACI,SAAK,iCAAL;AACID,MAAAA,OAAO,gBAAG,oBAAC,gBAAD,EAAsBN,QAAQ,CAACU,2BAA/B,CAAV;AACA;;AACJ,SAAK,sBAAL;AACIJ,MAAAA,OAAO,GAAGE,mBAAV;AACA;;AACJ;AACIF,MAAAA,OAAO,GAAGD,eAAe,CAAC,CAAD,CAAf,IAAsBG,mBAAhC;AARR;;AAUA,SAAOF,OAAP;AACH;;AAED,IAAMK,wBAAwB,GAAG,SAA3BA,wBAA2B,OAAqC;AAAA,MAAlCC,WAAkC,QAAlCA,WAAkC;AAAA,MAArBC,QAAqB,QAArBA,OAAqB;AAAA,MAC1DC,WAD0D,GACkBF,WADlB,CAC1DE,WAD0D;AAAA,MAC7CC,kBAD6C,GACkBH,WADlB,CAC7CG,kBAD6C;AAAA,MACzBC,UADyB,GACkBJ,WADlB,CACzBI,UADyB;AAAA,MACbC,SADa,GACkBL,WADlB,CACbK,SADa;AAAA,MACFZ,eADE,GACkBO,WADlB,CACFP,eADE;AAElE,MAAMa,IAAI,GAAGhB,OAAO,CAACY,WAAD,CAApB;AACA,MAAMK,WAAW,GAAGH,UAAU,GAAGZ,eAAe,CAACC,eAAD,CAAlB,GAAsCU,kBAApE;AACA,MAAMK,SAAS,GAAGtB,UAAU,CAAC;AACzB,kCAA8BK,KAAK,CAACkB,uCAAN,CAA8CT,WAA9C;AADL,GAAD,CAA5B;AAIA,sBACI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEQ,SAArB;AAAgC,IAAA,UAAU,EAAEJ,UAA5C;AAAwD,IAAA,OAAO,EAAE;AAAA,aAAMH,QAAO,CAACD,WAAD,CAAb;AAAA;AAAjE,kBACI,oBAAC,IAAD;AACI,IAAA,SAAS,EAAEX,6BADf;AAEI,IAAA,SAAS,EAAEgB,SAFf;AAGI,IAAA,MAAM,EAAEhB,6BAHZ;AAII,IAAA,KAAK,EAAEA;AAJX,IADJ,eAOI,+CACI;AAAG,IAAA,SAAS,EAAC;AAAb,KAAqCa,WAArC,CADJ,eAEI;AAAG,IAAA,SAAS,EAAC;AAAb,KAA2CK,WAA3C,CAFJ,CAPJ,CADJ;AAcH,CAtBD;;AAwBA,eAAeR,wBAAf","sourcesContent":["/**\n * @flow\n * @file Open With dropdown menu item\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport MenuItem from '../../components/menu/MenuItem';\nimport messages from '../common/messages';\nimport { OPEN_WITH_MENU_ITEM_ICON_SIZE } from '../../constants';\nimport getIcon from './IconFileMap';\nimport utils from './openWithUtils';\nimport './OpenWithDropdownMenuItem.scss';\n\ntype Props = {\n    integration: Integration,\n    onClick: Function,\n};\n\nfunction getErrorMessage(disabledReasons: Array<string> = []): React.Node {\n    let message;\n    // Use the first disabled reason as the description if the integration is disabled.\n    const code = disabledReasons[0];\n    const defaultErrorMessage = <FormattedMessage {...messages.errorOpenWithDescription} />;\n\n    switch (code) {\n        case 'blocked_by_shield_access_policy':\n            message = <FormattedMessage {...messages.boxEditErrorBlockedByPolicy} />;\n            break;\n        case 'collaborators_hidden':\n            message = defaultErrorMessage;\n            break;\n        default:\n            message = disabledReasons[0] || defaultErrorMessage;\n    }\n    return message;\n}\n\nconst OpenWithDropdownMenuItem = ({ integration, onClick }: Props) => {\n    const { displayName, displayDescription, isDisabled, extension, disabledReasons } = integration;\n    const Icon = getIcon(displayName);\n    const description = isDisabled ? getErrorMessage(disabledReasons) : displayDescription;\n    const className = classNames({\n        'bcow-box-tools-uninstalled': utils.isDisabledBecauseBoxToolsIsNotInstalled(integration),\n    });\n\n    return (\n        <MenuItem className={className} isDisabled={isDisabled} onClick={() => onClick(integration)}>\n            <Icon\n                dimension={OPEN_WITH_MENU_ITEM_ICON_SIZE}\n                extension={extension}\n                height={OPEN_WITH_MENU_ITEM_ICON_SIZE}\n                width={OPEN_WITH_MENU_ITEM_ICON_SIZE}\n            />\n            <span>\n                <p className=\"bcow-menu-item-title\">{displayName}</p>\n                <p className=\"bcow-menu-item-description\">{description}</p>\n            </span>\n        </MenuItem>\n    );\n};\n\nexport default OpenWithDropdownMenuItem;\n"],"file":"OpenWithDropdownMenuItem.js"}