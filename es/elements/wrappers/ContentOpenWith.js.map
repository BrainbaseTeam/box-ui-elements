{"version":3,"sources":["../../../src/elements/wrappers/ContentOpenWith.js"],"names":["React","render","ES6Wrapper","ContentOpenWithReactComponent","ContentOpenWith","appIntegrationId","emit","error","setComponent","id","language","messages","onInteraction","token","options","onError","onExecute","container","global","Box"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAMA,OAAO,6BAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAM,IAANA,OAAT,QAAuB,WAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,6BAAP,MAA0C,sBAA1C;;IAEMC,e;;;;;;;;;;;;;;;;gEAMU,UAACC,gBAAD,EAAoC;AAC5C,YAAKC,IAAL,CAAU,SAAV,EAAqBD,gBAArB;AACH,K;;8DAOS,UAACE,KAAD,EAAwB;AAC9B,YAAKD,IAAL,CAAU,OAAV,EAAmBC,KAAnB;AACH,K;;;;;;;;AAED;6BACS;AACLN,MAAAA,OAAM,eACF,oBAAC,6BAAD;AACI,QAAA,YAAY,EAAE,KAAKO,YADvB;AAEI,QAAA,MAAM,EAAE,KAAKC,EAFjB;AAGI,QAAA,QAAQ,EAAE,KAAKC,QAHnB;AAII,QAAA,QAAQ,EAAE,KAAKC,QAJnB;AAKI,QAAA,aAAa,EAAE,KAAKC,aALxB;AAMI,QAAA,KAAK,EAAE,KAAKC;AANhB,SAOQ,KAAKC,OAPb;AAQI,QAAA,OAAO,EAAE,KAAKC,OARlB;AASI,QAAA,SAAS,EAAE,KAAKC;AATpB,SADE,EAYF,KAAKC,SAZH,CAAN;AAcH;;;;EAnCyBf,U;;AAsC9BgB,MAAM,CAACC,GAAP,GAAaD,MAAM,CAACC,GAAP,IAAc,EAA3B;AACAD,MAAM,CAACC,GAAP,CAAWf,eAAX,GAA6BA,eAA7B;AACA,eAAeA,eAAf","sourcesContent":["/**\n * @flow\n * @file Base class for the Open With ES6 wrapper\n * @author Box\n */\n\nimport 'regenerator-runtime/runtime';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ES6Wrapper from './ES6Wrapper';\nimport ContentOpenWithReactComponent from '../content-open-with';\n\nclass ContentOpenWith extends ES6Wrapper {\n    /**\n     * Callback for executing an integration\n     *\n     * @return {void}\n     */\n    onExecute = (appIntegrationId: string): void => {\n        this.emit('execute', appIntegrationId);\n    };\n\n    /**\n     * Callback when an error occurs while loading or executing integrations\n     *\n     * @return {void}\n     */\n    onError = (error: Error): void => {\n        this.emit('error', error);\n    };\n\n    /** @inheritdoc */\n    render() {\n        render(\n            <ContentOpenWithReactComponent\n                componentRef={this.setComponent}\n                fileId={this.id}\n                language={this.language}\n                messages={this.messages}\n                onInteraction={this.onInteraction}\n                token={this.token}\n                {...this.options}\n                onError={this.onError}\n                onExecute={this.onExecute}\n            />,\n            this.container,\n        );\n    }\n}\n\nglobal.Box = global.Box || {};\nglobal.Box.ContentOpenWith = ContentOpenWith;\nexport default ContentOpenWith;\n"],"file":"ContentOpenWith.js"}