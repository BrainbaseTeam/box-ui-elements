{"version":3,"sources":["../../../src/elements/wrappers/ContentExplorer.js"],"names":["React","render","ES6Wrapper","ContentExplorerReactComponent","ContentExplorer","data","emit","id","component","getComponent","clearCache","fetchFolder","language","messages","token","setComponent","onDelete","onDownload","onPreview","onRename","onSelect","onUpload","onCreate","onNavigate","onInteraction","onBatchDownload","onBatchCancel","onCustomShare","onMoveTo","onCopy","onSetThumbnail","onRemoveThumbnail","options","container","global","Box"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Base class for the Content Explorer ES6 wrapper\n * @author Box\n */\n\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ES6Wrapper from './ES6Wrapper';\nimport ContentExplorerReactComponent from '../content-explorer';\nimport type { BoxItem } from '../../common/types/core';\n\nclass ContentExplorer extends ES6Wrapper {\n    /**\n     * Callback for selecting files\n     *\n     * @param {Array} data - chosen box items\n     * @return {void}\n     */\n    onSelect = (data: BoxItem[]): void => {\n        this.emit('select', data);\n    };\n\n    /**\n     * Callback for navigating into a folder\n     *\n     * @param {Object} data - chosen box items\n     * @return {void}\n     */\n    onNavigate = (data: BoxItem): void => {\n        this.emit('navigate', data);\n    };\n\n    /**\n     * Callback for renaming file\n     *\n     * @return {void}\n     */\n    onRename = (data: BoxItem): void => {\n        this.emit('rename', data);\n    };\n\n    /**\n     * Callback for previewing a file\n     *\n     * @return {void}\n     */\n    onPreview = (data: BoxItem): void => {\n        this.emit('preview', data);\n    };\n\n    /**\n     * Callback for downloading a file\n     *\n     * @return {void}\n     */\n    onDownload = (data: BoxItem[]): void => {\n        this.emit('download', data);\n    };\n\n    /**\n     * Callback for deleting a file\n     *\n     * @return {void}\n     */\n    onDelete = (data: BoxItem[]): void => {\n        this.emit('delete', data);\n    };\n\n    /**\n     * Callback for uploading a file\n     *\n     * @return {void}\n     */\n    onUpload = (data: BoxItem[]): void => {\n        this.emit('upload', data);\n    };\n\n    /**\n     * Callback for creating a folder\n     *\n     * @return {void}\n     */\n    onCreate = (data: BoxItem): void => {\n        this.emit('create', data);\n    };\n\n    /**\n     * Callback for batch download start\n     *\n     * @return {void}\n     */\n    onBatchDownload = (data: BoxItem[]): void => {\n        this.emit('batchDownload', data);\n    };\n\n    /**\n     * Callback for batch download cancel\n     *\n     * @return {void}\n     */\n    onBatchCancel = (): void => {\n        this.emit('batchCancel');\n    };\n\n    /**\n     * Callback for custom share\n     *\n     * @return {void}\n     */\n    onCustomShare = (data: BoxItem): void => {\n        this.emit('customShare', data);\n    };\n\n    /**\n     * Callback for moving items\n     *\n     * @return {void}\n     */\n    onMoveTo = (data: BoxItem): void => {\n        this.emit('moveTo', data);\n    };\n\n    /**\n     * Callback for copying items\n     *\n     * @return {void}\n     */\n    onCopy = (data: BoxItem): void => {\n        this.emit('copy', data);\n    };\n\n    /**\n     * Callback for setting custom thumbnail\n     *\n     * @return {void}\n     */\n    onSetThumbnail = (data: BoxItem): void => {\n        this.emit('setThumbnail', data);\n    };\n\n    /**\n     * Callback for removing custom thumbnail\n     *\n     * @return {void}\n     */\n    onRemoveThumbnail = (data: BoxItem): void => {\n        this.emit('removeThumbnail', data);\n    };\n\n    /**\n     * Helper to programatically navigate\n     *\n     * @param {string} id - string folder id\n     * @return {void}\n     */\n    navigateTo(id: string): void {\n        const component = this.getComponent();\n        if (component && typeof component.clearCache === 'function') {\n            component.fetchFolder(id);\n        }\n    }\n\n    /** @inheritdoc */\n    render() {\n        render(\n            <ContentExplorerReactComponent\n                language={this.language}\n                messages={this.messages}\n                rootFolderId={this.id}\n                token={this.token}\n                componentRef={this.setComponent}\n                onDelete={this.onDelete}\n                onDownload={this.onDownload}\n                onPreview={this.onPreview}\n                onRename={this.onRename}\n                onSelect={this.onSelect}\n                onUpload={this.onUpload}\n                onCreate={this.onCreate}\n                onNavigate={this.onNavigate}\n                onInteraction={this.onInteraction}\n                onBatchDownload={this.onBatchDownload}\n                onBatchCancel={this.onBatchCancel}\n                onCustomShare={this.onCustomShare}\n                onMoveTo={this.onMoveTo}\n                onCopy={this.onCopy}\n                onSetThumbnail={this.onSetThumbnail}\n                onRemoveThumbnail={this.onRemoveThumbnail}\n                {...this.options}\n            />,\n            this.container,\n        );\n    }\n}\n\nglobal.Box = global.Box || {};\nglobal.Box.ContentExplorer = ContentExplorer;\nexport default ContentExplorer;\n"],"file":"ContentExplorer.js"}