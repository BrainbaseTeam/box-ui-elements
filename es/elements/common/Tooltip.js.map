{"version":3,"sources":["../../../src/elements/common/Tooltip.js"],"names":["React","TooltipCore","Tooltip","children","isDisabled","text","rest"],"mappings":";;;;;;AAAA;;;;;AAMA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OASV;AAAA,MARFC,QAQE,QARFA,QAQE;AAAA,MAPFC,UAOE,QAPFA,UAOE;AAAA,MANFC,IAME,QANFA,IAME;AAAA,MALCC,IAKD;;AACF,MAAIF,UAAU,IAAI,CAACC,IAAnB,EAAyB;AACrB,WAAOF,QAAP;AACH;;AAED,SACI,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEE;AAAnB,KAA6BC,IAA7B,GACKH,QADL,CADJ;AAKH,CAnBD;;AAqBA,eAAeD,OAAf","sourcesContent":["/**\n * @flow\n * @file Wrapper to conditionally add a tooltip\n * @author Box\n */\n\nimport * as React from 'react';\nimport TooltipCore from '../../components/tooltip/Tooltip';\n\nconst Tooltip = ({\n    children,\n    isDisabled,\n    text,\n    ...rest\n}: {\n    children: React.Node,\n    isDisabled?: boolean,\n    text?: ?string | React.Node,\n}) => {\n    if (isDisabled || !text) {\n        return children;\n    }\n\n    return (\n        <TooltipCore text={text} {...rest}>\n            {children}\n        </TooltipCore>\n    );\n};\n\nexport default Tooltip;\n"],"file":"Tooltip.js"}