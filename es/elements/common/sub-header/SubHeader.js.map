{"version":3,"sources":["../../../../src/elements/common/sub-header/SubHeader.js"],"names":["React","noop","SubHeaderLeft","SubHeaderRight","VIEW_MODE_LIST","SubHeader","canCreateNewFolder","canUpload","currentCollection","gridColumnCount","gridMaxColumns","gridMinColumns","maxGridColumnCountForWidth","onGridViewSliderChange","isSmall","onCreate","onItemClick","onSortChange","onUpload","onViewModeChange","rootId","rootName","view","viewMode"],"mappings":"AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,SAASC,cAAT,QAA+B,oBAA/B;AAGA,OAAO,kBAAP;;AAuBA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,MACdC,kBADc,QACdA,kBADc;AAAA,MAEdC,SAFc,QAEdA,SAFc;AAAA,MAGdC,iBAHc,QAGdA,iBAHc;AAAA,kCAIdC,eAJc;AAAA,MAIdA,eAJc,qCAII,CAJJ;AAAA,iCAKdC,cALc;AAAA,MAKdA,cALc,oCAKG,CALH;AAAA,iCAMdC,cANc;AAAA,MAMdA,cANc,oCAMG,CANH;AAAA,mCAOdC,0BAPc;AAAA,MAOdA,0BAPc,sCAOe,CAPf;AAAA,mCAQdC,sBARc;AAAA,MAQdA,sBARc,sCAQWZ,IARX;AAAA,MASda,OATc,QASdA,OATc;AAAA,MAUdC,QAVc,QAUdA,QAVc;AAAA,MAWdC,WAXc,QAWdA,WAXc;AAAA,MAYdC,YAZc,QAYdA,YAZc;AAAA,MAadC,QAbc,QAadA,QAbc;AAAA,MAcdC,gBAdc,QAcdA,gBAdc;AAAA,MAedC,MAfc,QAedA,MAfc;AAAA,MAgBdC,QAhBc,QAgBdA,QAhBc;AAAA,MAiBdC,IAjBc,QAiBdA,IAjBc;AAAA,2BAkBdC,QAlBc;AAAA,MAkBdA,QAlBc,8BAkBHnB,cAlBG;AAAA,SAoBd;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,mBAAY;AAA3C,KACI,oBAAC,aAAD;AACI,IAAA,iBAAiB,EAAEI,iBADvB;AAEI,IAAA,OAAO,EAAEM,OAFb;AAGI,IAAA,WAAW,EAAEE,WAHjB;AAII,IAAA,MAAM,EAAEI,MAJZ;AAKI,IAAA,QAAQ,EAAEC,QALd;AAMI,IAAA,IAAI,EAAEC;AANV,IADJ,EASI,oBAAC,cAAD;AACI,IAAA,kBAAkB,EAAEhB,kBADxB;AAEI,IAAA,SAAS,EAAEC,SAFf;AAGI,IAAA,iBAAiB,EAAEC,iBAHvB;AAII,IAAA,eAAe,EAAEC,eAJrB;AAKI,IAAA,cAAc,EAAEC,cALpB;AAMI,IAAA,cAAc,EAAEC,cANpB;AAOI,IAAA,0BAA0B,EAAEC,0BAPhC;AAQI,IAAA,QAAQ,EAAEG,QARd;AASI,IAAA,sBAAsB,EAAEF,sBAT5B;AAUI,IAAA,YAAY,EAAEI,YAVlB;AAWI,IAAA,QAAQ,EAAEC,QAXd;AAYI,IAAA,gBAAgB,EAAEC,gBAZtB;AAaI,IAAA,IAAI,EAAEG,IAbV;AAcI,IAAA,QAAQ,EAAEC;AAdd,IATJ,CApBc;AAAA,CAAlB;;AAgDA,eAAelB,SAAf","sourcesContent":["/**\n * @flow\n * @file Content sub header component\n * @author Box\n */\n\nimport React from 'react';\nimport noop from 'lodash/noop';\nimport SubHeaderLeft from './SubHeaderLeft';\nimport SubHeaderRight from './SubHeaderRight';\nimport type { ViewMode } from '../flowTypes';\nimport { VIEW_MODE_LIST } from '../../../constants';\nimport type { View, Collection } from '../../../common/types/core';\n\nimport './SubHeader.scss';\n\ntype Props = {\n    canCreateNewFolder: boolean,\n    canUpload: boolean,\n    currentCollection: Collection,\n    gridColumnCount?: number,\n    gridMaxColumns?: number,\n    gridMinColumns?: number,\n    isSmall: boolean,\n    maxGridColumnCountForWidth?: number,\n    onCreate: Function,\n    onGridViewSliderChange?: (newSliderValue: number) => void,\n    onItemClick: Function,\n    onSortChange: Function,\n    onUpload: Function,\n    onViewModeChange?: (viewMode: ViewMode) => void,\n    rootId: string,\n    rootName?: string,\n    view: View,\n    viewMode?: ViewMode,\n};\n\nconst SubHeader = ({\n    canCreateNewFolder,\n    canUpload,\n    currentCollection,\n    gridColumnCount = 0,\n    gridMaxColumns = 0,\n    gridMinColumns = 0,\n    maxGridColumnCountForWidth = 0,\n    onGridViewSliderChange = noop,\n    isSmall,\n    onCreate,\n    onItemClick,\n    onSortChange,\n    onUpload,\n    onViewModeChange,\n    rootId,\n    rootName,\n    view,\n    viewMode = VIEW_MODE_LIST,\n}: Props) => (\n    <div className=\"be-sub-header\" data-testid=\"be-sub-header\">\n        <SubHeaderLeft\n            currentCollection={currentCollection}\n            isSmall={isSmall}\n            onItemClick={onItemClick}\n            rootId={rootId}\n            rootName={rootName}\n            view={view}\n        />\n        <SubHeaderRight\n            canCreateNewFolder={canCreateNewFolder}\n            canUpload={canUpload}\n            currentCollection={currentCollection}\n            gridColumnCount={gridColumnCount}\n            gridMaxColumns={gridMaxColumns}\n            gridMinColumns={gridMinColumns}\n            maxGridColumnCountForWidth={maxGridColumnCountForWidth}\n            onCreate={onCreate}\n            onGridViewSliderChange={onGridViewSliderChange}\n            onSortChange={onSortChange}\n            onUpload={onUpload}\n            onViewModeChange={onViewModeChange}\n            view={view}\n            viewMode={viewMode}\n        />\n    </div>\n);\n\nexport default SubHeader;\n"],"file":"SubHeader.js"}