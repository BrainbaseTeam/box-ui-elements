{"version":3,"sources":["../../../../src/elements/common/sub-header/ViewModeChangeButton.js"],"names":["React","injectIntl","FormattedMessage","classNames","Button","IconGridViewInverted","IconListView","messages","Tooltip","VIEW_MODE_GRID","VIEW_MODE_LIST","bdlGray50","ViewModeChangeButton","className","onViewModeChange","intl","viewMode","rest","isGridView","onClick","listView","gridView"],"mappings":";;;;;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,YAA7C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,oBAAP,MAAiC,6CAAjC;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,oBAA/C;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,OAAO,6BAAP;;AAQA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,OAA0E;AAAA,4BAAvEC,SAAuE;AAAA,MAAvEA,SAAuE,+BAA3D,EAA2D;AAAA,MAAvDC,gBAAuD,QAAvDA,gBAAuD;AAAA,MAArCC,IAAqC,QAArCA,IAAqC;AAAA,MAA/BC,QAA+B,QAA/BA,QAA+B;AAAA,MAAlBC,IAAkB;;AACnG,MAAMC,UAAU,GAAGF,QAAQ,KAAKP,cAAhC;;AAEA,MAAMU,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClBL,IAAAA,gBAAgB,CAACI,UAAU,GAAGR,cAAH,GAAoBD,cAA/B,CAAhB;AACH,GAFD;;AAIA,sBACI,oBAAC,OAAD;AACI,IAAA,IAAI,EACAS,UAAU,gBAAG,oBAAC,gBAAD,EAAsBX,QAAQ,CAACa,QAA/B,CAAH,gBAAiD,oBAAC,gBAAD,EAAsBb,QAAQ,CAACc,QAA/B;AAFnE,kBAKI,oBAAC,MAAD;AAEI,IAAA,SAAS,EAAElB,UAAU,CAAC,0BAAD,EAA6BU,SAA7B,CAFzB;AAGI,IAAA,IAAI,EAAC,QAHT;AAII,IAAA,OAAO,EAAEM;AAJb,KAKQF,IALR,GAOKC,UAAU,gBACP,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEP,SAArB;AAAgC,IAAA,KAAK,EAAE,EAAvC;AAA2C,IAAA,MAAM,EAAE;AAAnD,IADO,gBAGP,oBAAC,oBAAD;AAAsB,IAAA,KAAK,EAAEA,SAA7B;AAAwC,IAAA,KAAK,EAAE,EAA/C;AAAmD,IAAA,MAAM,EAAE;AAA3D,IAVR,CALJ,CADJ;AAqBH,CA5BD;;AA8BA,eAAeV,UAAU,CAACW,oBAAD,CAAzB","sourcesContent":["// @flow\n\nimport React from 'react';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\n\nimport Button from '../../../components/button';\nimport IconGridViewInverted from '../../../icons/general/IconGridViewInverted';\nimport IconListView from '../../../icons/general/IconListView';\nimport messages from '../messages';\nimport Tooltip from '../Tooltip';\nimport type { ViewMode } from '../flowTypes';\nimport { VIEW_MODE_GRID, VIEW_MODE_LIST } from '../../../constants';\nimport { bdlGray50 } from '../../../styles/variables';\nimport './ViewModeChangeButton.scss';\n\ntype Props = {\n    className?: string,\n    onViewModeChange: (viewMode: ViewMode) => void,\n    viewMode: ViewMode,\n} & InjectIntlProvidedProps;\n\nconst ViewModeChangeButton = ({ className = '', onViewModeChange, intl, viewMode, ...rest }: Props) => {\n    const isGridView = viewMode === VIEW_MODE_GRID;\n\n    const onClick = () => {\n        onViewModeChange(isGridView ? VIEW_MODE_LIST : VIEW_MODE_GRID);\n    };\n\n    return (\n        <Tooltip\n            text={\n                isGridView ? <FormattedMessage {...messages.listView} /> : <FormattedMessage {...messages.gridView} />\n            }\n        >\n            <Button\n                data-testid=\"view-mode-change-button\"\n                className={classNames('bdl-ViewModeChangeButton', className)}\n                type=\"button\"\n                onClick={onClick}\n                {...rest}\n            >\n                {isGridView ? (\n                    <IconListView color={bdlGray50} width={17} height={17} />\n                ) : (\n                    <IconGridViewInverted color={bdlGray50} width={17} height={17} />\n                )}\n            </Button>\n        </Tooltip>\n    );\n};\n\nexport default injectIntl(ViewModeChangeButton);\n"],"file":"ViewModeChangeButton.js"}