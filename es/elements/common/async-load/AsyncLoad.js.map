{"version":3,"sources":["../../../../src/elements/common/async-load/AsyncLoad.js"],"names":["React","AsyncError","retryNumOfTimes","DEFAULT_NUM_TIMES","DEFAULT_INITIAL_DELAY","DEFAULT_BACKOFF_FACTOR","AsyncLoad","errorComponent","fallback","loader","lazyRetry","successCallback","errorCallback","then","catch","LazyComponent","lazy","forwardRef","props","ref"],"mappings":";;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AAQA,IAAMC,iBAAiB,GAAG,CAA1B;AACA,IAAMC,qBAAqB,GAAG,GAA9B;AACA,IAAMC,sBAAsB,GAAG,CAA/B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAsD;AAAA,iFAAP,EAAO;AAAA,MAAnDC,cAAmD,QAAnDA,cAAmD;AAAA,MAAnCC,QAAmC,QAAnCA,QAAmC;AAAA,MAAzBC,MAAyB,QAAzBA,MAAyB;;AACpE,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,WACdR,eAAe,CACX,UAACS,eAAD,EAAkBC,aAAlB;AAAA,aACIH,MAAM,GACDI,IADL,CACUF,eADV,EAEKG,KAFL,CAEWF,aAFX,CADJ;AAAA,KADW,EAKXT,iBALW,EAMXC,qBANW,EAOXC,sBAPW,CADD;AAAA,GAAlB;;AAUA,MAAMU,aAAa,GAAGf,KAAK,CAACgB,IAAN,CAAW;AAAA,WAAMP,MAAM,GAAGK,KAAT,CAAeJ,SAAf,CAAN;AAAA,GAAX,CAAtB;AAEA,SAAOV,KAAK,CAACiB,UAAN,CAAyC,UAACC,KAAD,EAAgBC,GAAhB;AAAA,WAC5C,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEZ;AAAvB,OACI,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,QAAQ,EAAEC,QAAQ,IAAI;AAAtC,OACI,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAEW;AAApB,OAA6BD,KAA7B,EADJ,CADJ,CAD4C;AAAA,GAAzC,CAAP;AAOH,CApBD;;AAsBA,eAAeZ,SAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport AsyncError from './AsyncError';\nimport { retryNumOfTimes } from '../../../utils/function';\n\ntype Props = {\n    errorComponent?: React.ComponentType<any>,\n    fallback?: React.Element<any>,\n    loader: () => Promise<any>,\n};\n\nconst DEFAULT_NUM_TIMES = 3;\nconst DEFAULT_INITIAL_DELAY = 500;\nconst DEFAULT_BACKOFF_FACTOR = 2;\n\nconst AsyncLoad = ({ errorComponent, fallback, loader }: Props = {}) => {\n    const lazyRetry = () =>\n        retryNumOfTimes(\n            (successCallback, errorCallback) =>\n                loader()\n                    .then(successCallback)\n                    .catch(errorCallback),\n            DEFAULT_NUM_TIMES,\n            DEFAULT_INITIAL_DELAY,\n            DEFAULT_BACKOFF_FACTOR,\n        );\n    const LazyComponent = React.lazy(() => loader().catch(lazyRetry));\n\n    return React.forwardRef<Object, React.Ref<any>>((props: Object, ref: React.Ref<any>) => (\n        <AsyncError component={errorComponent}>\n            <React.Suspense fallback={fallback || null}>\n                <LazyComponent ref={ref} {...props} />\n            </React.Suspense>\n        </AsyncError>\n    ));\n};\n\nexport default AsyncLoad;\n"],"file":"AsyncLoad.js"}