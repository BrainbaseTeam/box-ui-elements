{"version":3,"sources":["../../../../src/elements/common/empty-state/EmptyState.js"],"names":["React","FormattedMessage","ErrorEmptyState","FolderEmptyState","SelectedItemsEmptyState","SearchEmptyState","messages","VIEW_ERROR","VIEW_FOLDER","VIEW_METADATA","VIEW_SEARCH","VIEW_SELECTED","EmptyState","view","isLoading","type","message","loadingState"],"mappings":"AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,gBAAP,MAA6B,wCAA7B;AACA,OAAOC,uBAAP,MAAoC,+CAApC;AACA,OAAOC,gBAAP,MAA6B,wCAA7B;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,aAAlC,EAAiDC,WAAjD,EAA8DC,aAA9D,QAAmF,oBAAnF;AAGA,OAAO,mBAAP;;AAOA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAgC;AAAA,MAA7BC,IAA6B,QAA7BA,IAA6B;AAAA,MAAvBC,SAAuB,QAAvBA,SAAuB;AAC/C,MAAIC,IAAJ;AACA,MAAMC,OAAO,GACTF,SAAS,KAAKD,IAAI,KAAKL,WAAT,IAAwBK,IAAI,KAAKJ,aAAtC,CAAT,GACI,oBAAC,gBAAD,EAAsBH,QAAQ,CAACW,YAA/B,CADJ,GAGI,oBAAC,gBAAD,EAAsBX,QAAQ,WAAIO,IAAJ,WAA9B,CAJR;;AAOA,UAAQA,IAAR;AACI,SAAKN,UAAL;AACIQ,MAAAA,IAAI,GAAG,oBAAC,eAAD,OAAP;AACA;;AACJ,SAAKJ,aAAL;AACII,MAAAA,IAAI,GAAG,oBAAC,uBAAD,OAAP;AACA;;AACJ,SAAKL,WAAL;AACIK,MAAAA,IAAI,GAAG,oBAAC,gBAAD,OAAP;AACA;;AACJ;AACIA,MAAAA,IAAI,GAAG,oBAAC,gBAAD,OAAP;AACA;AAZR;;AAeA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACKA,IADL,EAEI,iCAAMC,OAAN,CAFJ,CADJ;AAMH,CA9BD;;AAgCA,eAAeJ,UAAf","sourcesContent":["/**\n * @flow\n * @file Empty state component\n * @author Box\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ErrorEmptyState from '../../../icons/states/ErrorEmptyState';\nimport FolderEmptyState from '../../../icons/states/FolderEmptyState';\nimport SelectedItemsEmptyState from '../../../icons/states/SelectedItemsEmptyState';\nimport SearchEmptyState from '../../../icons/states/SearchEmptyState';\nimport messages from '../messages';\nimport { VIEW_ERROR, VIEW_FOLDER, VIEW_METADATA, VIEW_SEARCH, VIEW_SELECTED } from '../../../constants';\nimport type { View } from '../../../common/types/core';\n\nimport './EmptyState.scss';\n\ntype Props = {\n    isLoading: boolean,\n    view: View,\n};\n\nconst EmptyState = ({ view, isLoading }: Props) => {\n    let type;\n    const message =\n        isLoading && (view === VIEW_FOLDER || view === VIEW_METADATA) ? (\n            <FormattedMessage {...messages.loadingState} />\n        ) : (\n            <FormattedMessage {...messages[`${view}State`]} />\n        );\n\n    switch (view) {\n        case VIEW_ERROR:\n            type = <ErrorEmptyState />;\n            break;\n        case VIEW_SELECTED:\n            type = <SelectedItemsEmptyState />;\n            break;\n        case VIEW_SEARCH:\n            type = <SearchEmptyState />;\n            break;\n        default:\n            type = <FolderEmptyState />;\n            break;\n    }\n\n    return (\n        <div className=\"be-empty\">\n            {type}\n            <div>{message}</div>\n        </div>\n    );\n};\n\nexport default EmptyState;\n"],"file":"EmptyState.js"}