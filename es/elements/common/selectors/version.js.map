{"version":3,"sources":["../../../../src/elements/common/selectors/version.js"],"names":["PLACEHOLDER_USER","VERSION_DELETE_ACTION","VERSION_PROMOTE_ACTION","VERSION_RESTORE_ACTION","VERSION_UPLOAD_ACTION","getVersionAction","restored_at","trashed_at","version_promoted","action","getVersionUser","modified_by","restored_by","trashed_by","uploader_display_name","name","id","rest","isAnonymous"],"mappings":";;;;;;;;;;AACA,SACIA,gBADJ,EAEIC,qBAFJ,EAGIC,sBAHJ,EAIIC,sBAJJ,EAKIC,qBALJ,QAMO,oBANP;;AAeA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAA0F;AAAA,MAAvFC,WAAuF,QAAvFA,WAAuF;AAAA,MAA1EC,UAA0E,QAA1EA,UAA0E;AAAA,MAA9DC,gBAA8D,QAA9DA,gBAA8D;AAC/G,MAAIC,MAAM,GAAGL,qBAAb;;AAEA,MAAIG,UAAJ,EAAgB;AACZE,IAAAA,MAAM,GAAGR,qBAAT;AACH;;AAED,MAAIK,WAAJ,EAAiB;AACbG,IAAAA,MAAM,GAAGN,sBAAT;AACH;;AAED,MAAIK,gBAAJ,EAAsB;AAClBC,IAAAA,MAAM,GAAGP,sBAAT;AACH;;AAED,SAAOO,MAAP;AACH,CAhBD;;AAkBA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,QAKa;AAAA,MAJhCC,WAIgC,SAJhCA,WAIgC;AAAA,MAHhCC,WAGgC,SAHhCA,WAGgC;AAAA,MAFhCC,UAEgC,SAFhCA,UAEgC;AAAA,MADhCC,qBACgC,SADhCA,qBACgC;;AAAA,cACFF,WAAW,IAAIC,UAAf,IAA6BF,WAA7B,IAA4CX,gBAD1C;AAAA,MACxBe,IADwB,SACxBA,IADwB;AAAA,MAClBC,EADkB,SAClBA,EADkB;AAAA,MACXC,IADW;;AAEhC,MAAMC,WAAW,GAAGF,EAAE,KAAKhB,gBAAgB,CAACgB,EAA5C;AACA,2BAAYC,IAAZ;AAAkBD,IAAAA,EAAE,EAAFA,EAAlB;AAAsBD,IAAAA,IAAI,EAAEG,WAAW,IAAIJ,qBAAf,GAAuCA,qBAAvC,GAA+DC;AAA3F;AACH,CATD;;AAWA,eAAe;AACXV,EAAAA,gBAAgB,EAAhBA,gBADW;AAEXK,EAAAA,cAAc,EAAdA;AAFW,CAAf","sourcesContent":["// @flow\nimport {\n    PLACEHOLDER_USER,\n    VERSION_DELETE_ACTION,\n    VERSION_PROMOTE_ACTION,\n    VERSION_RESTORE_ACTION,\n    VERSION_UPLOAD_ACTION,\n} from '../../../constants';\nimport type { BoxItemVersion, User } from '../../../common/types/core';\n\ntype VersionAction =\n    | typeof VERSION_DELETE_ACTION\n    | typeof VERSION_PROMOTE_ACTION\n    | typeof VERSION_RESTORE_ACTION\n    | typeof VERSION_UPLOAD_ACTION;\n\nconst getVersionAction = ({ restored_at, trashed_at, version_promoted }: $Shape<BoxItemVersion>): VersionAction => {\n    let action = VERSION_UPLOAD_ACTION;\n\n    if (trashed_at) {\n        action = VERSION_DELETE_ACTION;\n    }\n\n    if (restored_at) {\n        action = VERSION_RESTORE_ACTION;\n    }\n\n    if (version_promoted) {\n        action = VERSION_PROMOTE_ACTION;\n    }\n\n    return action;\n};\n\nconst getVersionUser = ({\n    modified_by,\n    restored_by,\n    trashed_by,\n    uploader_display_name,\n}: $Shape<BoxItemVersion>): User => {\n    const { name, id, ...rest } = restored_by || trashed_by || modified_by || PLACEHOLDER_USER;\n    const isAnonymous = id === PLACEHOLDER_USER.id;\n    return { ...rest, id, name: isAnonymous && uploader_display_name ? uploader_display_name : name };\n};\n\nexport default {\n    getVersionAction,\n    getVersionUser,\n};\n"],"file":"version.js"}