{"version":3,"sources":["../../../../src/elements/common/date/DateField.js"],"names":["React","injectIntl","FormattedMessage","isToday","isYesterday","messages","DEFAULT_DATE_FORMAT","weekday","month","year","day","DateField","date","dateFormat","omitCommas","intl","relative","capitalize","d","Date","isTodaysDate","isYesterdaysDate","Message","today","yesterday","formattedDate","formatDate","replace"],"mappings":"AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,YAA7C;AAEA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,yBAArC;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAO,kBAAP;AAUA,IAAMC,mBAAmB,GAAG;AACxBC,EAAAA,OAAO,EAAE,OADe;AAExBC,EAAAA,KAAK,EAAE,OAFiB;AAGxBC,EAAAA,IAAI,EAAE,SAHkB;AAIxBC,EAAAA,GAAG,EAAE;AAJmB,CAA5B;;AAOA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAOL;AAAA,MANTC,IAMS,QANTA,IAMS;AAAA,6BALTC,UAKS;AAAA,MALTA,UAKS,gCALIP,mBAKJ;AAAA,6BAJTQ,UAIS;AAAA,MAJTA,UAIS,gCAJI,KAIJ;AAAA,MAHTC,IAGS,QAHTA,IAGS;AAAA,2BAFTC,QAES;AAAA,MAFTA,QAES,8BAFE,IAEF;AAAA,6BADTC,UACS;AAAA,MADTA,UACS,gCADI,KACJ;AACT,MAAMC,CAAC,GAAG,IAAIC,IAAJ,CAASP,IAAT,CAAV;AACA,MAAMQ,YAAY,GAAGjB,OAAO,CAACe,CAAD,CAA5B;AACA,MAAMG,gBAAgB,GAAGjB,WAAW,CAACc,CAAD,CAApC;;AAEA,MAAIF,QAAQ,KAAKI,YAAY,IAAIC,gBAArB,CAAZ,EAAoD;AAChD,QAAIC,OAAO,GAAG,oBAAC,gBAAD,EAAsBjB,QAAQ,CAACkB,KAA/B,CAAd;;AACA,QAAIF,gBAAJ,EAAsB;AAClBC,MAAAA,OAAO,GAAG,oBAAC,gBAAD,EAAsBjB,QAAQ,CAACmB,SAA/B,CAAV;AACH;;AAED,QAAIP,UAAJ,EAAgB;AACZ,aAAO;AAAM,QAAA,SAAS,EAAC;AAAhB,SAAsCK,OAAtC,CAAP;AACH;;AAED,WAAOA,OAAP;AACH;;AAED,MAAIG,aAAa,GAAGV,IAAI,CAACW,UAAL,CAAgBR,CAAhB,EAAmBL,UAAnB,CAApB;AACAY,EAAAA,aAAa,GAAGX,UAAU,GAAGW,aAAa,CAACE,OAAd,CAAsB,IAAtB,EAA4B,EAA5B,CAAH,GAAqCF,aAA/D;AACA,SAAOA,aAAP;AACH,CA5BD;;AA8BA,eAAexB,UAAU,CAACU,SAAD,CAAzB","sourcesContent":["/**\n * @flow\n * @file Function to render the date table cell\n * @author Box\n */\n\nimport React from 'react';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport type { InjectIntlProvidedProps } from 'react-intl';\nimport { isToday, isYesterday } from '../../../utils/datetime';\nimport messages from '../messages';\nimport './DateField.scss';\n\ntype Props = {\n    capitalize?: boolean,\n    date: string,\n    dateFormat?: Object,\n    omitCommas?: boolean,\n    relative?: boolean,\n} & InjectIntlProvidedProps;\n\nconst DEFAULT_DATE_FORMAT = {\n    weekday: 'short',\n    month: 'short',\n    year: 'numeric',\n    day: 'numeric',\n};\n\nconst DateField = ({\n    date,\n    dateFormat = DEFAULT_DATE_FORMAT,\n    omitCommas = false,\n    intl,\n    relative = true,\n    capitalize = false,\n}: Props) => {\n    const d = new Date(date);\n    const isTodaysDate = isToday(d);\n    const isYesterdaysDate = isYesterday(d);\n\n    if (relative && (isTodaysDate || isYesterdaysDate)) {\n        let Message = <FormattedMessage {...messages.today} />;\n        if (isYesterdaysDate) {\n            Message = <FormattedMessage {...messages.yesterday} />;\n        }\n\n        if (capitalize) {\n            return <span className=\"be-date-capitalize\">{Message}</span>;\n        }\n\n        return Message;\n    }\n\n    let formattedDate = intl.formatDate(d, dateFormat);\n    formattedDate = omitCommas ? formattedDate.replace(/,/g, '') : formattedDate;\n    return formattedDate;\n};\n\nexport default injectIntl(DateField);\n"],"file":"DateField.js"}