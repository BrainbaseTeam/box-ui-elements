{"version":3,"sources":["../../../../src/elements/common/item/iconCellRenderer.js"],"names":["React","FileIcon","FolderIcon","BookmarkIcon","TYPE_FOLDER","TYPE_FILE","TYPE_WEBLINK","getIcon","dimension","rowData","type","extension","has_collaborations","is_externally_owned","thumbnail_url","metadata","enterprise_261189234","customThumbnail","url","Error"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,mCAArB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,YAAjC,QAAqD,oBAArD;AAEA,OAAO,iBAAP;AAEA,OAAO,SAASC,OAAT,CAAiBC,SAAjB,EAAoCC,OAApC,EAAsD;AAAA;;AAAA,MACjDC,IADiD,GACqBD,OADrB,CACjDC,IADiD;AAAA,MAC3CC,SAD2C,GACqBF,OADrB,CAC3CE,SAD2C;AAAA,MAChCC,kBADgC,GACqBH,OADrB,CAChCG,kBADgC;AAAA,MACZC,mBADY,GACqBJ,OADrB,CACZI,mBADY;AAEzD,MAAMC,aAAa,GAAGL,OAAH,aAAGA,OAAH,4CAAGA,OAAO,CAAEM,QAAZ,+EAAG,kBAAmBC,oBAAtB,oFAAG,sBAAyCC,eAA5C,2DAAG,uBAA0DC,GAAhF;;AAEA,UAAQR,IAAR;AACI,SAAKN,WAAL;AACI,0BAAO,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAEI,SAAvB;AAAkC,QAAA,QAAQ,EAAEI,kBAA5C;AAAgE,QAAA,UAAU,EAAEC,mBAA5E;AAAiG,QAAA,YAAY,EAAEC;AAA/G,QAAP;;AACJ,SAAKT,SAAL;AACI,0BAAO,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAEG,SAArB;AAAgC,QAAA,SAAS,EAAEG;AAA3C,QAAP;;AACJ,SAAKL,YAAL;AACI,0BAAO,oBAAC,YAAD;AAAc,QAAA,MAAM,EAAEE,SAAtB;AAAiC,QAAA,KAAK,EAAEA;AAAxC,QAAP;;AACJ;AACI,YAAM,IAAIW,KAAJ,CAAU,wBAAV,CAAN;AARR;AAUH;AAED,gBAAe;AAAA,MAACX,SAAD,uEAAqB,EAArB;AAAA,SAAsC;AAAA,QAAGC,OAAH,QAAGA,OAAH;AAAA,wBACjD;AAAK,MAAA,SAAS,EAAC;AAAf,OAA+BF,OAAO,CAACC,SAAD,EAAYC,OAAZ,CAAtC,CADiD;AAAA,GAAtC;AAAA,CAAf","sourcesContent":["/**\n * @flow\n * @file Function to render the icon table cell\n * @author Box\n */\n\nimport React from 'react';\nimport FileIcon from '../../../icons/file-icon/FileIcon';\nimport FolderIcon from '../../../icons/folder-icon/FolderIcon';\nimport BookmarkIcon from '../../../icons/bookmark-icon/BookmarkIcon';\nimport { TYPE_FOLDER, TYPE_FILE, TYPE_WEBLINK } from '../../../constants';\n\nimport './IconCell.scss';\n\nexport function getIcon(dimension: number, rowData: BoxItem) {\n    const { type, extension, has_collaborations, is_externally_owned }: BoxItem = rowData;\n    const thumbnail_url = rowData?.metadata?.enterprise_261189234?.customThumbnail?.url;\n\n    switch (type) {\n        case TYPE_FOLDER:\n            return <FolderIcon dimension={dimension} isCollab={has_collaborations} isExternal={is_externally_owned} thumbnailUrl={thumbnail_url} />;\n        case TYPE_FILE:\n            return <FileIcon dimension={dimension} extension={extension} />;\n        case TYPE_WEBLINK:\n            return <BookmarkIcon height={dimension} width={dimension} />;\n        default:\n            throw new Error('Unsupported item type!');\n    }\n}\n\nexport default (dimension: number = 32): Function => ({ rowData }: { rowData: BoxItem }) => (\n    <div className=\"be-item-icon\">{getIcon(dimension, rowData)}</div>\n);\n"],"file":"iconCellRenderer.js"}