{"version":3,"sources":["../../../src/elements/common/KeyBinder.js"],"names":["React","PureComponent","noop","isInputElement","KeyBinder","props","state","prevId","prevScrollToColumn","prevScrollToRow","id","scrollToColumnProp","scrollToColumn","scrollToRowProp","scrollToRow","focusOnRender","newState","Object","keys","length","event","target","columnCount","rowCount","onSelect","onRename","onDownload","onShare","onDelete","onOpen","items","scrollToColumnPrevious","scrollToRowPrevious","currentItem","ctrlMeta","metaKey","ctrlKey","key","Math","min","stopPropagation","max","preventDefault","updateScrollState","columnStartIndex","columnStopIndex","rowStartIndex","rowStopIndex","onScrollToChange","setState","className","children","onKeyDown","onSectionRendered"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAMA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,cAAT,QAA+B,iBAA/B;;IA8BMC,S;;;;;;;;AAwBF;;;;;;6CAMgCC,K,EAAcC,K,EAAc;AAAA,UAChDC,MADgD,GACOD,KADP,CAChDC,MADgD;AAAA,UACxCC,kBADwC,GACOF,KADP,CACxCE,kBADwC;AAAA,UACpBC,eADoB,GACOH,KADP,CACpBG,eADoB;AAAA,UAEhDC,EAFgD,GAEgCL,KAFhC,CAEhDK,EAFgD;AAAA,UAE5BC,kBAF4B,GAEgCN,KAFhC,CAE5CO,cAF4C;AAAA,UAEKC,eAFL,GAEgCR,KAFhC,CAERS,WAFQ;;AAIxD,UAAIJ,EAAE,KAAKH,MAAX,EAAmB;AACf,eAAO;AACHQ,UAAAA,aAAa,EAAE,KADZ;AAEHR,UAAAA,MAAM,EAAEG,EAFL;AAGHF,UAAAA,kBAAkB,EAAE,CAHjB;AAIHC,UAAAA,eAAe,EAAE,CAJd;AAKHG,UAAAA,cAAc,EAAE,CALb;AAMHE,UAAAA,WAAW,EAAE;AANV,SAAP;AAQH;;AAED,UAAME,QAAQ,GAAG,EAAjB;;AAEA,UAAIR,kBAAkB,KAAKG,kBAAvB,IAA6CF,eAAe,KAAKI,eAArE,EAAsF;AAClFG,QAAAA,QAAQ,CAACR,kBAAT,GAA8BG,kBAA9B;AACAK,QAAAA,QAAQ,CAACP,eAAT,GAA2BI,eAA3B;AACAG,QAAAA,QAAQ,CAACJ,cAAT,GAA0BD,kBAA1B;AACAK,QAAAA,QAAQ,CAACF,WAAT,GAAuBD,eAAvB;AACH,OALD,MAKO,IAAIA,eAAe,KAAKJ,eAAxB,EAAyC;AAC5CO,QAAAA,QAAQ,CAACP,eAAT,GAA2BI,eAA3B;AACAG,QAAAA,QAAQ,CAACF,WAAT,GAAuBD,eAAvB;AACH,OAHM,MAGA,IAAIF,kBAAkB,KAAKH,kBAA3B,EAA+C;AAClDQ,QAAAA,QAAQ,CAACR,kBAAT,GAA8BG,kBAA9B;AACAK,QAAAA,QAAQ,CAACJ,cAAT,GAA0BD,kBAA1B;AACH;;AAED,aAAOM,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsBG,MAAtB,GAA+BH,QAA/B,GAA0C,IAAjD;AACH;AAED;;;;;;;;;AAMA,qBAAYX,KAAZ,EAA0B;AAAA;;AAAA;;AACtB,mFAAMA,KAAN;;AADsB,gEA0Bd,UAACe,KAAD,EAAgD;AACxD,UAAIjB,cAAc,CAACiB,KAAK,CAACC,MAAP,CAAlB,EAAkC;AAC9B;AACH;;AAHuD,wBAe7C,MAAKhB,KAfwC;AAAA,UAMpDiB,WANoD,eAMpDA,WANoD;AAAA,UAOpDC,QAPoD,eAOpDA,QAPoD;AAAA,UAQpDC,QARoD,eAQpDA,QARoD;AAAA,UASpDC,QAToD,eASpDA,QAToD;AAAA,UAUpDC,UAVoD,eAUpDA,UAVoD;AAAA,UAWpDC,OAXoD,eAWpDA,OAXoD;AAAA,UAYpDC,QAZoD,eAYpDA,QAZoD;AAAA,UAapDC,MAboD,eAapDA,MAboD;AAAA,UAcpDC,KAdoD,eAcpDA,KAdoD;AAAA,wBAgBoC,MAAKxB,KAhBzC;AAAA,UAgBhCyB,sBAhBgC,eAgBhDnB,cAhBgD;AAAA,UAgBKoB,mBAhBL,eAgBRlB,WAhBQ;AAAA,yBAiBX,MAAKR,KAjBM;AAAA,UAiBlDM,cAjBkD,gBAiBlDA,cAjBkD;AAAA,UAiBlCE,WAjBkC,gBAiBlCA,WAjBkC;AAkBxD,UAAMmB,WAAoB,GAAGH,KAAK,CAAChB,WAAD,CAAlC;AACA,UAAMoB,QAAiB,GAAGd,KAAK,CAACe,OAAN,IAAiBf,KAAK,CAACgB,OAAjD,CAnBwD,CAqBxD;AACA;;AACA,cAAQhB,KAAK,CAACiB,GAAd;AACI,aAAK,WAAL;AACIvB,UAAAA,WAAW,GAAGoB,QAAQ,GAAGX,QAAQ,GAAG,CAAd,GAAkBe,IAAI,CAACC,GAAL,CAASzB,WAAW,GAAG,CAAvB,EAA0BS,QAAQ,GAAG,CAArC,CAAxC;AACAH,UAAAA,KAAK,CAACoB,eAAN,GAFJ,CAE6B;;AACzB;;AACJ,aAAK,WAAL;AACI5B,UAAAA,cAAc,GAAGsB,QAAQ,GAAG,CAAH,GAAOI,IAAI,CAACG,GAAL,CAAS7B,cAAc,GAAG,CAA1B,EAA6B,CAA7B,CAAhC;AACA;;AACJ,aAAK,YAAL;AACIA,UAAAA,cAAc,GAAGsB,QAAQ,GAAGZ,WAAW,GAAG,CAAjB,GAAqBgB,IAAI,CAACC,GAAL,CAAS3B,cAAc,GAAG,CAA1B,EAA6BU,WAAW,GAAG,CAA3C,CAA9C;AACA;;AACJ,aAAK,SAAL;AACIR,UAAAA,WAAW,GAAGoB,QAAQ,GAAG,CAAH,GAAOI,IAAI,CAACG,GAAL,CAAS3B,WAAW,GAAG,CAAvB,EAA0B,CAA1B,CAA7B;AACA;;AACJ,aAAK,OAAL;AACIe,UAAAA,MAAM,CAACI,WAAD,CAAN;AACAb,UAAAA,KAAK,CAACsB,cAAN;AACA;;AACJ,aAAK,QAAL;AACId,UAAAA,QAAQ,CAACK,WAAD,CAAR;AACAb,UAAAA,KAAK,CAACsB,cAAN;AACA;;AACJ,aAAK,GAAL;AACIlB,UAAAA,QAAQ,CAACS,WAAD,CAAR;AACAb,UAAAA,KAAK,CAACsB,cAAN;AACA;;AACJ,aAAK,GAAL;AACIhB,UAAAA,UAAU,CAACO,WAAD,CAAV;AACAb,UAAAA,KAAK,CAACsB,cAAN;AACA;;AACJ,aAAK,GAAL;AACIf,UAAAA,OAAO,CAACM,WAAD,CAAP;AACAb,UAAAA,KAAK,CAACsB,cAAN;AACA;;AACJ,aAAK,GAAL;AACIjB,UAAAA,QAAQ,CAACQ,WAAD,CAAR;AACAb,UAAAA,KAAK,CAACsB,cAAN;AACA;;AACJ;AACI;AAvCR;;AA0CA,UAAI9B,cAAc,KAAKmB,sBAAnB,IAA6CjB,WAAW,KAAKkB,mBAAjE,EAAsF;AAClFZ,QAAAA,KAAK,CAACsB,cAAN;;AACA,cAAKC,iBAAL,CAAuB;AAAE/B,UAAAA,cAAc,EAAdA,cAAF;AAAkBE,UAAAA,WAAW,EAAXA;AAAlB,SAAvB;AACH;AACJ,KA/FyB;;AAAA,wEAwGN,gBAUR;AAAA,UATR8B,gBASQ,QATRA,gBASQ;AAAA,UARRC,eAQQ,QARRA,eAQQ;AAAA,UAPRC,aAOQ,QAPRA,aAOQ;AAAA,UANRC,YAMQ,QANRA,YAMQ;AACR,YAAKH,gBAAL,GAAwBA,gBAAxB;AACA,YAAKC,eAAL,GAAuBA,eAAvB;AACA,YAAKC,aAAL,GAAqBA,aAArB;AACA,YAAKC,YAAL,GAAoBA,YAApB;AACH,KAvHyB;;AAAA,QAGdrC,EAHc,GAG6BL,KAH7B,CAGdK,EAHc;AAAA,QAGVI,YAHU,GAG6BT,KAH7B,CAGVS,WAHU;AAAA,QAGGF,eAHH,GAG6BP,KAH7B,CAGGO,cAHH;AAItB,UAAKN,KAAL,GAAa;AACTS,MAAAA,aAAa,EAAE,KADN;AAETR,MAAAA,MAAM,EAAEG,EAFC;AAGTF,MAAAA,kBAAkB,EAAEI,eAHX;AAITH,MAAAA,eAAe,EAAEK,YAJR;AAKTF,MAAAA,cAAc,EAAdA,eALS;AAMTE,MAAAA,WAAW,EAAXA;AANS,KAAb;AASA,UAAK8B,gBAAL,GAAwB,CAAxB;AACA,UAAKC,eAAL,GAAuB,CAAvB;AACA,UAAKC,aAAL,GAAqB,CAArB;AACA,UAAKC,YAAL,GAAoB,CAApB;AAhBsB;AAiBzB;AAED;;;;;;;;;;;;AAsGA;;;;;;;6CAO0G;AAAA,UAAtFnC,cAAsF,SAAtFA,cAAsF;AAAA,UAAtEE,WAAsE,SAAtEA,WAAsE;AAAA,UAC9FkC,gBAD8F,GACzE,KAAK3C,KADoE,CAC9F2C,gBAD8F;AAEtGA,MAAAA,gBAAgB,CAAC;AAAEpC,QAAAA,cAAc,EAAdA,cAAF;AAAkBE,QAAAA,WAAW,EAAXA;AAAlB,OAAD,CAAhB;AACA,WAAKmC,QAAL,CAAc;AAAErC,QAAAA,cAAc,EAAdA,cAAF;AAAkBE,QAAAA,WAAW,EAAXA,WAAlB;AAA+BC,QAAAA,aAAa,EAAE;AAA9C,OAAd;AACH;AAED;;;;;;;;;;6BAOS;AAAA,yBAC2B,KAAKV,KADhC;AAAA,UACG6C,SADH,gBACGA,SADH;AAAA,UACcC,QADd,gBACcA,QADd;AAAA,yBAEyD,KAAK7C,KAF9D;AAAA,UAEGM,cAFH,gBAEGA,cAFH;AAAA,UAEmBE,WAFnB,gBAEmBA,WAFnB;AAAA,UAEgCC,aAFhC,gBAEgCA,aAFhC;AAIL;;AACA,aACI;AAAK,QAAA,SAAS,EAAEmC,SAAhB;AAA2B,QAAA,SAAS,EAAE,KAAKE;AAA3C,SACKD,QAAQ,CAAC;AACNE,QAAAA,iBAAiB,EAAE,KAAKA,iBADlB;AAENzC,QAAAA,cAAc,EAAdA,cAFM;AAGNE,QAAAA,WAAW,EAAXA,WAHM;AAINC,QAAAA,aAAa,EAAbA;AAJM,OAAD,CADb,CADJ;AAUA;AACH;;;;EAlOmBd,a;;gBAAlBG,S,kBAaoB;AAClBQ,EAAAA,cAAc,EAAE,CADE;AAElBE,EAAAA,WAAW,EAAE,CAFK;AAGlBW,EAAAA,QAAQ,EAAEvB,IAHQ;AAIlByB,EAAAA,OAAO,EAAEzB,IAJS;AAKlBwB,EAAAA,UAAU,EAAExB,IALM;AAMlB2B,EAAAA,MAAM,EAAE3B,IANU;AAOlBsB,EAAAA,QAAQ,EAAEtB,IAPQ;AAQlB0B,EAAAA,QAAQ,EAAE1B;AARQ,C;;AAwN1B,eAAeE,SAAf","sourcesContent":["/**\n * @flow\n * @file Item List Key bindings\n * @author Box\n */\n\nimport React, { PureComponent } from 'react';\nimport noop from 'lodash/noop';\nimport { isInputElement } from '../../utils/dom';\nimport type { BoxItem } from '../../common/types/core';\n\ntype Props = {\n    children: Function,\n    className: string,\n    columnCount: number,\n    id: string | void,\n    items: BoxItem[],\n    onDelete: Function,\n    onDownload: Function,\n    onOpen: Function,\n    onRename: Function,\n    onScrollToChange: Function,\n    onSelect: Function,\n    onShare: Function,\n    rowCount: number,\n    scrollToColumn: number,\n    scrollToRow: number,\n};\n\ntype State = {\n    focusOnRender: boolean,\n    prevId: string | void,\n    prevScrollToColumn: number,\n    prevScrollToRow: number,\n    scrollToColumn: number,\n    scrollToRow: number,\n};\n\nclass KeyBinder extends PureComponent<Props, State> {\n    state: State;\n\n    props: Props;\n\n    columnStartIndex: number;\n\n    columnStopIndex: number;\n\n    rowStartIndex: number;\n\n    rowStopIndex: number;\n\n    static defaultProps = {\n        scrollToColumn: 0,\n        scrollToRow: 0,\n        onRename: noop,\n        onShare: noop,\n        onDownload: noop,\n        onOpen: noop,\n        onSelect: noop,\n        onDelete: noop,\n    };\n\n    /**\n     * Resets scroll position if props change\n     * @private\n     * @inheritdoc\n     * @return {State|null}\n     */\n    static getDerivedStateFromProps(props: Props, state: State) {\n        const { prevId, prevScrollToColumn, prevScrollToRow }: State = state;\n        const { id, scrollToColumn: scrollToColumnProp, scrollToRow: scrollToRowProp }: Props = props;\n\n        if (id !== prevId) {\n            return {\n                focusOnRender: false,\n                prevId: id,\n                prevScrollToColumn: 0,\n                prevScrollToRow: 0,\n                scrollToColumn: 0,\n                scrollToRow: 0,\n            };\n        }\n\n        const newState = {};\n\n        if (prevScrollToColumn !== scrollToColumnProp && prevScrollToRow !== scrollToRowProp) {\n            newState.prevScrollToColumn = scrollToColumnProp;\n            newState.prevScrollToRow = scrollToRowProp;\n            newState.scrollToColumn = scrollToColumnProp;\n            newState.scrollToRow = scrollToRowProp;\n        } else if (scrollToRowProp !== prevScrollToRow) {\n            newState.prevScrollToRow = scrollToRowProp;\n            newState.scrollToRow = scrollToRowProp;\n        } else if (scrollToColumnProp !== prevScrollToColumn) {\n            newState.prevScrollToColumn = scrollToColumnProp;\n            newState.scrollToColumn = scrollToColumnProp;\n        }\n\n        return Object.keys(newState).length ? newState : null;\n    }\n\n    /**\n     * [constructor]\n     *\n     * @private\n     * @return {KeyBinder}\n     */\n    constructor(props: Props) {\n        super(props);\n\n        const { id, scrollToRow, scrollToColumn }: Props = props;\n        this.state = {\n            focusOnRender: false,\n            prevId: id,\n            prevScrollToColumn: scrollToColumn,\n            prevScrollToRow: scrollToRow,\n            scrollToColumn,\n            scrollToRow,\n        };\n\n        this.columnStartIndex = 0;\n        this.columnStopIndex = 0;\n        this.rowStartIndex = 0;\n        this.rowStopIndex = 0;\n    }\n\n    /**\n     * Keyboard events\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n    onKeyDown = (event: SyntheticKeyboardEvent<HTMLElement>) => {\n        if (isInputElement(event.target)) {\n            return;\n        }\n\n        const {\n            columnCount,\n            rowCount,\n            onSelect,\n            onRename,\n            onDownload,\n            onShare,\n            onDelete,\n            onOpen,\n            items,\n        }: Props = this.props;\n        const { scrollToColumn: scrollToColumnPrevious, scrollToRow: scrollToRowPrevious }: State = this.state;\n        let { scrollToColumn, scrollToRow }: State = this.state;\n        const currentItem: BoxItem = items[scrollToRow];\n        const ctrlMeta: boolean = event.metaKey || event.ctrlKey;\n\n        // The above cases all prevent default event event behavior.\n        // This is to keep the grid from scrolling after the snap-to update.\n        switch (event.key) {\n            case 'ArrowDown':\n                scrollToRow = ctrlMeta ? rowCount - 1 : Math.min(scrollToRow + 1, rowCount - 1);\n                event.stopPropagation(); // To prevent the arrow down capture of parent\n                break;\n            case 'ArrowLeft':\n                scrollToColumn = ctrlMeta ? 0 : Math.max(scrollToColumn - 1, 0);\n                break;\n            case 'ArrowRight':\n                scrollToColumn = ctrlMeta ? columnCount - 1 : Math.min(scrollToColumn + 1, columnCount - 1);\n                break;\n            case 'ArrowUp':\n                scrollToRow = ctrlMeta ? 0 : Math.max(scrollToRow - 1, 0);\n                break;\n            case 'Enter':\n                onOpen(currentItem);\n                event.preventDefault();\n                break;\n            case 'Delete':\n                onDelete(currentItem);\n                event.preventDefault();\n                break;\n            case 'X':\n                onSelect(currentItem);\n                event.preventDefault();\n                break;\n            case 'D':\n                onDownload(currentItem);\n                event.preventDefault();\n                break;\n            case 'S':\n                onShare(currentItem);\n                event.preventDefault();\n                break;\n            case 'R':\n                onRename(currentItem);\n                event.preventDefault();\n                break;\n            default:\n                return;\n        }\n\n        if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n            event.preventDefault();\n            this.updateScrollState({ scrollToColumn, scrollToRow });\n        }\n    };\n\n    /**\n     * Callback for set of rows rendered\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n    onSectionRendered = ({\n        columnStartIndex,\n        columnStopIndex,\n        rowStartIndex,\n        rowStopIndex,\n    }: {\n        columnStartIndex: number,\n        columnStopIndex: number,\n        rowStartIndex: number,\n        rowStopIndex: number,\n    }): void => {\n        this.columnStartIndex = columnStartIndex;\n        this.columnStopIndex = columnStopIndex;\n        this.rowStartIndex = rowStartIndex;\n        this.rowStopIndex = rowStopIndex;\n    };\n\n    /**\n     * Updates the scroll states\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n    updateScrollState({ scrollToColumn, scrollToRow }: { scrollToColumn: number, scrollToRow: number }): void {\n        const { onScrollToChange } = this.props;\n        onScrollToChange({ scrollToColumn, scrollToRow });\n        this.setState({ scrollToColumn, scrollToRow, focusOnRender: true });\n    }\n\n    /**\n     * Renders the HOC\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n    render() {\n        const { className, children } = this.props;\n        const { scrollToColumn, scrollToRow, focusOnRender }: State = this.state;\n\n        /* eslint-disable jsx-a11y/no-static-element-interactions */\n        return (\n            <div className={className} onKeyDown={this.onKeyDown}>\n                {children({\n                    onSectionRendered: this.onSectionRendered,\n                    scrollToColumn,\n                    scrollToRow,\n                    focusOnRender,\n                })}\n            </div>\n        );\n        /* eslint-enable jsx-a11y/no-static-element-interactions */\n    }\n}\n\nexport default KeyBinder;\n"],"file":"KeyBinder.js"}