{"version":3,"sources":["../../../../src/elements/common/routing/withRouterAndRef.js"],"names":["React","Route","withRouterAndRef","Wrapped","WithRouterAndRef","forwardRef","props","ref","routeProps","name","displayName"],"mappings":";;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,QAAsB,kBAAtB,C,CAEA;AACA;;AACA,eAAe,SAASC,gBAAT,CAA0BC,OAA1B,EAA6D;AACxE,MAAMC,gBAAgB,GAAGJ,KAAK,CAACK,UAAN,CAAyC,UAACC,KAAD,EAAQC,GAAR;AAAA,WAC9D,oBAAC,KAAD,QAAQ,UAAAC,UAAU;AAAA,aAAI,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAED;AAAd,SAAuBC,UAAvB,EAAuCF,KAAvC,EAAJ;AAAA,KAAlB,CAD8D;AAAA,GAAzC,CAAzB;AAGA,MAAMG,IAAI,GAAGN,OAAO,CAACO,WAAR,IAAuBP,OAAO,CAACM,IAA/B,IAAuC,WAApD;AACAL,EAAAA,gBAAgB,CAACM,WAAjB,8BAAmDD,IAAnD;AACA,SAAOL,gBAAP;AACH","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { Route } from 'react-router-dom';\n\n// Basically a workaround for the fact that react-router's withRouter cannot forward ref's through\n// functional components. Use this instead to gain the benefits of withRouter but also ref forwarding\nexport default function withRouterAndRef(Wrapped: React.ComponentType<any>) {\n    const WithRouterAndRef = React.forwardRef<Object, React.Ref<any>>((props, ref) => (\n        <Route>{routeProps => <Wrapped ref={ref} {...routeProps} {...props} />}</Route>\n    ));\n    const name = Wrapped.displayName || Wrapped.name || 'Component';\n    WithRouterAndRef.displayName = `withRouterAndRef(${name})`;\n    return WithRouterAndRef;\n}\n"],"file":"withRouterAndRef.js"}